I"I <p>在很土豪的微软免费给大家提供 GitHub 的构建服务器受到了小伙伴们的一堆好评之后，微软最近推出了 WPF 的 .NET Core 版本的模板，可以快速上手 WPF 项目的自动构建，支持自动进行单元测试和打包，同时输出打包的文件</p>

<!--more-->

<!-- CreateTime:5/1/2020 8:52:20 AM -->

<p>首先需要创建一个 WPF 项目，最简单的创建方法就是通过下面一句命令行</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dotnet</span> <span class="k">new</span> <span class="n">wpf</span> <span class="p">-</span><span class="n">o</span> <span class="n">Foo</span>
</code></pre></div></div>

<p>此时就创建了一个叫 Foo 的 WPF 项目了，接下来通过 VisualStudio 打开这个项目，咱现在准备放在 GitHub 上进行自动构建，然后打包一个UWP包出来</p>

<p>可以通过 VisualStudio 新建一个打包项目，这个打包项目就可以将 win32 应用打包为 UWP 包</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20204302228221572.jpg" alt="" /></p>

<p>暂时先使用测试的证书，创建测试证书的方法就是双击打包项目的 Package.appxmanifest 文件，点击打包，然后点击选择证书</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板1.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20204302229314549.jpg" alt="" /></p>

<p>点击创建然后输入名字点击确定就可以，请看下图</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板2.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20204302230254238.jpg" alt="" /></p>

<p>此时就创建了 <code class="language-plaintext highlighter-rouge">Foo_TemporaryKey.pfx</code> 证书文件，当然你的证书名应该和我不相同</p>

<p>在进行 GitHub 的 Action 构建的时候，需要将证书作为 base64 存放，存放在 GitHub 的凭据里面，这样能保持项目的安全</p>

<p>在使用 dotnet 的时候，有一个特别好用的功能叫 dotnet tool 通过这个功能，可以使用很多大佬写的工具，当然就包括了将文件转换为 base64 的工具啦</p>

<p>我上次告诉小伙伴，请他的 dotnet base64 项目添加文件的支持 https://github.com/Towmeykaw/dotnet-base64/issues/2 然后小伙伴很快就支持了这个功能，此时可以通过一句命令安装这个工具</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">dotnet</span> <span class="n">tool</span> <span class="n">install</span> <span class="p">-</span><span class="n">g</span> <span class="n">dotnet</span><span class="p">-</span><span class="n">base64</span>
</code></pre></div></div>

<p>接下来就可以通过 <code class="language-plaintext highlighter-rouge">base64</code> 这个命令将文件转换为 base64 了，尝试进入到打包项目里面，假设打包项目的测试证书文件是  <code class="language-plaintext highlighter-rouge">Foo_TemporaryKey.pfx</code> 文件，那么输入下面代码就可以看到将证书文件转换为 base64 字符串</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">base64</span> <span class="p">-</span><span class="n">f</span> <span class="n">Foo_TemporaryKey</span><span class="p">.</span><span class="n">pfx</span>
</code></pre></div></div>

<p>当然，输出到控制台不是很好复制，使用下面代码可以让这个工具输出到文件里面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">base64</span> <span class="p">-</span><span class="n">f</span> <span class="n">Foo_TemporaryKey</span><span class="p">.</span><span class="n">pfx</span> <span class="p">-</span><span class="n">o</span> <span class="n">base64</span><span class="p">.</span><span class="n">txt</span>
</code></pre></div></div>

<p>此时就可以拿到了 base64 文件了</p>

<p>打开 GitHub 的项目的设置，进入到 Secrets 页面</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板3.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20204302238184084.jpg" alt="" /></p>

<p>点击 Add a new secret 新建保密信息</p>

<p>此时输入 Base64_Encoded_Pfx 作为保密信息名，内容请填写刚才转换的 base64 的内容。此时填写的保密信息名将和创建的模板的内容相同，就不需要做更多的更改</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板4.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2020430224019618.jpg" alt="" /></p>

<p>点击添加，然后进入 Action 页面</p>

<!-- ![](image/GitHub Action 新上线 WPF .NET Core 自动构建模板/GitHub Action 新上线 WPF .NET Core 自动构建模板5.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20204302240577115.jpg" alt="" /></p>

<p>此时可以看到新推出的 WPF 构建项目</p>

<p>点击 set up this workflow 按钮就可以进行创建，此时需要填写的内容如下</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">env</span><span class="p">:</span>
      <span class="n">Solution_Name</span><span class="p">:</span> <span class="n">your</span><span class="p">-</span><span class="n">solution</span><span class="p">-</span><span class="n">name</span>                         <span class="err">#</span> <span class="err">替换为解决方案名</span> <span class="err">如</span> <span class="n">MyWpfApp</span><span class="p">.</span><span class="n">sln</span><span class="p">.</span>
      <span class="n">Test_Project_Path</span><span class="p">:</span> <span class="n">your</span><span class="p">-</span><span class="n">test</span><span class="p">-</span><span class="n">project</span><span class="p">-</span><span class="n">path</span>                 <span class="err">#</span> <span class="err">替换为测试项目的路径</span> <span class="err">如</span> <span class="n">MyWpfApp</span><span class="p">.</span><span class="n">Tests</span><span class="err">\</span><span class="n">MyWpfApp</span><span class="p">.</span><span class="n">Tests</span><span class="p">.</span><span class="n">csproj</span><span class="p">.</span>
      <span class="n">Wap_Project_Directory</span><span class="p">:</span> <span class="n">your</span><span class="p">-</span><span class="n">wap</span><span class="p">-</span><span class="n">project</span><span class="p">-</span><span class="n">directory</span><span class="p">-</span><span class="n">name</span>    <span class="err">#</span> <span class="err">替换为相对于解决方案的打包项目文件夹</span> <span class="err">如</span> <span class="n">MyWpfApp</span><span class="p">.</span><span class="n">Package</span><span class="p">.</span>
      <span class="n">Wap_Project_Path</span><span class="p">:</span> <span class="n">your</span><span class="p">-</span><span class="n">wap</span><span class="p">-</span><span class="n">project</span><span class="p">-</span><span class="n">path</span>                   <span class="err">#</span> <span class="err">替换为打包项目文件路径</span> <span class="err">如</span> <span class="n">MyWpf</span><span class="p">.</span><span class="n">App</span><span class="p">.</span><span class="n">Package</span><span class="err">\</span><span class="n">MyWpfApp</span><span class="p">.</span><span class="n">Package</span><span class="p">.</span><span class="n">wapproj</span><span class="p">.</span>
</code></pre></div></div>

<p>替换完成之后点击 Start commit 就完成啦</p>

<p>等待打包完成之后，会自动上传到 artifacts 可以下载，下载的内容就是 UWP 包</p>

:ET