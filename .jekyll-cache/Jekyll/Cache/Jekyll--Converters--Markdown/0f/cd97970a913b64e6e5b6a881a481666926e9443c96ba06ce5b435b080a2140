I"Z(<p>最近我在项目写了几万行代码，小伙伴担心会让程序启动速度变慢，所以本渣就来做测试。
本渣使用了代码创建器，创建了 1000 个垃圾文件，这些文件都很简单。我将这些文件放在一个控制台项目里，没有做任何的引用，然后使用 dotTrace 测试控制台启动的时间。</p>

<!--more-->

<!-- CreateTime:2018/10/31 14:07:06 -->

<!-- 标签：C#，性能测试 -->

<p>我同时还写了一个空白的控制台项目，连输出都没有，请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Diagnostics</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">KejerbopaNekereyeresereJemayRouxouqou</span>
<span class="p">{</span>
    <span class="k">class</span> <span class="nc">Program</span>
    <span class="p">{</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
         
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>这应该就是最快的控制台的代码了，这时使用 dotTrace 附加调试这个项目</p>

<!-- ![](image/C# 程序内的类数量对程序启动的影响/C# 程序内的类数量对程序启动的影响0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20181012962573" alt="" /></p>

<p>附加调试可以看到运行的时间都不是自己写的代码的时间，总时间是 138ms 实际运行的时间会比这个少。每个人的设备测试的时间都会不相同，而且每个时间运行的值都不太一样</p>

<!-- ![](image/C# 程序内的类数量对程序启动的影响/C# 程序内的类数量对程序启动的影响1.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2018101291430892" alt="" /></p>

<p>我接着运行了2次，收集到的空控制台窗口的运行时间</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">空控制台窗口运行时间</span>

<span class="err">第一次：</span><span class="m">138</span><span class="n">ms</span>
<span class="err">第二次：</span><span class="m">110</span><span class="n">ms</span>
<span class="err">第三次：</span><span class="m">116</span><span class="n">ms</span>
</code></pre></div></div>

<p>写一个空白的类是很简单的，我使用了下面的代码创建随机的类的名</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">WhairchooHerdo</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="nf">LemgeDowbovou</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">zarwallsayKeesar</span> <span class="p">=</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span> <span class="n">_ran</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="sc">'A'</span><span class="p">,</span> <span class="sc">'Z'</span> <span class="p">+</span> <span class="m">1</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">lardurDairlel</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringBuilder</span><span class="p">();</span>
            <span class="n">lardurDairlel</span><span class="p">.</span><span class="nf">Append</span><span class="p">(</span><span class="n">zarwallsayKeesar</span><span class="p">);</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">5</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="n">lardurDairlel</span><span class="p">.</span><span class="nf">Append</span><span class="p">((</span><span class="kt">char</span><span class="p">)</span><span class="n">_ran</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="sc">'a'</span><span class="p">,</span> <span class="sc">'z'</span><span class="p">));</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="n">lardurDairlel</span><span class="p">.</span><span class="nf">ToString</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">Random</span> <span class="n">_ran</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>然后使用下面代码创建随机的类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">RelawcereMirouxayTibe</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">terebawbemTitirear</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WhairchooHerdo</span><span class="p">();</span>

            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">1000</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">pereviCirsir</span> <span class="p">=</span> <span class="n">terebawbemTitirear</span><span class="p">.</span><span class="nf">LemgeDowbovou</span><span class="p">();</span>

                <span class="kt">var</span> <span class="n">nemhaSibemnoosa</span> <span class="p">=</span> <span class="s">$@"</span><span class="err">
</span><span class="s">using System;</span><span class="err">
</span><span class="s">using System.Collections.Generic;</span><span class="err">
</span><span class="s">using System.Text;</span><span class="err">

</span><span class="s">namespace LecuryouWuruhempa</span><span class="err">
</span><span class="p">{{</span>
    <span class="k">class</span> <span class="err">{</span><span class="nc">pereviCirsir</span><span class="p">}</span>
    <span class="p">{{</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Foo</span> <span class="p">{{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}}</span>
    <span class="p">}}</span>
<span class="p">}</span><span class="s">}"</span><span class="p">;</span>

                <span class="kt">var</span> <span class="n">jisqeCorenerairTurpalhee</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">DirectoryInfo</span><span class="p">(</span><span class="s">"林德熙临时文件"</span><span class="p">);</span>

                <span class="n">jisqeCorenerairTurpalhee</span><span class="p">.</span><span class="nf">Create</span><span class="p">();</span>

                <span class="n">File</span><span class="p">.</span><span class="nf">WriteAllText</span><span class="p">(</span><span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">jisqeCorenerairTurpalhee</span><span class="p">.</span><span class="n">FullName</span><span class="p">,</span> <span class="n">pereviCirsir</span> <span class="p">+</span> <span class="s">".cs"</span><span class="p">),</span> <span class="n">nemhaSibemnoosa</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>

</code></pre></div></div>

<p>这样就可以创建 1000 个类，创建一个空白的控制台项目，引用这些类</p>

<p>然后运行一个有1000个类的空白控制台项目，第一次运行的时间居然是 67ms 十分少</p>

<!-- ![](image/C# 程序内的类数量对程序启动的影响/C# 程序内的类数量对程序启动的影响2.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2018101291718318" alt="" /></p>

<p>我同样运行3次，收集到下面信息</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="m">1000</span><span class="err">个类的空控制台窗口运行时间</span>

<span class="err">第一次：</span><span class="m">67</span><span class="n">ms</span>
<span class="err">第二次：</span><span class="m">102</span><span class="n">ms</span>
<span class="err">第三次：</span><span class="m">117</span><span class="n">ms</span>
</code></pre></div></div>

<p>所以如果一个类不被引用，即使一个工程里有很多的类，对软件的启动影响几乎没有影响</p>

<p>接着还是和之前一样，不过修改为空控制台项目引用 dll 这个 dll 里面有 1000 个类</p>

<p>空白的项目是 KejerbopaNekereyeresereJemayRouxouqou.exe 引用的 dll 是 MeeLearlerepeda.exe 可以看到有 1000 个类还是比较大</p>

<!-- ![](image/C# 程序内的类数量对程序启动的影响/C# 程序内的类数量对程序启动的影响3.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20181012103919886" alt="" /></p>

<p>同样测试三次</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>引用1000个类的dll 空控制台窗口运行时间

第一次：113ms
第二次：103ms
第三次：117ms
</code></pre></div></div>

<p>从上面数据可以看到，几乎没有任何影响</p>

:ET