I"_9<p>在使用 StylusPlugIn 的时候会出现这样的坑，只要一个元素附加有 StylusPlugIn 加入到视觉树，在这个元素上面放另一个没有附加 StylusPlugIn 的元素，点击上面的元素，下面的元素的 StylusPlugIn 还是可以收到触摸的消息</p>

<!--more-->

<!-- CreateTime:2019/10/18 20:55:35 -->

<!-- csdn -->
<!-- 标签：WPF，笔迹 -->

<p>如果写一个简单的 StylusPlugIn 附加到元素上，可以很快知道我说的问题</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">JallsiniPeagelJurnarbe</span> <span class="p">:</span> <span class="n">StylusPlugIn</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStylusDown</span><span class="p">(</span><span class="n">RawStylusInput</span> <span class="n">rawStylusInput</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Trace</span><span class="p">();</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnStylusDown</span><span class="p">(</span><span class="n">rawStylusInput</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStylusMove</span><span class="p">(</span><span class="n">RawStylusInput</span> <span class="n">rawStylusInput</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Trace</span><span class="p">();</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnStylusMove</span><span class="p">(</span><span class="n">rawStylusInput</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStylusUp</span><span class="p">(</span><span class="n">RawStylusInput</span> <span class="n">rawStylusInput</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Trace</span><span class="p">();</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnStylusUp</span><span class="p">(</span><span class="n">rawStylusInput</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">Trace</span><span class="p">([</span><span class="n">CallerMemberName</span><span class="p">]</span> <span class="kt">string</span> <span class="n">name</span> <span class="p">=</span> <span class="s">""</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">Debug</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">name</span><span class="p">);</span>
        <span class="p">}</span>

    <span class="p">}</span>
</code></pre></div></div>

<p>再创建一个 UIElement 附加这个 JallsiniPeagelJurnarbe 将 UIElement 添加到界面，就可以在触摸的时候看到输出</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">MeexikelelHaiwurbe</span> <span class="p">:</span> <span class="n">UIElement</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">public</span> <span class="nf">MeexikelelHaiwurbe</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">dynamicRenderer</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">JallsiniPeagelJurnarbe</span><span class="p">();</span>
            <span class="n">StylusPlugIns</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">dynamicRenderer</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>现在摸一下屏幕，可以看到不断输出</p>

<p>但是如果在这个元素上面再放一个元素会怎样？</p>

<p>下面创建一个用户控件，这个用户控件非常简单，我就不放代码了</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="p">&lt;</span><span class="n">local</span><span class="p">:</span><span class="n">MeexikelelHaiwurbe</span><span class="p">&gt;&lt;/</span><span class="n">local</span><span class="p">:</span><span class="n">MeexikelelHaiwurbe</span><span class="p">&gt;</span>

        <span class="p">&lt;</span><span class="n">local</span><span class="p">:</span><span class="n">NabayparKawquheTea</span> <span class="n">HorizontalAlignment</span><span class="p">=</span><span class="s">"Center"</span> <span class="n">VerticalAlignment</span><span class="p">=</span><span class="s">"Center"</span><span class="p">&gt;&lt;/</span><span class="n">local</span><span class="p">:</span><span class="n">NabayparKawquheTea</span><span class="p">&gt;</span>

</code></pre></div></div>

<!-- ![](image/WPF 解决 StylusPlugIn 点击穿透问题/WPF 解决 StylusPlugIn 点击穿透问题0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20191811622277" alt="" /></p>

<p>此时摸到了 <code class="language-plaintext highlighter-rouge">林德熙是逗比</code> 的元素，在 JallsiniPeagelJurnarbe 还是可以收到触摸的消息，如果是通过 JallsiniPeagelJurnarbe 做书写，那么就会发现在 <code class="language-plaintext highlighter-rouge">林德熙是逗比</code> 的元素后面进行了书写，此时在 <code class="language-plaintext highlighter-rouge">林德熙是逗比</code> 的元素的 Down Move 函数使用 <code class="language-plaintext highlighter-rouge">e.Handle = true</code> 也没有用，因为 StylusPlugIn 走的不是路由事件</p>

<p>这个问题就是 StylusPlugIn 点击穿透问题，虽然在元素上面放了另一个元素，但是在触摸的时候就像上面的元素不存在一样</p>

<p>一个解决方法是在上面的元素上创建一个空白的 StylusPlugIn 这样就可以防止点击穿透</p>

<p>刚才创建的 <code class="language-plaintext highlighter-rouge">林德熙是逗比</code> 的元素，在这个元素的构造函数添加一个空白的 StylusPlugIn 就可以解决这个问题</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">NabayparKawquheTea</span> <span class="p">:</span> <span class="n">UserControl</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="nf">NabayparKawquheTea</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="nf">InitializeComponent</span><span class="p">();</span>
            <span class="n">StylusPlugIns</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="k">new</span> <span class="nf">LihemtugeJootrasLeresu</span><span class="p">());</span>
        <span class="p">}</span>
    <span class="p">}</span>

    <span class="k">public</span> <span class="k">class</span> <span class="nc">LihemtugeJootrasLeresu</span> <span class="p">:</span> <span class="n">StylusPlugIn</span>
    <span class="p">{</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>现在的触摸将会很诡异，为了说明这时的触摸是怎样的，需要再添加一点代码</p>

<p>现在白色部分是底层的元素，灰色的说德熙是逗比的元素放在底层元素上面，然后进行一次触摸</p>

<p>从底层元素按下，然后移动到说德熙是逗比的元素上，接着移到底层元素上抬起</p>

<p><img src="http://image.acmx.xyz/lindexi%2F201918145941588" alt="" /></p>

<!-- ![](image/WPF 解决 StylusPlugIn 点击穿透问题/WPF 解决 StylusPlugIn 点击穿透问题 1.gif) -->

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">底层的元素</span><span class="n">OnStylusEnter</span>
<span class="err">底层的元素</span><span class="n">OnStylusDown</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusEnter</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusLeave</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusEnter</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusLeave</span>
<span class="err">底层的元素</span><span class="n">OnStylusUp</span>
</code></pre></div></div>

<p>此时移动到说德熙是逗比的元素上在底层的元素依然可以接收到 Move 的消息</p>

<p>如果是从说德熙是逗比的元素上按下，然后移动到底层元素，请看下图</p>

<p><img src="http://image.acmx.xyz/lindexi%2F20191815441309" alt="" /></p>

<!-- ![](image/WPF 解决 StylusPlugIn 点击穿透问题/WPF 解决 StylusPlugIn 点击穿透问题 2.gif) -->

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">底层的元素</span><span class="n">OnStylusEnter</span>
<span class="err">底层的元素</span><span class="n">OnStylusDown</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusEnter</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusDown</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusLeave</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusEnter</span>
<span class="err">说德熙是逗比的元素</span> <span class="n">OnStylusLeave</span>
<span class="err">底层的元素</span><span class="n">OnStylusUp</span>
</code></pre></div></div>

<p>虽然说德熙是逗比的元素的层级比底层的元素高，但是首先命中的是底层的元素然后才是 <code class="language-plaintext highlighter-rouge">说德熙是逗比</code> 的元素收到 down 如果此时在底层的元素抬手，那么就会在底层的元素收到 up 而在说德熙是逗比的元素上没有收到消息</p>

<p>通过这个方法可以只要 <code class="language-plaintext highlighter-rouge">说德熙是逗比</code> 的元素有触摸，就设置底层的元素失去焦点，通过在 底层的元素 添加一个方法，调用这个方法就不处理当前的触摸</p>

<p>在使用 StylusPlugIns 集合，使用框架的方法判断是通过在 <code class="language-plaintext highlighter-rouge">_plugInCollectionList</code> 字段拿到所有的集合，也就是先添加到视觉树的控件，将会在 <code class="language-plaintext highlighter-rouge">PenContexts.AddStylusPlugInCollection</code> 加入到字段。所以遍历的顺序和视觉树顺序无关，而是和加入视觉树的顺序有关。详细请看 <a href="https://blog.lindexi.com/post/WPF-%E9%AB%98%E9%80%9F%E4%B9%A6%E5%86%99-StylusPlugIn-%E5%8E%9F%E7%90%86.html">
    WPF 高速书写 StylusPlugIn 原理</a></p>

<p>那么在 WPF 的 DynamicRenderer 是如何处理的？</p>

<p>在 StylusPlugIn 有一个方法是 OnStylusDownProcessed 通过这个方法可以判断在 UI 线程命中测试的附加元素有没有收到输入，通过判断参数 <code class="language-plaintext highlighter-rouge">targetVerified</code> 的值就可以知道</p>

<p>如果在 UI 线程的元素刚好也收到了触摸的消息，这里的 <code class="language-plaintext highlighter-rouge">targetVerified</code> 就是 true 否则就是 false 当然这个方法要求在 down 的时候调用 NotifyWhenProcessed 方法才可以</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStylusDown</span><span class="p">(</span><span class="n">RawStylusInput</span> <span class="n">rawStylusInput</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Trace</span><span class="p">();</span>

            <span class="c1">// 调用这个方法之后才会触发 OnStylusDownProcessed 在主线程收到触摸</span>
            <span class="c1">// 如果附加的元素收到了路由触摸，参数 targetVerified 为 true 通过这个方法可以判断当前的点击的元素是否在上面有其他元素</span>
            <span class="n">rawStylusInput</span><span class="p">.</span><span class="nf">NotifyWhenProcessed</span><span class="p">(</span><span class="s">"林德熙是逗比"</span><span class="p">);</span>

            <span class="k">base</span><span class="p">.</span><span class="nf">OnStylusDown</span><span class="p">(</span><span class="n">rawStylusInput</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>这里的 NotifyWhenProcessed 传入的参数将会是在 OnStylusDownProcessed 的第一个参数 callbackData 返回，在 DynamicRenderer 就是传入了 StrokeInfo 然后在这个函数判断</p>

<p><img src="https://i.loli.net/2019/01/08/5c34560816e9e.gif" alt="" /></p>

<!-- ![](image/WPF 解决 StylusPlugIn 点击穿透问题/WPF 解决 StylusPlugIn 点击穿透问题 3.gif) -->

<p>所以解决这个问题有两个方法，第一个就是在元素上面添加一个 StylusPlugIn 如果收到了消息就设置另一个元素的 StylusPlugIn 失去焦点，另一个方法是在元素通过 NotifyWhenProcessed 设置如果主线程的元素可以收到触摸的方法</p>

<p>第一个方法是需要在其他所有元素上面添加 StylusPlugIn 有代码耦合</p>

<p>第二个方法需要等待主线程收到消息，在笔迹就出现点击的时候出现了闪烁，因为触摸线程比主线程先收到点击</p>

<p>代码 <a href="https://download.csdn.net/download/lindexi_gd/10903908">WPF 解决 StylusPlugIn 点击穿透问题-CSDN下载</a></p>

<p><a href="https://lindexi.oschina.io/lindexi/post/WPF-%E9%AB%98%E6%80%A7%E8%83%BD%E7%AC%94.html">WPF 高性能笔</a></p>

:ET