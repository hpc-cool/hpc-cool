I"z<p>现在很多小伙伴开始使用了 dotnet core 项目，但是如果是从以前的 dotnet framework 的项目修改为 dotnet core 项目格式，会发现编译的时候出现了 AssemblyInfo 里面的很多值重复</p>

<!--more-->

<!-- CreateTime:2019/11/29 8:58:48 -->

<!-- 标签：VisualStudio -->

<p>如果直接修改格式，没有删除 AssemblyInfo 文件，很多时候会发现编译的时候出现下面提示</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyCompanyAttribute</span><span class="err">”特性重复</span> 
    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyConfigurationAttribute</span><span class="err">”特性重复</span> 
    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyFileVersionAttribute</span><span class="err">”特性重复</span> 
    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyProductAttribute</span><span class="err">”特性重复</span> 
    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyTitleAttribute</span><span class="err">”特性重复</span> 
    <span class="n">Error</span> <span class="n">CS0579</span><span class="p">:</span> <span class="err">“</span><span class="n">System</span><span class="p">.</span><span class="n">Reflection</span><span class="p">.</span><span class="n">AssemblyVersionAttribute</span><span class="err">”特性重复</span> 
</code></pre></div></div>

<p>修复编译时候提示项目文件特性重复有两个方法可以修复</p>

<h2 id="删除重复的特性">删除重复的特性</h2>

<p>打开 AssemblyInfo 文件，几乎可以删除里面的所有代码，除了 ComVisible 和 ThemeInfo 和其他自己添加的代码，其他都可以删除</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System.Runtime.InteropServices</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Windows</span><span class="p">;</span>


<span class="c1">// 将 ComVisible 设置为 false 会使此程序集中的类型</span>
<span class="c1">//对 COM 组件不可见。如果需要从 COM 访问此程序集中的类型</span>
<span class="c1">//请将此类型的 ComVisible 特性设置为 true。</span>
<span class="p">[</span><span class="n">assembly</span><span class="p">:</span> <span class="nf">ComVisible</span><span class="p">(</span><span class="k">false</span><span class="p">)]</span>

<span class="c1">//若要开始生成可本地化的应用程序，请设置</span>
<span class="c1">//.csproj 文件中的 &lt;UICulture&gt;CultureYouAreCodingWith&lt;/UICulture&gt;</span>
<span class="c1">//例如，如果您在源文件中使用的是美国英语，</span>
<span class="c1">//使用的是美国英语，请将 &lt;UICulture&gt; 设置为 en-US。  然后取消</span>
<span class="c1">//对以下 NeutralResourceLanguage 特性的注释。  更新</span>
<span class="c1">//以下行中的“en-US”以匹配项目文件中的 UICulture 设置。</span>

<span class="c1">//[assembly: NeutralResourcesLanguage("en-US", UltimateResourceFallbackLocation.Satellite)]</span>


<span class="p">[</span><span class="n">assembly</span><span class="p">:</span> <span class="nf">ThemeInfo</span><span class="p">(</span>
    <span class="n">ResourceDictionaryLocation</span><span class="p">.</span><span class="n">None</span><span class="p">,</span> <span class="c1">//主题特定资源词典所处位置</span>
                                     <span class="c1">//(未在页面中找到资源时使用，</span>
                                     <span class="c1">//或应用程序资源字典中找到时使用)</span>
    <span class="n">ResourceDictionaryLocation</span><span class="p">.</span><span class="n">SourceAssembly</span> <span class="c1">//常规资源词典所处位置</span>
                                              <span class="c1">//(未在页面中找到资源时使用，</span>
                                              <span class="c1">//、应用程序或任何主题专用资源字典中找到时使用)</span>
<span class="p">)]</span>

</code></pre></div></div>

<h2 id="不自动创建-assemblyinfo-特性">不自动创建 AssemblyInfo 特性</h2>

<p>在新的 dotnet core 格式，默认会自动创建 AssemblyInfo 特性，编译不通过的原因是存在 AssemblyInfo 文件和使用 dotnet core 项目格式创建的 AssemblyInfo 特性除了删除 AssemblyInfo 文件还可以让 dotnet core 项目格式不要创建</p>

<p>通过在 csproj 添加下面代码可以不创建</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">GenerateAssemblyInfo</span><span class="p">&gt;</span><span class="k">false</span><span class="p">&lt;/</span><span class="n">GenerateAssemblyInfo</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>上面这个代码需要放在 PropertyGroup 里，请看下面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">&lt;</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">OutputType</span><span class="p">&gt;</span><span class="n">WinExe</span><span class="p">&lt;/</span><span class="n">OutputType</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">TargetFramework</span><span class="p">&gt;</span><span class="n">net472</span><span class="p">&lt;/</span><span class="n">TargetFramework</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">UseWPF</span><span class="p">&gt;</span><span class="k">true</span><span class="p">&lt;/</span><span class="n">UseWPF</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">GenerateAssemblyInfo</span><span class="p">&gt;</span><span class="k">false</span><span class="p">&lt;/</span><span class="n">GenerateAssemblyInfo</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>这里有一个好用的迁移工具 <a href="https://github.com/hvanbakel/CsprojToVs2017">CsprojToVs2017 Tooling for converting pre 2017 project to the new Visual Studio 2017 format.</a> 可以将之前的 csporj 格式修改为新的 csproj 格式</p>

<p><a href="https://blog.lindexi.com/post/%E4%BB%8E%E4%BB%A5%E5%89%8D%E7%9A%84%E9%A1%B9%E7%9B%AE%E6%A0%BC%E5%BC%8F%E8%BF%81%E7%A7%BB%E5%88%B0-VS2017-%E6%96%B0%E9%A1%B9%E7%9B%AE%E6%A0%BC%E5%BC%8F.html">从以前的项目格式迁移到 VS2017 新项目格式</a></p>

<p><a href="https://blog.lindexi.com/post/Roslyn-%E7%A6%81%E6%AD%A2-sdk-style-csproj-%E9%BB%98%E8%AE%A4%E5%BC%95%E7%94%A8-Compile-%E4%BB%A3%E7%A0%81%E6%96%87%E4%BB%B6.html">Roslyn 禁止 sdk style csproj 默认引用 Compile 代码文件</a></p>

:ET