I"._<p>在当前所有渲染框架里面，做 2D 渲染的，最好的框架是 Win2d 这个提供了大量底层接口封装，不仅性能高同时接口设计非常好
在很久之前，只有在 UWP 等现代应用才能使用 Win2d 而 WPF 是不能使用的。好在微软开放了一些黑科技，可以在 WPF 上使用 Win2d 渲染，下面就让我告诉大家如何在 WPF 上使用</p>

<!--more-->

<!-- CreateTime:2019/11/29 8:45:46 -->

<!-- csdn -->

<p>在 2019年7月03日 这个技术还是属于黑科技，还没有正式发布，在开始使用之前，有一定的环境要求</p>

<ul>
  <li>需要 VisualStudio 2017 和以上，点击<a href="https://visualstudio.microsoft.com/zh-hans/">Visual Studio下载链接</a>下载最新的工具</li>
  <li>需要在 VisualStudio 的开发添加 UWP 和桌面开发</li>
  <li>需要在设备安装 .NET Framework 4.7.2 及以上，同时新建项目需要选择 .NET Framework 4.7.2 和以上。有小伙伴说 45 也是可以的，但是步骤会更多，建议小伙伴在看完本文测试过了才尝试降级</li>
  <li>开发和运行设备是 Windows 10 版本 1903 和以上</li>
  <li>开发设备上安装 UWP 的 SDK 版本是 18362 及以上 <a href="https://developer.microsoft.com/zh-cn/windows/downloads/windows-10-sdk">Windows 10 SDK - Windows 应用开发</a></li>
</ul>

<p>新建一个 WPF 的 .NET Framework 4.8 项目，在这个项目上面安装下面 NuGet 包</p>

<ul>
  <li>Microsoft.Windows.SDK.Contracts</li>
  <li>Microsoft.VCRTForwarders.140</li>
  <li>System.Numerics.Vectors</li>
  <li>Win2D.uwp</li>
</ul>

<p>如果有安装不上的，例如有下面提示</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">无法安装程序包“</span><span class="n">Win2D</span><span class="p">.</span><span class="n">uwp</span> <span class="m">1.23</span><span class="p">.</span><span class="m">0</span><span class="err">”。你正在尝试将此程序包安装到目标为“</span><span class="p">.</span><span class="n">NETFramework</span><span class="p">,</span><span class="n">Version</span><span class="p">=</span><span class="n">v4</span><span class="p">.</span><span class="m">8</span><span class="err">”的项目中，但该程序包不包含任何与该框架兼容的程序集引用或内容文件。有关详细信息，请联系程序包作者。</span>
</code></pre></div></div>

<p>右击编辑 csproj 文件，在 csproj 文件里面添加下面代码。注意此时你新建的项目使用的 nuget 格式需要新的 Nuget 格式，也就是不带 package.config 文件的格式</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"Microsoft.VCRTForwarders.140"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="n">Version</span><span class="p">&gt;</span><span class="m">1.0</span><span class="p">.</span><span class="m">0</span><span class="p">-</span><span class="n">rc</span><span class="p">&lt;/</span><span class="n">Version</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">PackageReference</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"Microsoft.Windows.SDK.Contracts"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="n">Version</span><span class="p">&gt;</span><span class="m">10.0</span><span class="p">.</span><span class="m">18362.2002</span><span class="p">-</span><span class="n">preview</span><span class="p">&lt;/</span><span class="n">Version</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">PackageReference</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"System.Numerics.Vectors"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="n">Version</span><span class="p">&gt;</span><span class="m">4.5</span><span class="p">.</span><span class="m">0</span><span class="p">&lt;/</span><span class="n">Version</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">PackageReference</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageReference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"Win2D.uwp"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="n">Version</span><span class="p">&gt;</span><span class="m">1.22</span><span class="p">.</span><span class="m">0</span><span class="p">&lt;/</span><span class="n">Version</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">PackageReference</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>这样就可以强制安装</p>

<p>准备好了环境和 NuGet 之后就可以开始开发了</p>

<p>和之前博客 <a href="https://blog.lindexi.com/post/WPF-%E4%BD%BF%E7%94%A8-Composition-API-%E5%81%9A%E9%AB%98%E6%80%A7%E8%83%BD%E6%B8%B2%E6%9F%93.html">WPF 使用 Composition API 做高性能渲染</a> 所说方法搭建代码</p>

<p>搭建出 CompositionHost 和 CompositionHostControl 两个类，然后在 CompositionHostControl 里面添加 Win2d 相关方法</p>

<p>在 CompositionHostControl 的构造函数给 Win2d 初始化</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">readonly</span> <span class="n">CanvasDevice</span> <span class="n">_canvasDevice</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">CompositionHostControl</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="nf">InitializeComponent</span><span class="p">();</span>            

            <span class="c1">// 手动高亮，下面代码用于创建 Win2d 的渲染设备</span>
            <span class="n">_canvasDevice</span> <span class="p">=</span> <span class="n">CanvasDevice</span><span class="p">.</span><span class="nf">GetSharedDevice</span><span class="p">();</span>

            <span class="c1">// 忽略其他代码</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>以上忽略代码可以在 <a href="https://github.com/microsoft/Windows.UI.Composition-Win32-Samples/blob/1eeb30a5e724ff2681f43f4f7aa829476aa894a4/dotnet/WPF/AcrylicEffect/AcrylicEffect/CompositionHostControl.xaml.cs">Windows.UI.Composition-Win32-Samples</a> 找到</p>

<p>在 <code class="language-plaintext highlighter-rouge">CompositionHostControl_Loaded</code> 事件里面才是核心代码</p>

<p>想要让 Win2d 绘制在界面上，需要在界面存放一张平面，让 Win2d 在这个平面上绘制，然后将平面加入到渲染的平面列表里面，这样就可以进行渲染了</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1">// 创建链接 _compositor 和 _canvasDevice 的链接</span>
            <span class="n">_compositionGraphicsDevice</span> <span class="p">=</span> <span class="n">CanvasComposition</span><span class="p">.</span><span class="nf">CreateCompositionGraphicsDevice</span><span class="p">(</span><span class="n">_compositor</span><span class="p">,</span> <span class="n">_canvasDevice</span><span class="p">);</span>

<span class="c1">// 创建一个平面，将会让 Win2d 在这个平面渲染</span>
            <span class="kt">var</span> <span class="n">noiseDrawingSurface</span> <span class="p">=</span> <span class="n">_compositionGraphicsDevice</span><span class="p">.</span><span class="nf">CreateDrawingSurface</span><span class="p">(</span>
                <span class="k">new</span> <span class="n">Windows</span><span class="p">.</span><span class="n">Foundation</span><span class="p">.</span><span class="nf">Size</span><span class="p">(</span><span class="n">_rectWidth</span><span class="p">,</span> <span class="n">_rectHeight</span><span class="p">),</span>
                <span class="n">DirectXPixelFormat</span><span class="p">.</span><span class="n">B8G8R8A8UIntNormalized</span><span class="p">,</span>
                <span class="n">DirectXAlphaMode</span><span class="p">.</span><span class="n">Premultiplied</span><span class="p">);</span>
            <span class="c1">// 忽略一些代码</span>

<span class="c1">// 在这个函数里面就是让 Win2d 绘制的方法，其实在我自己的项目里面没有用到 noiseFilePath 变量</span>
            <span class="nf">LoadSurface</span><span class="p">(</span><span class="n">noiseDrawingSurface</span><span class="p">,</span> <span class="n">noiseFilePath</span><span class="p">);</span>

<span class="c1">// 在 Win2d 渲染到平面完成之后，将这个平面作为一个画刷用于在之后的效果</span>
            <span class="n">_noiseSurfaceBrush</span> <span class="p">=</span> <span class="n">_compositor</span><span class="p">.</span><span class="nf">CreateSurfaceBrush</span><span class="p">(</span><span class="n">noiseDrawingSurface</span><span class="p">);</span>
</code></pre></div></div>

<p>在 LoadSurface 方法里面进行绘制，请看创建代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">void</span> <span class="nf">LoadSurface</span><span class="p">(</span><span class="n">CompositionDrawingSurface</span> <span class="n">surface</span><span class="p">,</span> <span class="kt">string</span> <span class="n">path</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// Draw to surface.</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">ds</span> <span class="p">=</span> <span class="n">CanvasComposition</span><span class="p">.</span><span class="nf">CreateDrawingSession</span><span class="p">(</span><span class="n">surface</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">ds</span><span class="p">.</span><span class="nf">Clear</span><span class="p">(</span><span class="n">Colors</span><span class="p">.</span><span class="n">Transparent</span><span class="p">);</span>

                <span class="kt">var</span> <span class="n">rect</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Windows</span><span class="p">.</span><span class="n">Foundation</span><span class="p">.</span><span class="nf">Rect</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">_rectWidth</span><span class="p">,</span> <span class="n">_rectHeight</span><span class="p">);</span>
                <span class="n">ds</span><span class="p">.</span><span class="nf">FillRectangle</span><span class="p">(</span><span class="n">rect</span><span class="p">,</span> <span class="n">Colors</span><span class="p">.</span><span class="n">Coral</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>这样就可以将 Win2d 的内容渲染到一个平面上，然后将这个平面作为画刷，在微软的代码里面是将这个画刷作为亚克力的画刷，然后将亚克力放在内容里面</p>

<p>下面是简化的代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="nf">LoadSurface</span><span class="p">(</span><span class="n">noiseDrawingSurface</span><span class="p">,</span> <span class="n">noiseFilePath</span><span class="p">);</span>
<span class="kt">var</span> <span class="n">visual</span> <span class="p">=</span> <span class="n">_compositor</span><span class="p">.</span><span class="nf">CreateSpriteVisual</span><span class="p">();</span>
<span class="c1">// 忽略 visual 的参数设置</span>
<span class="n">_acrylicVisual</span> <span class="p">=</span> <span class="n">visual</span><span class="p">;</span>
<span class="c1">// 创建亚克力画刷</span>
<span class="n">_acrylicVisual</span><span class="p">.</span><span class="n">Brush</span> <span class="p">=</span> <span class="nf">CreateAcrylicEffectBrush</span><span class="p">();</span>

<span class="c1">// 加入到图层</span>
<span class="n">_containerVisual</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="nf">InsertAtTop</span><span class="p">(</span><span class="n">_acrylicVisual</span><span class="p">);</span>

</code></pre></div></div>

<p>现在就完成了在 WPF 里面使用 Win2d 顺便还提供了亚克力的功能</p>

<p>其实本文主要不是告诉大家如何写代码，而是如何让官方的代码可以运行</p>

<p>在运行过程可能会遇到以下的坑</p>

<p>如在开始编译的时候提示下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">lindexi</span><span class="p">.</span><span class="n">github</span><span class="p">.</span><span class="n">io</span><span class="err">\</span><span class="p">.</span><span class="n">nuget</span><span class="err">\</span><span class="n">packages</span><span class="err">\</span><span class="n">win2d</span><span class="p">.</span><span class="n">uwp</span><span class="err">\</span><span class="m">1.23</span><span class="p">.</span><span class="m">0</span><span class="err">\</span><span class="n">build</span><span class="err">\</span><span class="n">Win2D</span><span class="p">.</span><span class="n">common</span><span class="p">.</span><span class="nf">targets</span><span class="p">(</span><span class="m">37</span><span class="p">,</span><span class="m">5</span><span class="p">):</span> <span class="n">Error</span><span class="p">:</span> <span class="n">This</span> <span class="n">version</span> <span class="n">of</span> <span class="n">Win2D</span> <span class="n">requires</span> <span class="n">Windows</span> <span class="n">SDK</span> <span class="p">&gt;=</span> <span class="m">10.0</span><span class="p">.</span><span class="m">17134.0</span><span class="p">,</span> <span class="n">but</span> <span class="n">TargetPlatformVersion</span> <span class="k">is</span> <span class="m">7.0</span><span class="p">.</span>
</code></pre></div></div>

<p>主要原因是现在 Microsoft.Windows.SDK.Contracts 只能让 Win2d 的 1.22 版本运行，解决方案是将原本的 1.23 版本降级到 1.22 版本</p>

<p>在运行过程，运行到 <code class="language-plaintext highlighter-rouge">_canvasDevice = CanvasDevice.GetSharedDevice()</code> 的时候提示下面的代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">System</span><span class="p">.</span><span class="n">TypeLoadException</span><span class="p">:</span><span class="err">“所请求的</span> <span class="n">Windows</span> <span class="err">运行时类型“</span><span class="n">Microsoft</span><span class="p">.</span><span class="n">Graphics</span><span class="p">.</span><span class="n">Canvas</span><span class="p">.</span><span class="n">CanvasDevice</span><span class="err">”未注册。”</span>

</code></pre></div></div>

<p>这个问题是因为没有在 app.manifest 文件里面添加下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">file</span> <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.dll"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.CanvasDevice"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

   <span class="p">&lt;</span><span class="n">activatableClass</span>      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.UI.Composition.CanvasComposition"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.SaturationEffect"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
       <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.BlendEffect"</span>
        <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
        <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.GaussianBlurEffect"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.ColorSourceEffect"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.CompositeEffect"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.OpacityEffect"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>

    <span class="p">&lt;</span><span class="n">activatableClass</span>
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.CanvasBitmap"</span>
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span>
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>
    <span class="p">&lt;</span><span class="n">activatableClass</span> 
      <span class="n">name</span><span class="p">=</span><span class="s">"Microsoft.Graphics.Canvas.Effects.BorderEffect"</span> 
      <span class="n">threadingModel</span><span class="p">=</span><span class="s">"both"</span> 
      <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:winrt.v1"</span><span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="n">file</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>或者这个文件没有在 csproj 声明，也就是没有在项目文件找到下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">ApplicationManifest</span><span class="p">&gt;</span><span class="n">app</span><span class="p">.</span><span class="n">manifest</span><span class="p">&lt;/</span><span class="n">ApplicationManifest</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>在运行的时候，还是在 <code class="language-plaintext highlighter-rouge">_canvasDevice = CanvasDevice.GetSharedDevice()</code>  提示下面的代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">FileNotFoundException</span><span class="p">:</span><span class="err">“找不到指定的模块。</span> <span class="p">(</span><span class="err">异常来自</span> <span class="n">HRESULT</span><span class="p">:</span><span class="m">0x8007007E</span><span class="p">)</span><span class="err">”</span>
</code></pre></div></div>

<p>这个问题是在输出文件夹缺少文件，请确定当前使用的是 x64 的设备，同时进行 AnyCpu 编译，没有勾选首选 32 的程序</p>

<!-- ![](image/WPF 使用 Win2d 渲染/WPF 使用 Win2d 渲染0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F201973103135536" alt="" /></p>

<p>然后确定在 <code class="language-plaintext highlighter-rouge">bin\debug</code> 文件夹里面是否存在以下文件</p>

<ul>
  <li>vcruntime140_app.dll</li>
  <li>msvcp140_app.dll</li>
  <li>Microsoft.Graphics.Canvas.dll</li>
  <li>System.Numerics.Vectors.dll</li>
  <li>Microsoft.Graphics.Canvas.winmd</li>
</ul>

<p>在安装 <code class="language-plaintext highlighter-rouge">Microsoft.VCRTForwarders.140</code> 默认就会创建前面两个文件，在进行x64编译的时候。如果使用的是 AnyCpu 编译，那么就需要手动拷贝文件</p>

<p>而 Microsoft.Graphics.Canvas.dll 文件是需要手动拷贝的</p>

<p>手动复制文件的方法是打开自己的本地 .nuget 源，在 <code class="language-plaintext highlighter-rouge">c:\Users\用户名\.nuget\packages\</code> 里面可以找到</p>

<p>如我的 Microsoft.VCRTForwarders.140 内容在 <code class="language-plaintext highlighter-rouge">c:\Users\lindexi.github.io\.nuget\packages\microsoft.vcrtforwarders.140\1.0.0-rc\runtimes\win10-x64\native\release\</code> 文件，将里面的文件复制到输出文件夹</p>

<p>打开 <code class="language-plaintext highlighter-rouge">c:\Users\lindexi.github.io\.nuget\packages\win2d.uwp\1.22.0\runtimes\win10-x64\native\</code> 将 Microsoft.Graphics.Canvas.dll 文件复制到输出文件夹</p>

<p>请将上面文件夹的用户名替换为你自己的用户名</p>

<p>当然这样的呆魔大家一定不想使用，于是我将需要添加的文件放在项目文件，设置自动输出，请小伙伴换我的项目试试</p>

<p>我将代码放在 <a href="https://github.com/lindexi/lindexi_gd/tree/05cda6ac394962a10dd4bdf8bdc2d6ab6d3732b1/WeabubiwerekallkairgemRaceenabo">Github</a> 只需要下载代码，然后打开 sln 文件，右击还原项目，然后在 AnyCpu 下按下运行就可以</p>

:ET