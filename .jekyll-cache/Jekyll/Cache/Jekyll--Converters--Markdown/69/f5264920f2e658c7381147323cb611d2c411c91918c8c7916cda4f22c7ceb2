I"_=<p>看到一个圆形好像微软 ProgressRing 控件
<img src="http://image.acmx.xyz/0_1321962945yCXF.gif" alt="0_1321962945yCXF - 副本.gif" />
如何去做这个控件，我们可以用自定义控件</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:16:50 -->

<div id="toc"></div>

<p>新建一个用户控件，可以按 ctrl+shift+a 打开后，选用户控件</p>

<p>我们可以用 Rectangle 做圆形边</p>

<p>只要 Rectangle  <code class="language-plaintext highlighter-rouge">RadiusX&gt;0</code> RadiusX是圆角度</p>

<p>因为每个 Rectangle 都一样，我们可以资源</p>

<p>资源我们写在 Grid</p>

<pre><code class="language-xaml">
        &lt;Grid.Resources&gt;

            

        &lt;/Grid.Resources&gt;

</code></pre>

<!-- 设置 Rectangle  在中间 -->

<p>资源设置需要选 TargetType</p>

<p>我们是 Rectangle ，于是我们还有给他一个 key</p>

<pre><code class="language-xaml">
                &lt;Style x:Key="RectangleStyle1" TargetType="Rectangle"&gt;

                &lt;/Style&gt;

</code></pre>

<p>因为不知道这个要叫什么，就用右击资源</p>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141314.jpg" alt="" /></p>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141329.jpg" alt="" /></p>

<p>vs默认就帮我写了 RectangleStyle1</p>

<p>每个项需要设置属性，使用 Setter</p>

<pre><code class="language-xaml">
                    &lt;Setter Property="" Value=""/&gt;

</code></pre>

<p>设置中间</p>

<pre><code class="language-xaml">
                &lt;Style x:Key="RectangleStyle1" TargetType="Rectangle"&gt;

                    &lt;Setter Property="HorizontalAlignment" Value="Center"/&gt;

                    &lt;Setter Property="VerticalAlignment" Value="Center"/&gt;

                &lt;/Style&gt;

</code></pre>

<p>我们跑一下，看起来 Rectangle 很大</p>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141358.jpg" alt="" /></p>

<!-- ![这里写图片描述](image/201612911107238.png) -->

<p>为看起来比较小，把 Height 改为 20</p>

<pre><code class="language-xaml">
                    &lt;Setter Property="Height" Value="50"/&gt;

                    &lt;Setter Property="Width" Value="2"/&gt;

</code></pre>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141425.jpg" alt="" /></p>

<!-- ![这里写图片描述](image/201612911111820.png) -->

<p>全部资源可以看下面，直接复制是可以</p>

<pre><code class="language-xaml">
 &lt;Style x:Key="RectangleStyle1" TargetType="Rectangle"&gt;

                    &lt;Setter Property="RadiusX" Value="1"/&gt;

                    &lt;Setter Property="RadiusY" Value="2"/&gt;

                    &lt;Setter Property="Fill" Value="Black"/&gt;

                    &lt;Setter Property="Opacity" Value="0.2"/&gt;

                    &lt;Setter Property="RenderTransformOrigin" Value="0.5,0.5"/&gt;

                    &lt;Setter Property="HorizontalAlignment" Value="Center"/&gt;

                    &lt;Setter Property="VerticalAlignment" Value="Top"/&gt;

                    &lt;Setter Property="Height" Value="50"/&gt;

                    &lt;Setter Property="Width" Value="2"/&gt;

                &lt;/Style&gt;

</code></pre>

<p>我们做10个 Rectangle</p>

<p>使用 RectangleStyle1 在 Rectangle 使用 <code class="language-plaintext highlighter-rouge">style="{StaticResource RectangleStyle1}"</code></p>

<p>可以看到我们除了中间，其他都和原来一样。中间是白色比较好，添加 Ellipse 。</p>

<pre><code class="language-xaml">
            &lt;Ellipse Height="10" Width="10" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center"/&gt;

</code></pre>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141443.jpg" alt="" />
<!-- ![这里写图片描述](image/201612911134992.png) --></p>

<p>每个 Rectangle  需要一个名字</p>

<p>我们想要 xaml 的控件会动，可以使用</p>

<pre><code class="language-xaml">
            &lt;Grid.Triggers&gt;

                &lt;EventTrigger RoutedEvent="Grid.Loaded"&gt;

                    &lt;BeginStoryboard&gt;

                        &lt;Storyboard RepeatBehavior="Forever"&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r01" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.00000" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r02" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.08333" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r03" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.16666" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r04" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.24999" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r05" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.33332" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r06" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.41665" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r07" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.49998" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r08" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.58331" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r09" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.66664" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r10" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.74997" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r11" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.83330" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r12" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.91663" To="0"/&gt;

                        &lt;/Storyboard&gt;

                    &lt;/BeginStoryboard&gt;

                &lt;/EventTrigger&gt;

            &lt;/Grid.Triggers&gt;

</code></pre>

<p>Forever 是从开始一直动</p>

<p>我们就写完了我们的控件，如果需要使用控件，就直接写下面代码。注意 local 是我们的命名空间，我们的控件就放在方案的目录，不放在其他文件夹，命名空间也是和方案默认一样。</p>

<pre><code class="language-xaml">
        &lt;local:round &gt;&lt;/local:round&gt;

</code></pre>

<p><img src="http://image.acmx.xyz/fc7733af-8526-44d2-84b9-99b41ef99f4a20161212141515.jpg" alt="" />
<!-- ![这里写图片描述](image/201612911161755.png) --></p>

<p>全部代码</p>

<pre><code class="language-xaml">
round.xaml

&lt;UserControl

    x:Class="roundload.round"

    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"

    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:local="using:roundload"

    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

    mc:Ignorable="d"

    d:DesignHeight="300"

    d:DesignWidth="400"&gt;

    &lt;Grid&gt;

        &lt;Grid&gt;

            &lt;Grid.Resources&gt;

                &lt;Style x:Key="RectangleStyle1" TargetType="Rectangle"&gt;

                    &lt;Setter Property="RadiusX" Value="1"/&gt;

                    &lt;Setter Property="RadiusY" Value="2"/&gt;

                    &lt;Setter Property="Fill" Value="Black"/&gt;

                    &lt;Setter Property="Opacity" Value="0.2"/&gt;

                    &lt;Setter Property="RenderTransformOrigin" Value="0.5,0.5"/&gt;

                    &lt;Setter Property="HorizontalAlignment" Value="Center"/&gt;

                    &lt;Setter Property="VerticalAlignment" Value="Center"/&gt;

                    &lt;Setter Property="Height" Value="50"/&gt;

                    &lt;Setter Property="Width" Value="2"/&gt;

                &lt;/Style&gt;

            &lt;/Grid.Resources&gt;

            &lt;Rectangle x:Name="r01" Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="0"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r02" Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="30"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r03" Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="60"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r04"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="90"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r05"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="120"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r06"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="150"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r07"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="180"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r08"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="210"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r09"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="240"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r10"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="270"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r11"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="300"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Rectangle x:Name="r12"  Style="{StaticResource RectangleStyle1}"&gt;

                &lt;Rectangle.RenderTransform&gt;

                    &lt;RotateTransform Angle="330"/&gt;

                &lt;/Rectangle.RenderTransform&gt;

            &lt;/Rectangle&gt;

            &lt;Ellipse Height="10" Width="10" Fill="White" HorizontalAlignment="Center" VerticalAlignment="Center"/&gt;

            &lt;Grid.Triggers&gt;

                &lt;EventTrigger RoutedEvent="Grid.Loaded"&gt;

                    &lt;BeginStoryboard&gt;

                        &lt;Storyboard RepeatBehavior="Forever"&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r01" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.00000" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r02" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.08333" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r03" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.16666" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r04" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.24999" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r05" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.33332" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r06" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.41665" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r07" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.49998" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r08" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.58331" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r09" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.66664" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r10" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.74997" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r11" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.83330" To="0"/&gt;

                            &lt;DoubleAnimation Storyboard.TargetName="r12" Storyboard.TargetProperty="Opacity" AutoReverse="True" Duration="0:0:0.08333" BeginTime="0:0:0.91663" To="0"/&gt;

                        &lt;/Storyboard&gt;

                    &lt;/BeginStoryboard&gt;

                &lt;/EventTrigger&gt;

            &lt;/Grid.Triggers&gt;

        &lt;/Grid&gt;

    &lt;/Grid&gt;

&lt;/UserControl&gt;

</code></pre>

<pre><code class="language-xaml">
MainPage

&lt;Page

    x:Class="roundload.MainPage"

    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"

    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

    xmlns:local="using:roundload"

    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"

    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"

    mc:Ignorable="d"&gt;

    &lt;Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"&gt;

        

        &lt;local:round &gt;&lt;/local:round&gt;

    &lt;/Grid&gt;

&lt;/Page&gt;

</code></pre>

<p>代码：https://github.com/lindexi/lindexi_gd/tree/master/roundload</p>

<p>参考：http://blog.csdn.net/qqamoon/article/details/7001693</p>

:ET