I"90<p>在 WPF 使用绑定的时候，发现绑定不上，也许是因为绑定的对象不是当前作用的对象的原因。也许是绑定错了对象，或者对象被变更了。本文来告诉大家这个调试思路和方法</p>

<!--more-->

<!-- CreateTime:2020/11/4 15:16:37 -->

<p>使用一个简单的例子来告诉大家，这样比较直观</p>

<p>我有一个简单的应用，这个应用的字符串显示绑定了一个 ToggleButton 也就是下图的写着 点击 的按钮</p>

<!-- ![](image/WPF 调试因为对象不同而绑定失效问题/WPF 调试因为对象不同而绑定失效问题0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20201141517524547.jpg" alt="" /></p>

<p>在 ToggleButton 的 IsChecked 变化的时候，将会自动更改 TextBlock 的内容</p>

<!-- ![](image/WPF 调试因为对象不同而绑定失效问题/WPF 调试因为对象不同而绑定失效问题1.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20201141518488897.jpg" alt="" /></p>

<p>大概的效果如下图</p>

<!-- ![](image/WPF 调试因为对象不同而绑定失效问题/WPF 调试因为对象不同而绑定失效问题.gif) -->

<p><img src="http://image.acmx.xyz/lindexi%2FWPF%2520%25E8%25B0%2583%25E8%25AF%2595%25E5%259B%25A0%25E4%25B8%25BA%25E5%25AF%25B9%25E8%25B1%25A1%25E4%25B8%258D%25E5%2590%258C%25E8%2580%258C%25E7%25BB%2591%25E5%25AE%259A%25E5%25A4%25B1%25E6%2595%2588%25E9%2597%25AE%25E9%25A2%2598.gif" alt="" /></p>

<p>界面的代码大概如下</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="nt">&lt;Window.Resources&gt;</span>
        <span class="nt">&lt;local:FooConverter</span> <span class="na">x:Key=</span><span class="s">"FooConverter"</span> <span class="nt">/&gt;</span>
    <span class="nt">&lt;/Window.Resources&gt;</span>
    <span class="nt">&lt;Grid&gt;</span>
        <span class="nt">&lt;Grid.RowDefinitions&gt;</span>
            <span class="nt">&lt;RowDefinition</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;RowDefinition</span> <span class="na">Height=</span><span class="s">"Auto"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/Grid.RowDefinitions&gt;</span>
        <span class="nt">&lt;TextBlock</span> <span class="na">x:Name=</span><span class="s">"TextBlock"</span> <span class="na">HorizontalAlignment=</span><span class="s">"Center"</span> <span class="na">VerticalAlignment=</span><span class="s">"Center"</span>
                   <span class="na">Text=</span><span class="s">"{Binding ElementName=ToggleButton,Path=IsChecked,Converter={StaticResource FooConverter}}"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;StackPanel</span> <span class="na">x:Name=</span><span class="s">"Panel"</span> <span class="na">Grid.Row=</span><span class="s">"1"</span> <span class="na">Orientation=</span><span class="s">"Horizontal"</span><span class="nt">&gt;</span>
            <span class="nt">&lt;ToggleButton</span> <span class="na">x:Name=</span><span class="s">"ToggleButton"</span> <span class="na">Margin=</span><span class="s">"10,10,10,10"</span> <span class="na">Content=</span><span class="s">"点击"</span> <span class="na">Click=</span><span class="s">"ToggleButton_OnClick"</span> <span class="nt">/&gt;</span>
            <span class="nt">&lt;Button</span> <span class="na">Margin=</span><span class="s">"10,10,10,10"</span> <span class="na">Content=</span><span class="s">"不要点击这里"</span> <span class="na">Click=</span><span class="s">"Button_OnClick"</span> <span class="nt">/&gt;</span>
        <span class="nt">&lt;/StackPanel&gt;</span>
    <span class="nt">&lt;/Grid&gt;</span>
</code></pre></div></div>

<p>而 FooConverter 的代码如下</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">FooConverter</span> <span class="p">:</span> <span class="n">IValueConverter</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">object</span> <span class="nf">Convert</span><span class="p">(</span><span class="kt">object</span> <span class="k">value</span><span class="p">,</span> <span class="n">Type</span> <span class="n">targetType</span><span class="p">,</span> <span class="kt">object</span> <span class="n">parameter</span><span class="p">,</span> <span class="n">CultureInfo</span> <span class="n">culture</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="k">value</span> <span class="k">is</span> <span class="k">true</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">return</span> <span class="s">"林德熙是逗比"</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="s">"林德熙不是逗比"</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="kt">object</span> <span class="nf">ConvertBack</span><span class="p">(</span><span class="kt">object</span> <span class="k">value</span><span class="p">,</span> <span class="n">Type</span> <span class="n">targetType</span><span class="p">,</span> <span class="kt">object</span> <span class="n">parameter</span><span class="p">,</span> <span class="n">CultureInfo</span> <span class="n">culture</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">NotImplementedException</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>细心的小伙伴可以看到在上面动态图片的点击里面，在点击了 <code class="language-plaintext highlighter-rouge">不要点击这里</code> 按钮之后，再次点击 ToggleButton 时，就不会更改 TextBlock 的内容了</p>

<p>看起来就是 TextBlock 的绑定失效了</p>

<p>其中的一个调试思路就是判断绑定的对象是否更改，在后台代码里面，可以在对象状态变更的时候，如 ToggleButton 的 Click 事件，进行绑定对象的判断</p>

<p>通过以下代码可以读取某个对象的某个依赖属性的绑定表达式的值</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">ToggleButton_OnClick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">bindingExpression</span> <span class="p">=</span> <span class="n">TextBlock</span><span class="p">.</span><span class="nf">GetBindingExpression</span><span class="p">(</span><span class="n">TextBlock</span><span class="p">.</span><span class="n">TextProperty</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>如果读取不到绑定表达式，那么可以证明这个绑定表达式没替换了，如后台代码给依赖属性赋值，如以下代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">TextBlock</span><span class="p">.</span><span class="n">Text</span> <span class="p">=</span> <span class="s">"123"</span><span class="p">;</span>
</code></pre></div></div>

<p>此时的赋值将会替换掉原先的绑定表达式，因此尝试获取绑定表达式将会返回空的值</p>

<p>而如果在获取绑定表达式的时候，可以看到有值，那么也许是绑定的对象不对，可以通过 <code class="language-plaintext highlighter-rouge">bindingExpression.DataItem</code> 进行判断，如下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">ToggleButton_OnClick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">bindingExpression</span> <span class="p">=</span> <span class="n">TextBlock</span><span class="p">.</span><span class="nf">GetBindingExpression</span><span class="p">(</span><span class="n">TextBlock</span><span class="p">.</span><span class="n">TextProperty</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">toggleButton</span> <span class="p">=</span> <span class="p">(</span><span class="n">ToggleButton</span><span class="p">)</span> <span class="n">sender</span><span class="p">;</span>
            <span class="k">if</span> <span class="p">(</span><span class="nf">ReferenceEquals</span><span class="p">(</span><span class="n">toggleButton</span><span class="p">,</span> <span class="n">bindingExpression</span><span class="p">.</span><span class="n">DataItem</span><span class="p">))</span>
            <span class="p">{</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>此时如果作用的 ToggleButton 和绑定表达式的绑定对象是相同的，那么 ReferenceEquals 将会进入分支</p>

<p>在实际调试的时候，可以看到默认都会进入 ReferenceEquals 返回 true 的分支。而在点击了 <code class="language-plaintext highlighter-rouge">不要点击这里</code> 按钮之后，将不会进入 ReferenceEquals 返回 true 的分支</p>

<p>这就证明了绑定表达式绑定的对象更改了</p>

<p>而为什么对象更改了，在这个例子里面是谁更改了 ToggleButton 对象，这就需要其他调试手段了。如本文的更改实际是逗比的代码，在 <code class="language-plaintext highlighter-rouge">不要点击这里</code> 按钮的点击事件里面写了下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">Button_OnClick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">fakeToggleButton</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">ToggleButton</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Margin</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thickness</span><span class="p">(</span><span class="m">10</span><span class="p">),</span>
                <span class="n">Content</span> <span class="p">=</span> <span class="s">"点击"</span>
            <span class="p">}.</span><span class="nf">Do</span><span class="p">(</span><span class="n">button</span> <span class="p">=&gt;</span> <span class="n">button</span><span class="p">.</span><span class="n">Click</span> <span class="p">+=</span> <span class="n">ToggleButton_OnClick</span><span class="p">);</span>

            <span class="n">Panel</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="nf">RemoveAt</span><span class="p">(</span><span class="m">0</span><span class="p">);</span>
            <span class="n">Panel</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="nf">Insert</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">fakeToggleButton</span><span class="p">);</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>本文代码放在<a href="https://github.com/lindexi/lindexi_gd/tree/a196ef71/NairnubalkunuhaJurquneedu">github</a>欢迎小伙伴访问</p>

:ET