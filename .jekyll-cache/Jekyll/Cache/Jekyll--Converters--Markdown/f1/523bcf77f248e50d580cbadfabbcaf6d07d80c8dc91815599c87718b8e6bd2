I"s|<p>上一篇告诉大家如何在 WPF 使用 SharpDx ，看起来代码比较复杂，所以本文告诉大家如何使用我封装的控件。</p>

<!--more-->

<!-- CreateTime:2019/12/26 12:50:41 -->

<!-- csdn -->
<div id="toc"></div>
<!-- 标签：WPF,D2D,DirectX,SharpDX,渲染 -->

<p>本文是一个系列，希望大家从第一篇开始看</p>

<ul>
  <li>
    <p><a href="https://lindexi.oschina.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-Direct2D1-%E7%94%BB%E5%9B%BE%E5%85%A5%E9%97%A8.html">WPF 使用 Direct2D1 画图入门</a></p>
  </li>
  <li>
    <p><a href="https://lindexi.oschina.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-Direct2D1-%E7%94%BB%E5%9B%BE-%E7%BB%98%E5%88%B6%E5%9F%BA%E6%9C%AC%E5%9B%BE%E5%BD%A2.html">WPF 使用 Direct2D1 画图 绘制基本图形</a></p>
  </li>
  <li>
    <p><a href="https://lindexi.oschina.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-SharpDX.html">WPF 使用 SharpDX</a></p>
  </li>
  <li>
    <p><a href="https://lindexi.gitee.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-SharpDX-%E5%9C%A8-D3DImage-%E6%98%BE%E7%A4%BA.html">WPF 使用 SharpDX 在 D3DImage 显示</a></p>
  </li>
  <li>
    <p><a href="https://lindexi.oschina.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8%E5%B0%81%E8%A3%85%E7%9A%84-SharpDx-%E6%8E%A7%E4%BB%B6.html">WPF 使用封装的 SharpDx 控件</a></p>
  </li>
</ul>

<p>在<a href="https://lindexi.oschina.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-SharpDX-%E5%9C%A8-D3DImage-%E6%98%BE%E7%A4%BA.html#%E7%94%BB%E5%87%BA%E6%9D%A5">WPF 使用 SharpDX 在 D3DImage 显示</a>我告诉大家如何在 WPF 使用，但是代码都是写在一个 MainPage ，所以下面我把代码封装一下，放在一个类。</p>

<p>我的代码可以复制一下放在自己的工程使用，现在我还不想做 Nuget 因为这个类还有性能问题。</p>

<p>使用这个类作为 Image 的 Source 会占用 3% 的 CPU ，而且这个类没有注释，关于这个类是如何写的请看<a href="https://lindexi.gitee.io/lindexi/post/WPF-%E4%BD%BF%E7%94%A8-SharpDX-%E5%9C%A8-D3DImage-%E6%98%BE%E7%A4%BA.html">WPF 使用 SharpDX 在 D3DImage 显示</a> 。</p>

<p>我会把这个类的代码放在文章最后，方便大家复制。</p>

<p>下面来告诉大家如何使用这个类。</p>

<p>首先复制代码，放在一个文件</p>

<p>写一个类继承 SharpDxImage ，这里我随意写一个类叫 SsgnnnaTkmlo ，这个类可以重写 OnRender ，也就是在绘制需要显示什么。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">SsgnnnaTkmlo</span> <span class="p">:</span> <span class="n">SharpDxImage</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnRender</span><span class="p">(</span><span class="n">RenderTarget</span> <span class="n">renderTarget</span><span class="p">)</span>
        <span class="p">{</span>
        	<span class="c1">//随便画一个矩形。下面的代码就是清空屏幕，参数 null 为透明，可以给其他的颜色。如何绘制请看文章。</span>
            <span class="n">renderTarget</span><span class="p">.</span><span class="nf">Clear</span><span class="p">(</span><span class="k">null</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">brush</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="nf">SolidColorBrush</span><span class="p">(</span><span class="n">renderTarget</span><span class="p">,</span> <span class="k">new</span> <span class="nf">RawColor4</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">1</span><span class="p">));</span>
            <span class="kt">var</span> <span class="n">kvudjuzjsHlqiv</span> <span class="p">=</span> <span class="n">ran</span><span class="p">.</span><span class="nf">Next</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span> <span class="m">100</span> <span class="p">-</span> <span class="m">10</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">dfulTokpj</span> <span class="p">=</span> <span class="n">ran</span><span class="p">.</span><span class="nf">Next</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span> <span class="m">100</span> <span class="p">-</span> <span class="m">10</span><span class="p">);</span>
            <span class="n">renderTarget</span><span class="p">.</span><span class="nf">DrawRectangle</span><span class="p">(</span>
                <span class="k">new</span> <span class="nf">RawRectangleF</span><span class="p">(</span><span class="n">kvudjuzjsHlqiv</span><span class="p">,</span> <span class="n">dfulTokpj</span><span class="p">,</span> <span class="n">kvudjuzjsHlqiv</span> <span class="p">+</span> <span class="m">10</span><span class="p">,</span> <span class="n">dfulTokpj</span> <span class="p">+</span> <span class="m">10</span><span class="p">),</span> <span class="n">brush</span><span class="p">,</span> <span class="m">1</span><span class="p">);</span>
        <span class="p">}</span>
        <span class="k">private</span> <span class="n">Random</span> <span class="n">ran</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>需要告诉大家的是，传入 RenderTarget 的绘制和之前其他代码的绘制是一样，关于 SharpDx 的绘制我会在另一篇博客告诉大家。</p>

<p>然后打开 xaml 写入下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="p">&lt;</span><span class="n">Image</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"DcwtTmmwvcr"</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">Image</span><span class="p">.</span><span class="n">Source</span><span class="p">&gt;</span>
                    <span class="p">&lt;</span><span class="n">local</span><span class="p">:</span><span class="n">SsgnnnaTkmlo</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"DrmKroh"</span><span class="p">&gt;&lt;/</span><span class="n">local</span><span class="p">:</span><span class="n">SsgnnnaTkmlo</span><span class="p">&gt;</span>
                <span class="p">&lt;/</span><span class="n">Image</span><span class="p">.</span><span class="n">Source</span><span class="p">&gt;</span>
            <span class="p">&lt;/</span><span class="n">Image</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>当然，因为只是简单的例子，大家也可以写在后台代码。</p>

<p>在 xaml.cs　写下面代码，在　Load 绑定</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="n">DcwtTmmwvcr</span><span class="p">.</span><span class="n">Loaded</span> <span class="p">+=</span> <span class="p">(</span><span class="n">s</span><span class="p">,</span> <span class="n">e</span><span class="p">)</span> <span class="p">=&gt;</span>
            <span class="p">{</span>
                <span class="n">DrmKroh</span><span class="p">.</span><span class="nf">CreateAndBindTargets</span><span class="p">((</span><span class="kt">int</span><span class="p">)</span> <span class="n">ActualWidth</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">ActualHeight</span><span class="p">);</span>
            <span class="p">};</span>
</code></pre></div></div>

<p>注意需要使用图片控件的 Load 事件，不然拿到的图片会模糊。</p>

<p>现在可以尝试运行一下，就可以看到一个随机出现的矩形。</p>

<p>下面就是封装类的代码。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Runtime.InteropServices</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Windows</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Windows.Interop</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">System.Windows.Media</span><span class="p">;</span>
<span class="k">using</span> <span class="nn">SharpDX.Direct3D</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">WPFSharpDx</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">abstract</span> <span class="k">class</span> <span class="nc">SharpDxImage</span> <span class="p">:</span> <span class="n">D3DImage</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">CreateAndBindTargets</span><span class="p">(</span><span class="kt">int</span> <span class="n">actualWidth</span><span class="p">,</span> <span class="kt">int</span> <span class="n">actualHeight</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">width</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="nf">Max</span><span class="p">(</span><span class="n">actualWidth</span><span class="p">,</span> <span class="m">100</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">height</span> <span class="p">=</span> <span class="n">Math</span><span class="p">.</span><span class="nf">Max</span><span class="p">(</span><span class="n">actualHeight</span><span class="p">,</span> <span class="m">100</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">renderDesc</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">Texture2DDescription</span>
            <span class="p">{</span>
                <span class="n">BindFlags</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">BindFlags</span><span class="p">.</span><span class="n">RenderTarget</span> <span class="p">|</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">BindFlags</span><span class="p">.</span><span class="n">ShaderResource</span><span class="p">,</span>
                <span class="n">Format</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">B8G8R8A8_UNorm</span><span class="p">,</span>
                <span class="n">Width</span> <span class="p">=</span> <span class="n">width</span><span class="p">,</span>
                <span class="n">Height</span> <span class="p">=</span> <span class="n">height</span><span class="p">,</span>
                <span class="n">MipLevels</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">SampleDescription</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="nf">SampleDescription</span><span class="p">(</span><span class="m">1</span><span class="p">,</span> <span class="m">0</span><span class="p">),</span>
                <span class="n">Usage</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">ResourceUsage</span><span class="p">.</span><span class="n">Default</span><span class="p">,</span>
                <span class="n">OptionFlags</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">ResourceOptionFlags</span><span class="p">.</span><span class="n">Shared</span><span class="p">,</span>
                <span class="n">CpuAccessFlags</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">CpuAccessFlags</span><span class="p">.</span><span class="n">None</span><span class="p">,</span>
                <span class="n">ArraySize</span> <span class="p">=</span> <span class="m">1</span>
            <span class="p">};</span>

            <span class="kt">var</span> <span class="n">device</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="nf">Device</span><span class="p">(</span><span class="n">DriverType</span><span class="p">.</span><span class="n">Hardware</span><span class="p">,</span>
                <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">DeviceCreationFlags</span><span class="p">.</span><span class="n">BgraSupport</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">renderTarget</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="nf">Texture2D</span><span class="p">(</span><span class="n">device</span><span class="p">,</span> <span class="n">renderDesc</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">surface</span> <span class="p">=</span> <span class="n">renderTarget</span><span class="p">.</span><span class="n">QueryInterface</span><span class="p">&lt;</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Surface</span><span class="p">&gt;();</span>

            <span class="kt">var</span> <span class="n">d2DFactory</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="nf">Factory</span><span class="p">();</span>

            <span class="kt">var</span> <span class="n">renderTargetProperties</span> <span class="p">=</span>
                <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="nf">RenderTargetProperties</span><span class="p">(</span>
                    <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="nf">PixelFormat</span><span class="p">(</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">Unknown</span><span class="p">,</span>
                        <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="n">AlphaMode</span><span class="p">.</span><span class="n">Premultiplied</span><span class="p">));</span>

            <span class="n">_d2DRenderTarget</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="nf">RenderTarget</span><span class="p">(</span><span class="n">d2DFactory</span><span class="p">,</span> <span class="n">surface</span><span class="p">,</span> <span class="n">renderTargetProperties</span><span class="p">);</span>

            <span class="nf">SetRenderTarget</span><span class="p">(</span><span class="n">renderTarget</span><span class="p">);</span>

            <span class="n">device</span><span class="p">.</span><span class="n">ImmediateContext</span><span class="p">.</span><span class="n">Rasterizer</span><span class="p">.</span><span class="nf">SetViewport</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>

            <span class="n">CompositionTarget</span><span class="p">.</span><span class="n">Rendering</span> <span class="p">+=</span> <span class="n">CompositionTarget_Rendering</span><span class="p">;</span>
        <span class="p">}</span>


        <span class="k">protected</span> <span class="k">abstract</span> <span class="k">void</span> <span class="nf">OnRender</span><span class="p">(</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="n">RenderTarget</span> <span class="n">renderTarget</span><span class="p">);</span>

        <span class="k">private</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Texture</span> <span class="n">_renderTarget</span><span class="p">;</span>
        <span class="k">private</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct2D1</span><span class="p">.</span><span class="n">RenderTarget</span> <span class="n">_d2DRenderTarget</span><span class="p">;</span>


        <span class="k">private</span> <span class="k">void</span> <span class="nf">CompositionTarget_Rendering</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">Rendering</span><span class="p">();</span>
        <span class="p">}</span>


        <span class="k">private</span> <span class="k">void</span> <span class="nf">Rendering</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_d2DRenderTarget</span><span class="p">.</span><span class="nf">BeginDraw</span><span class="p">();</span>

            <span class="nf">OnRender</span><span class="p">(</span><span class="n">_d2DRenderTarget</span><span class="p">);</span>

            <span class="n">_d2DRenderTarget</span><span class="p">.</span><span class="nf">EndDraw</span><span class="p">();</span>


            <span class="nf">Lock</span><span class="p">();</span>

            <span class="nf">AddDirtyRect</span><span class="p">(</span><span class="k">new</span> <span class="nf">Int32Rect</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">PixelWidth</span><span class="p">,</span> <span class="n">PixelHeight</span><span class="p">));</span>

            <span class="nf">Unlock</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">SetRenderTarget</span><span class="p">(</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">Texture2D</span> <span class="n">target</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">format</span> <span class="p">=</span> <span class="nf">TranslateFormat</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">handle</span> <span class="p">=</span> <span class="nf">GetSharedHandle</span><span class="p">(</span><span class="n">target</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">presentParams</span> <span class="p">=</span> <span class="nf">GetPresentParameters</span><span class="p">();</span>
            <span class="kt">var</span> <span class="n">createFlags</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">CreateFlags</span><span class="p">.</span><span class="n">HardwareVertexProcessing</span> <span class="p">|</span>
                              <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">CreateFlags</span><span class="p">.</span><span class="n">Multithreaded</span> <span class="p">|</span>
                              <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">CreateFlags</span><span class="p">.</span><span class="n">FpuPreserve</span><span class="p">;</span>

            <span class="kt">var</span> <span class="n">d3DContext</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="nf">Direct3DEx</span><span class="p">();</span>
            <span class="kt">var</span> <span class="n">d3DDevice</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="nf">DeviceEx</span><span class="p">(</span><span class="n">d3DContext</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">DeviceType</span><span class="p">.</span><span class="n">Hardware</span><span class="p">,</span>
                <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="n">createFlags</span><span class="p">,</span>
                <span class="n">presentParams</span><span class="p">);</span>

            <span class="n">_renderTarget</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="nf">Texture</span><span class="p">(</span><span class="n">d3DDevice</span><span class="p">,</span> <span class="n">target</span><span class="p">.</span><span class="n">Description</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span>
                <span class="n">target</span><span class="p">.</span><span class="n">Description</span><span class="p">.</span><span class="n">Height</span><span class="p">,</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Usage</span><span class="p">.</span><span class="n">RenderTarget</span><span class="p">,</span> <span class="n">format</span><span class="p">,</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Pool</span><span class="p">.</span><span class="n">Default</span><span class="p">,</span> <span class="k">ref</span> <span class="n">handle</span><span class="p">);</span>

            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">surface</span> <span class="p">=</span> <span class="n">_renderTarget</span><span class="p">.</span><span class="nf">GetSurfaceLevel</span><span class="p">(</span><span class="m">0</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="nf">Lock</span><span class="p">();</span>
                <span class="nf">SetBackBuffer</span><span class="p">(</span><span class="n">D3DResourceType</span><span class="p">.</span><span class="n">IDirect3DSurface9</span><span class="p">,</span> <span class="n">surface</span><span class="p">.</span><span class="n">NativePointer</span><span class="p">);</span>
                <span class="nf">Unlock</span><span class="p">();</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">PresentParameters</span> <span class="nf">GetPresentParameters</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">presentParams</span> <span class="p">=</span> <span class="k">new</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="nf">PresentParameters</span><span class="p">();</span>

            <span class="n">presentParams</span><span class="p">.</span><span class="n">Windowed</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>
            <span class="n">presentParams</span><span class="p">.</span><span class="n">SwapEffect</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">SwapEffect</span><span class="p">.</span><span class="n">Discard</span><span class="p">;</span>
            <span class="n">presentParams</span><span class="p">.</span><span class="n">DeviceWindowHandle</span> <span class="p">=</span> <span class="n">NativeMethods</span><span class="p">.</span><span class="nf">GetDesktopWindow</span><span class="p">();</span>
            <span class="n">presentParams</span><span class="p">.</span><span class="n">PresentationInterval</span> <span class="p">=</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">PresentInterval</span><span class="p">.</span><span class="n">Default</span><span class="p">;</span>

            <span class="k">return</span> <span class="n">presentParams</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">IntPtr</span> <span class="nf">GetSharedHandle</span><span class="p">(</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">Texture2D</span> <span class="n">texture</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">resource</span> <span class="p">=</span> <span class="n">texture</span><span class="p">.</span><span class="n">QueryInterface</span><span class="p">&lt;</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Resource</span><span class="p">&gt;())</span>
            <span class="p">{</span>
                <span class="k">return</span> <span class="n">resource</span><span class="p">.</span><span class="n">SharedHandle</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Format</span> <span class="nf">TranslateFormat</span><span class="p">(</span><span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D11</span><span class="p">.</span><span class="n">Texture2D</span> <span class="n">texture</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">switch</span> <span class="p">(</span><span class="n">texture</span><span class="p">.</span><span class="n">Description</span><span class="p">.</span><span class="n">Format</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">case</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">R10G10B10A2_UNorm</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">A2B10G10R10</span><span class="p">;</span>
                <span class="k">case</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">R16G16B16A16_Float</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">A16B16G16R16F</span><span class="p">;</span>
                <span class="k">case</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">DXGI</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">B8G8R8A8_UNorm</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">A8R8G8B8</span><span class="p">;</span>
                <span class="k">default</span><span class="p">:</span>
                    <span class="k">return</span> <span class="n">SharpDX</span><span class="p">.</span><span class="n">Direct3D9</span><span class="p">.</span><span class="n">Format</span><span class="p">.</span><span class="n">Unknown</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">NativeMethods</span>
        <span class="p">{</span>
            <span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"user32.dll"</span><span class="p">,</span> <span class="n">SetLastError</span> <span class="p">=</span> <span class="k">false</span><span class="p">)]</span>
            <span class="k">public</span> <span class="k">static</span> <span class="k">extern</span> <span class="n">IntPtr</span> <span class="nf">GetDesktopWindow</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<script src="https://gitee.com/lindexi/codes/lfusrm0aebdqtyx5ckv3i100/widget_preview?title=SharpDxImage.cs"></script>

<p><a href="https://www.codeproject.com/Articles/351939/SurfaceImageSource-Manager-Connecting-Csharp-and-D">SurfaceImageSource Manager: Connecting C# and DirectX/Direct2D using the WinRT/Metro SurfaceImageSource class, through a small C++ component - CodeProject</a></p>

:ET