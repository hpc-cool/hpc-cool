I"y;<p>在 Windows 系统上，有一个很重要的概念是 Windows Imaging Component 也就是 WIC 层，这是专门用来处理多媒体相关的系统组件，特别是用来处理图片相关，包括编码和解码和处理图片。默认在 WPF 中就可以使用封装好的 WIC 层，也就是说最好的 WIC 库就是 WPF 框架了。但是如果在 WPF 之外呢，我有一点特别的需求，我想要绕过 WPF 框架，通过纯控制台的方式使用到 WIC 层的逻辑，此时可以使用 stakx 的 WIC 库。当然，最后发现最好的封装依然 WPF 框架，即使是控制台也能使用 WPF 哦</p>

<!--more-->

<!-- CreateTime:2021/3/26 19:05:39 -->

<!-- 发布 -->

<p>因为我是在寻找 WIC 层的各个方法，本文只是用来记录一个可以使用的库，但最终发现 WPF 才是最好的封装。只要在 Windows 下，无论用不用 WPF 窗口，都能使用 WPF 提供的 WIC 层封装，因为咱如果只用到 WIC 层，那么相当于只是使用 WPF 库封装的方法</p>

<p>在 WPF 中封装的底层原理请看 <a href="https://blog.lindexi.com/post/dotnet-%E8%AF%BB-WPF-%E6%BA%90%E4%BB%A3%E7%A0%81%E7%AC%94%E8%AE%B0-WIC-%E5%A4%9A%E5%AA%92%E4%BD%93%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%E9%80%9A%E8%BF%87-WindowsCodecs.dll-%E5%AE%9E%E7%8E%B0%E5%8A%9F%E8%83%BD.html">dotnet 读 WPF 源代码笔记 WIC 多媒体图片处理通过 WindowsCodecs.dll 实现功能</a></p>

<p>如果是 .NET Framework 那么引用 WPF 将不会添加任何额外的多余的输出。如果是 .NET Core 下，除非是独立发布，否则也不会有额外的多余的输出。如果是框架依赖发布，那么会添加的额外输出文件也特别少。因此用 WPF 框架没有啥不足的。和 WPF 框架对比，使用 stakx 的 WIC 库没啥优势</p>

<p>回到本文的 stakx 的 WIC 库的使用方法上，在开始之前需要通过 NuGet 安装 stakx.WIC 库，这是在 GitHub 上完全开源的，请看 <a href="https://github.com/stakx/WIC">https://github.com/stakx/WIC</a></p>

<p>或者在 csproj 上添加如下代码</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;ItemGroup&gt;</span>
    <span class="nt">&lt;PackageReference</span> <span class="na">Include=</span><span class="s">"stakx.WIC"</span> <span class="na">Version=</span><span class="s">"0.1.0"</span> <span class="nt">/&gt;</span>
  <span class="nt">&lt;/ItemGroup&gt;</span>
</code></pre></div></div>

<p>这个库的入口是 WICImagingFactory 接口，这是一个 COM 定义的接口，因此可以用 new 关键字创建，如下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     <span class="n">WICImagingFactory</span> <span class="n">factory</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WICImagingFactory</span><span class="p">();</span>
</code></pre></div></div>

<p>接口是可以使用 new 的，只要标记了这是 COM 接口就可以</p>

<p>这个库的封装都在 WICImagingFactory 的方法，各个方法的使用方法还请参阅<a href="https://docs.microsoft.com/en-us/windows/win32/wic/-wic-lh">官方 WIC 文档</a></p>

<p>以下是一些例子</p>

<p>如获取本机安装的图片解码器，可以用来判断本机是否有 HEIF 解码器</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">WICImagingFactory</span> <span class="n">factory</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WICImagingFactory</span><span class="p">();</span>

            <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="n">wicBitmapEncoderInfo</span> <span class="k">in</span> <span class="nf">EnumEncoders</span><span class="p">(</span><span class="n">factory</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">wicBitmapEncoderInfo</span><span class="p">.</span><span class="nf">GetFriendlyName</span><span class="p">());</span>
            <span class="p">}</span>

            <span class="c1">// BMP Encoder</span>
            <span class="c1">// GIF Encoder</span>
            <span class="c1">// JPEG Encoder</span>
            <span class="c1">// PNG Encoder</span>
            <span class="c1">// TIFF Encoder</span>
            <span class="c1">// WMPhoto Encoder</span>
            <span class="c1">// DDS Encoder</span>
            <span class="c1">// Microsoft HEIF Encoder</span>
        <span class="p">}</span>

        <span class="k">static</span> <span class="n">IEnumerable</span><span class="p">&lt;</span><span class="n">IWICBitmapEncoderInfo</span><span class="p">&gt;</span> <span class="nf">EnumEncoders</span><span class="p">(</span><span class="n">IWICImagingFactory</span> <span class="n">wic</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="n">wic</span><span class="p">.</span><span class="nf">CreateComponentEnumerator</span><span class="p">(</span><span class="n">WICComponentType</span><span class="p">.</span><span class="n">WICEncoder</span><span class="p">,</span> <span class="n">WICComponentEnumerateOptions</span><span class="p">.</span><span class="n">WICComponentEnumerateDefault</span><span class="p">)</span>
                <span class="p">.</span><span class="nf">AsEnumerable</span><span class="p">()</span>
                <span class="p">.</span><span class="n">OfType</span><span class="p">&lt;</span><span class="n">IWICBitmapEncoderInfo</span><span class="p">&gt;();</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>以上代码放在 <a href="https://github.com/lindexi/lindexi_gd/tree/0129f0e7/HairleakaibaniWawfeahewur">github</a> 和 <a href="https://gitee.com/lindexi/lindexi_gd/tree/0129f0e7/HairleakaibaniWawfeahewur">gitee</a> 欢迎小伙伴访问</p>

<p>如使用像素的方式快速创建图片</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="n">WICImagingFactory</span> <span class="n">factory</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">WICImagingFactory</span><span class="p">();</span>

            <span class="kt">var</span> <span class="n">encoderInfo</span> <span class="p">=</span> <span class="nf">EnumEncoders</span><span class="p">(</span><span class="n">factory</span><span class="p">)</span>
                <span class="p">.</span><span class="nf">FirstOrDefault</span><span class="p">(</span><span class="n">temp</span> <span class="p">=&gt;</span> <span class="n">temp</span><span class="p">.</span><span class="nf">GetFriendlyName</span><span class="p">()</span> <span class="p">==</span> <span class="s">"PNG Encoder"</span><span class="p">);</span>

            <span class="k">const</span> <span class="kt">int</span> <span class="n">width</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>
            <span class="k">const</span> <span class="kt">int</span> <span class="n">height</span> <span class="p">=</span> <span class="m">256</span><span class="p">;</span>
            <span class="k">const</span> <span class="kt">int</span> <span class="n">bytesPerPixel</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span><span class="c1">// BGR 格式</span>

            <span class="kt">var</span> <span class="n">random</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Random</span><span class="p">();</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">encoderInfo</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">encoder</span> <span class="p">=</span> <span class="n">factory</span><span class="p">.</span><span class="nf">CreateEncoder</span><span class="p">(</span><span class="n">encoderInfo</span><span class="p">.</span><span class="nf">GetContainerFormat</span><span class="p">());</span>

                <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"1.png"</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">encoder</span><span class="p">.</span><span class="nf">Initialize</span><span class="p">(</span><span class="n">stream</span><span class="p">.</span><span class="nf">AsCOMStream</span><span class="p">(),</span><span class="n">WICBitmapEncoderCacheOption</span><span class="p">.</span><span class="n">WICBitmapEncoderNoCache</span><span class="p">);</span>

                    <span class="kt">var</span> <span class="n">frame</span> <span class="p">=</span> <span class="n">encoder</span><span class="p">.</span><span class="nf">CreateNewFrame</span><span class="p">();</span>
                    <span class="n">frame</span><span class="p">.</span><span class="nf">Initialize</span><span class="p">(</span><span class="k">null</span><span class="p">);</span>

                    <span class="kt">var</span> <span class="n">format</span> <span class="p">=</span> <span class="n">WICPixelFormat</span><span class="p">.</span><span class="n">WICPixelFormat24bppBGR</span><span class="p">;</span>
                    <span class="n">frame</span><span class="p">.</span><span class="nf">SetPixelFormat</span><span class="p">(</span><span class="k">ref</span> <span class="n">format</span><span class="p">);</span>

                    <span class="n">frame</span><span class="p">.</span><span class="nf">SetResolution</span><span class="p">(</span><span class="k">new</span> <span class="nf">Resolution</span><span class="p">(</span><span class="m">96</span><span class="p">,</span> <span class="m">96</span><span class="p">));</span>
                    <span class="n">frame</span><span class="p">.</span><span class="nf">SetSize</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">);</span>

                    <span class="kt">var</span> <span class="n">image</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="n">width</span> <span class="p">*</span> <span class="n">height</span> <span class="p">*</span> <span class="n">bytesPerPixel</span><span class="p">];</span>

                    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">height</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">j</span> <span class="p">&lt;</span> <span class="n">width</span><span class="p">;</span> <span class="n">j</span><span class="p">++)</span>
                        <span class="p">{</span>
                            <span class="n">image</span><span class="p">[(</span><span class="n">i</span> <span class="p">*</span> <span class="n">width</span> <span class="p">+</span> <span class="n">j</span><span class="p">)</span> <span class="p">*</span> <span class="n">bytesPerPixel</span> <span class="p">+</span> <span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">byte</span><span class="p">)</span><span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">255</span><span class="p">);</span>
                            <span class="n">image</span><span class="p">[(</span><span class="n">i</span> <span class="p">*</span> <span class="n">width</span> <span class="p">+</span> <span class="n">j</span><span class="p">)</span> <span class="p">*</span> <span class="n">bytesPerPixel</span> <span class="p">+</span> <span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">byte</span><span class="p">)</span><span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">255</span><span class="p">);</span>
                            <span class="n">image</span><span class="p">[(</span><span class="n">i</span> <span class="p">*</span> <span class="n">width</span> <span class="p">+</span> <span class="n">j</span><span class="p">)</span> <span class="p">*</span> <span class="n">bytesPerPixel</span> <span class="p">+</span> <span class="m">2</span><span class="p">]</span> <span class="p">=</span> <span class="p">(</span><span class="kt">byte</span><span class="p">)</span><span class="n">random</span><span class="p">.</span><span class="nf">Next</span><span class="p">(</span><span class="m">255</span><span class="p">);</span>
                        <span class="p">}</span>
                    <span class="p">}</span>

                    <span class="n">IWICBitmapFrameEncodeExtensions</span><span class="p">.</span><span class="nf">WritePixels</span><span class="p">(</span><span class="n">frame</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="n">width</span> <span class="p">*</span> <span class="n">bytesPerPixel</span><span class="p">,</span> <span class="n">image</span><span class="p">);</span>

                    <span class="n">frame</span><span class="p">.</span><span class="nf">Commit</span><span class="p">();</span>
                    <span class="n">encoder</span><span class="p">.</span><span class="nf">Commit</span><span class="p">();</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></div></div>

<p>这是我创建的图片</p>

<!-- ![](image/dotnet 在 Windows 系统上使用 stakx 的 WIC 库/dotnet 在 Windows 系统上使用 stakx 的 WIC 库0.png) -->

<p><img src="https://i.loli.net/2021/03/26/Ji4A2eNrz5PVL8g.jpg" alt="" /></p>

<p>以上代码放在 <a href="https://github.com/lindexi/lindexi_gd/tree/dccc43c6/HairleakaibaniWawfeahewur">github</a> 和 <a href="https://gitee.com/lindexi/lindexi_gd/tree/dccc43c6/HairleakaibaniWawfeahewur">gitee</a> 欢迎小伙伴访问</p>

:ET