I"h<p>在很大的项目开发，会发现项目引用的 dll 会很多，我想要按照不同的功能，将不同的 dll 放在不同的文件夹</p>

<!--more-->

<!-- CreateTime:2019/8/31 16:55:58 -->

<p>简单的方法是通过修改 App.config 文件指定文件夹，如将文件移动到 <code class="language-plaintext highlighter-rouge">abc\12</code> 的文件夹里面，可以在 App.config 添加代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;configuration&gt;
  &lt;runtime&gt;
    &lt;assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1"&gt;
      &lt;probing privatePath="abc\12" /&gt;
    &lt;/assemblyBinding&gt;
  &lt;/runtime&gt;
&lt;/configuration&gt;
</code></pre></div></div>

<p>如创建一个简单的项目，此时项目引用一个dll 如 doubi.dll 这个项目运行的时候输出的文件有 lindexi.exe 和 doubi.dll 文件</p>

<p>这时需要将 doubi.dll 移动到文件夹 <code class="language-plaintext highlighter-rouge">abc\12</code> 里面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lindexi</span><span class="p">.</span><span class="n">exe</span>
<span class="n">abc</span><span class="err">\</span><span class="m">12</span><span class="err">\</span><span class="n">doubi</span><span class="p">.</span><span class="n">dll</span>
</code></pre></div></div>

<p>打开 App.config 添加上面的代码就可以</p>

<p>如果有两个不同的dll需要放在两个不同的文件夹，如 walter.dll 需要放在 walter 文件夹</p>

<p>在 <code class="language-plaintext highlighter-rouge">&lt;probing privatePath="abc\12" /&gt;</code> 里面使用分号表示不同的文件夹 <code class="language-plaintext highlighter-rouge">probing privatePath="abc\12;walter"</code> 不同的文件夹之间用分号分开</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="p">=</span><span class="s">"1.0"</span> <span class="n">encoding</span><span class="p">=</span><span class="s">"utf-8"</span> <span class="p">?&gt;</span>
<span class="p">&lt;</span><span class="n">configuration</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="n">runtime</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">assemblyBinding</span> <span class="n">xmlns</span><span class="p">=</span><span class="s">"urn:schemas-microsoft-com:asm.v1"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="n">probing</span> <span class="n">privatePath</span><span class="p">=</span><span class="s">"abc\12;walter"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="n">assemblyBinding</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">runtime</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">configuration</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>这个 App.config 在编译之后会在被修改为 <code class="language-plaintext highlighter-rouge">程序集名.exe.config</code> 在输出文件夹找到 <code class="language-plaintext highlighter-rouge">xx.exe.config</code> 可以通过修改这个文件在编译之后修改 dll 的寻找文件夹</p>

<p>如果是对于 C++ 的 dll 需要做特殊引用，如需要区分 x86 和 x64 请看 <a href="https://lindexi.gitee.io/post/C-%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A1%B9%E7%9B%AE%E5%BC%95%E7%94%A8x86-x64%E7%9A%84%E9%9D%9E%E6%89%98%E7%AE%A1%E4%BB%A3%E7%A0%81.html">C# 如何在项目引用x86 x64的非托管代码</a></p>

<p>不能直接添加一个 x86 文件和一个 x64 文件夹，通过 privatePath 同时指定文件夹的方式</p>

:ET