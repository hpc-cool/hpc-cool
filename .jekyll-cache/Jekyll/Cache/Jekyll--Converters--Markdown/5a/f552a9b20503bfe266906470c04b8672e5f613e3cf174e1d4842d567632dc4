I"AR<p>本文告诉大家如何在 win2d 使用渐变颜色。</p>

<!--more-->

<!-- CreateTime:2018/8/29 8:58:14 -->

<!-- 标签：uwp,win2d,渲染 -->

<h2 id="线条渐变">线条渐变</h2>

<p>在 UWP 的 Win2d 使用渐变颜色需要 CanvasLinearGradientBrush 做颜色，本文告诉大家如何在 win2d 使用 CanvasLinearGradientBrush 做渐变。</p>

<p>渐变的颜色可以尝试打开任意一个控件，查看属性，就可以知道渐变的效果</p>

<p><img src="http://image.acmx.xyz/lindexi%2F201877208328920.jpg" alt="" /></p>

<p>渐变效果是渐变开始点，渐变结束点作为线性的渐变，也就是从点的开始到点的结束渐变。</p>

<p>中间在偏移多少的点，设置为中间颜色，这样两个颜色之间就会出现渐变的效果。如上面的图，只有第一个点和第二个点，两个点的颜色不相同，所以中间就会出现渐变的颜色。</p>

<p>在 win2d 渐变相对的是整个画布的颜色，也就是设置渐变的开始点不是相对于使用渐变的元素，而是画布的坐标。</p>

<!-- ![](image/win2d 渐变颜色/win2d 渐变颜色0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F201877201512286.jpg" alt="" /></p>

<p>请看图，使用的渐变是从(100,10)到(1000,1000)，元素是从(300,100)开始画，元素的宽度是 300 高度是 200 ，所以实际上元素使用的渐变不是从开始的渐变开始算，而是拿到渐变的对应元素所在颜色</p>

<p>使用 CanvasLinearGradientBrush 需要 CanvasGradientStop 做中间的颜色，表示在相对于第一个点到最后一个点的多少颜色。</p>

<p>如使用下面代码，就是第一个点是白色，最后一个点是黑色。注意 Position 的范围是 0-1 ，也就是 0 就是第一个点，而 1 就是最后一个点</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                           <span class="kt">var</span> <span class="n">canvasGradientStop</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
                            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span>
                            <span class="p">{</span>
                                <span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span>
                                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">White</span>
                            <span class="p">};</span>
                            
                            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasGradientStop</span><span class="p">()</span>
                            <span class="p">{</span>
                                <span class="n">Position</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">Black</span>
                            <span class="p">};</span>
</code></pre></div></div>

<p>创建 CanvasLinearGradientBrush 需要 CanvasResourceCreator ，建议使用 win2d 的画板作为输入。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">CanvasControl_OnDraw</span><span class="p">(</span><span class="n">CanvasControl</span> <span class="n">sender</span><span class="p">,</span> <span class="n">CanvasDrawEventArgs</span> <span class="n">args</span><span class="p">)</span>

        <span class="c1">// 忽略代码</span>
                            <span class="kt">var</span> <span class="n">canvasGradientStop</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
                            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span>
                            <span class="p">{</span>
                                <span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span>
                                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">White</span>
                            <span class="p">};</span>
                            
                            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasGradientStop</span><span class="p">()</span>
                            <span class="p">{</span>
                                <span class="n">Position</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">Black</span>
                            <span class="p">};</span>

                            <span class="kt">var</span> <span class="n">canvasLinearGradientBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasLinearGradientBrush</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">canvasGradientStop</span><span class="p">)</span>
                            <span class="p">{</span>
                                <span class="n">StartPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">),</span>
                                <span class="n">EndPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">1000</span><span class="p">)</span>
                            <span class="p">};</span>
</code></pre></div></div>

<p>这里开始的点和结束的点都是相对于画布的坐标，而不是相对于使用颜色的元素。</p>

<p>这时创建一个矩形使用颜色，先设置他的坐标是 200，200，在点击按钮的时候移动矩形，可以看到矩形在移动的时候颜色在变化</p>

<p><img src="http://image.acmx.xyz/win2d%E9%A2%9C%E8%89%B2.gif" alt="" /></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="n">args</span><span class="p">.</span><span class="n">DrawingSession</span><span class="p">.</span><span class="nf">FillRectangle</span><span class="p">(</span><span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="m">300</span><span class="p">,</span> <span class="m">300</span><span class="p">),</span> <span class="n">canvasLinearGradientBrush</span><span class="p">);</span>
</code></pre></div></div>

<p>如果需要在元素内做元素渐变，就需要修改 CanvasLinearGradientBrush 的 StartPoint 和 EndPoint，让 StartPoint 为元素的左上角加上的值。</p>

<p>也就是在原先的开始和最后的点都加上元素才可以进行元素的变化。</p>

<!-- ![](image/win2d 渐变颜色/win2d 渐变颜色1.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2018772041229030.jpg" alt="" /></p>

<p>例如矩形是已知的，想要让矩形从上到下是渐变，就可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>             <span class="kt">var</span> <span class="n">rect</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="m">300</span><span class="p">,</span> <span class="m">300</span><span class="p">);</span>

           <span class="kt">var</span> <span class="n">canvasLinearGradientBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasLinearGradientBrush</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">canvasGradientStop</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">StartPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">),</span>
                <span class="n">EndPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="p">(</span><span class="n">Y</span><span class="p">+</span><span class="n">rect</span><span class="p">.</span><span class="n">Height</span><span class="p">))</span>
            <span class="p">};</span>

            <span class="n">args</span><span class="p">.</span><span class="n">DrawingSession</span><span class="p">.</span><span class="nf">FillRectangle</span><span class="p">(</span><span class="n">rect</span><span class="p">,</span> <span class="n">canvasLinearGradientBrush</span><span class="p">);</span>
</code></pre></div></div>

<p>从上面代码可以知道画出来的渐变需要开始的点和结束的点都是从 rect 计算，这样才可以做元素内的渐变</p>

<p>全部代码</p>

<p>xaml</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="n">xmlns</span><span class="p">:</span><span class="n">win2d</span><span class="p">=</span><span class="s">"using:Microsoft.Graphics.Canvas.UI.Xaml"</span>

    <span class="err">忽略的代码</span>

        <span class="p">&lt;</span><span class="n">win2d</span><span class="p">:</span><span class="n">CanvasControl</span> <span class="n">Draw</span><span class="p">=</span><span class="s">"CanvasControl_OnDraw"</span><span class="p">&gt;&lt;/</span>
</code></pre></div></div>

<p>相信大家都可以创建一个 win2d 的控件，如果还不知道如何创建，请看<a href="https://lindexi.gitee.io/post/win10-uwp-win2d-%E5%85%A5%E9%97%A8-%E7%9C%8B%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86.html">win10 uwp win2d 入门 看这一篇就够了</a></p>

<p>在后台代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">CanvasControl_OnDraw</span><span class="p">(</span><span class="n">CanvasControl</span> <span class="n">sender</span><span class="p">,</span> <span class="n">CanvasDrawEventArgs</span> <span class="n">args</span><span class="p">)</span>
        <span class="p">{</span>
        	 <span class="kt">var</span> <span class="n">canvasGradientStop</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
           
            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasGradientStop</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span>
                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">White</span>
            <span class="p">};</span>

            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasGradientStop</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Position</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">Black</span>
            <span class="p">};</span>

            <span class="kt">var</span> <span class="n">rect</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">,</span> <span class="m">300</span><span class="p">,</span> <span class="m">300</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">canvasLinearGradientBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasLinearGradientBrush</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">canvasGradientStop</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">StartPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="n">Y</span><span class="p">),</span>
                <span class="n">EndPoint</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">(</span><span class="n">X</span><span class="p">,</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="p">(</span><span class="n">Y</span> <span class="p">+</span> <span class="n">rect</span><span class="p">.</span><span class="n">Height</span><span class="p">))</span>
            <span class="p">};</span>

            <span class="n">args</span><span class="p">.</span><span class="n">DrawingSession</span><span class="p">.</span><span class="nf">FillRectangle</span><span class="p">(</span><span class="n">rect</span><span class="p">,</span> <span class="n">canvasLinearGradientBrush</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="kt">float</span> <span class="n">X</span> <span class="p">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span> <span class="m">200</span><span class="p">;</span>

        <span class="k">private</span> <span class="kt">float</span> <span class="n">Y</span> <span class="p">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span> <span class="m">200</span><span class="p">;</span>

</code></pre></div></div>
<h2 id="圆圈渐变">圆圈渐变</h2>

<p>从上面的线条渐变可以知道使用的坐标都是画布，在圆圈也是，下面给大家看一下圆圈做出来的图片</p>

<!-- ![](image/win2d 渐变颜色/win2d 渐变颜色2.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2018772050143580.jpg" alt="" /></p>

<p>使用这个颜色需要使用 CanvasRadialGradientBrush ，在创建的使用需要传入 CanvasResourceCreator 因为在 win2d 控件的画函数，所以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">canvasRadialGradientBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasRadialGradientBrush</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">canvasGradientStop</span><span class="p">);</span>
</code></pre></div></div>

<p>这里的 canvasGradientStop 还是上面的 canvasGradientStop ，但是需要知道这里的 Position 对应的是从圆心到最外面。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">canvasGradientStop</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span><span class="p">[</span><span class="m">2</span><span class="p">];</span>
            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">0</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="n">CanvasGradientStop</span>
            <span class="p">{</span>
                <span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">,</span>
                <span class="n">Color</span> <span class="p">=</span> <span class="n">Color</span><span class="p">.</span><span class="nf">FromArgb</span><span class="p">(</span><span class="m">255</span><span class="p">,</span> <span class="m">210</span><span class="p">,</span> <span class="m">200</span><span class="p">,</span> <span class="m">162</span><span class="p">)</span>
            <span class="p">};</span>

            <span class="n">canvasGradientStop</span><span class="p">[</span><span class="m">1</span><span class="p">]</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasGradientStop</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Position</span> <span class="p">=</span> <span class="m">1</span><span class="p">,</span>
                <span class="n">Color</span> <span class="p">=</span> <span class="n">Colors</span><span class="p">.</span><span class="n">Black</span>
            <span class="p">};</span>
</code></pre></div></div>

<p>所以我设置了圆心为 <code class="language-plaintext highlighter-rouge">#D2C8A2</code> 颜色，把最外面写为黑色，这样就可以做出上面看到的颜色</p>

<p>在圆圈需要设置圆心所在的坐标，这个坐标就是相对画布的，所以不是相对元素</p>

<p>为了让矩形的中心设置的颜色，我需要修改代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
            <span class="kt">var</span> <span class="n">canvasRadialGradientBrush</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">CanvasRadialGradientBrush</span><span class="p">(</span><span class="n">sender</span><span class="p">,</span> <span class="n">canvasGradientStop</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="n">Center</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Vector2</span><span class="p">((</span><span class="kt">float</span><span class="p">)</span> <span class="p">(</span><span class="n">rect</span><span class="p">.</span><span class="n">X</span> <span class="p">+</span> <span class="n">rect</span><span class="p">.</span><span class="n">Width</span> <span class="p">/</span> <span class="m">2</span><span class="p">),</span> <span class="p">(</span><span class="kt">float</span><span class="p">)</span> <span class="p">(</span><span class="n">rect</span><span class="p">.</span><span class="n">Y</span> <span class="p">+</span> <span class="n">rect</span><span class="p">.</span><span class="n">Height</span> <span class="p">/</span> <span class="m">2</span><span class="p">)),</span>
                <span class="n">RadiusX</span> <span class="p">=</span> <span class="m">300</span><span class="p">,</span>
                <span class="n">RadiusY</span> <span class="p">=</span> <span class="m">300</span>
            <span class="p">};</span>
</code></pre></div></div>

<p>因为可以使用椭圆，所以需要设置 RadiusX 就是圆的水平半径和 RadiusY 这个我也不知道什么的值。</p>

<p>这样可以做出圆心在矩形中心，半径为 300 的颜色，设置这个颜色，运行，就是上面的图片</p>

<p>参见：<a href="https://zhuanlan.zhihu.com/p/39906163">第四章(图形篇2) 几何图形CanvasGeometry</a></p>

:ET