I"8c<p>在 Office 的文本排版里面，会根据字符选择使用哪个字体插槽。也就是实际上在 Office 里面可以在一个文本段里面指定多个字体，会根据实际的字符使用不同的字体</p>

<!--more-->

<!-- CreateTime:7/8/2020 4:40:01 PM -->

<p>在做 Office 解析的时候，在 OpenXML SDK 里面是没有找到表示字体的属性的，只能找到 LatinFont 和 EastAsianFont 和 ComplexScriptFont 和 SymbolFont 这几个</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">public</span> <span class="n">TextFontType</span> <span class="n">LatinFont</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> <span class="c1">// latin</span>
        <span class="k">public</span> <span class="n">TextFontType</span> <span class="n">EastAsianFont</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> <span class="c1">// ea</span>
        <span class="k">public</span> <span class="n">TextFontType</span> <span class="n">ComplexScriptFont</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> <span class="c1">// cs</span>
        <span class="k">public</span> <span class="n">TextFontType</span> <span class="n">SymbolFont</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span> <span class="c1">// sym</span>
</code></pre></div></div>

<p>而这每个里面都可以使用不同的字体，如下面的文档</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a:r&gt;</span>
   <span class="nt">&lt;a:rPr</span> <span class="err">…</span><span class="nt">&gt;</span>
     <span class="nt">&lt;a:cs</span> <span class="na">typeface=</span><span class="s">"Times New Roman"</span><span class="nt">/&gt;</span>
     <span class="nt">&lt;a:latin</span> <span class="na">typeface=</span><span class="s">"songti"</span><span class="nt">/&gt;</span>
   <span class="nt">&lt;/a:rPr&gt;</span>
   <span class="nt">&lt;a:t&gt;</span>
 العربية 
   <span class="nt">&lt;/a:t&gt;</span> 
<span class="nt">&lt;/a:r&gt;</span>
</code></pre></div></div>

<p>可以看到这里包含了 <code class="language-plaintext highlighter-rouge">a:cs</code> 和 <code class="language-plaintext highlighter-rouge">a:latin</code> 分别表示 LatinFont 和 ComplexScriptFont 两个不同的插槽</p>

<p>那么具体的这个我也看不懂的文本应该使用 <code class="language-plaintext highlighter-rouge">Times New Roman</code> 还是使用宋体字体，这就需要使用下面这个表格的内容了</p>

<p>在 Office 里面将会根据字符的 Unicode 决定使用哪个字体插槽的字体</p>

<ul>
  <li>U+0000–U+007F latin font</li>
  <li>U+0080–U+00A6 latin font</li>
  <li>U+00A9–U+00AF latin font</li>
  <li>U+00B2–U+00B3 latin font</li>
  <li>U+00B5–U+00D6 latin font</li>
  <li>U+00D8–U+00F6 latin font</li>
  <li>U+00F8–U+058F latin font</li>
  <li>U+0590–U+074F cs font</li>
  <li>U+0780–U+07BF cs font</li>
  <li>U+0900–U+109F cs font</li>
  <li>U+10A0–U+10FF latin font</li>
  <li>U+1200–U+137F latin font</li>
  <li>U+13A0–U+177F latin font</li>
  <li>U+1D00–U+1D7F latin font</li>
  <li>U+1E00–U+1FFF latin font</li>
  <li>U+1780–U+18AF cs font</li>
  <li>U+2000–U+200B latin font</li>
  <li>U+200C–U+200F cs font</li>
  <li>U+2010–U+2029 latin font</li>
  <li>U+2018–U+201F ea font</li>
  <li>U+202A–U+202F cs font</li>
  <li>U+2030–U+2046 latin font</li>
  <li>U+204A–U+245F latin font</li>
  <li>U+2670–U+2671 cs font</li>
  <li>U+27C0–U+2BFF latin font</li>
  <li>U+3099–U+309A ea font</li>
  <li>U+D835        latin font</li>
  <li>U+F000–U+F0FF sym font</li>
  <li>U+FB00–U+FB17 latin font</li>
  <li>U+FB1D–U+FB4F cs font</li>
  <li>U+FE50–U+FE6F latin font</li>
  <li>U+1D400–U+1D7FF latin font</li>
  <li>其他 ea font</li>
</ul>

<!-- (U\+[\dA-F]*\SU\+[\dA-F]*) -->

<p>因此这和 <a href="https://blog.lindexi.com/post/C-dotnet-%E8%8E%B7%E5%8F%96%E6%9F%90%E4%B8%AA%E5%AD%97%E7%AC%A6%E6%89%80%E5%9C%A8-Unicode-%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84.html">C# dotnet 获取某个字符所在 Unicode 字符平面映射</a> 不相同</p>

<p>这是 <a href="http://www.ecma-international.org/publications/standards/Ecma-376.htm">ECMA-376</a> 规定的</p>

<p>小伙伴如果不想自动动手写代码， 可以参考我在 WPF 项目里面使用的代码，理论上你在 dotnet 的项目里面，能使用 C# 7.0 的语法就能使用</p>

<p>这是上层的使用方法，这里的 text 是输入的字符串</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">for</span> <span class="p">(</span><span class="kt">var</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">text</span><span class="p">.</span><span class="n">Length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
<span class="p">{</span>
   <span class="kt">var</span> <span class="n">c</span> <span class="p">=</span> <span class="n">text</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>

   <span class="n">TextType</span> <span class="n">currentType</span> <span class="p">=</span> <span class="n">CharUnicodeRangeTextFontType</span><span class="p">.</span><span class="nf">GetFontLang</span><span class="p">(</span><span class="n">c</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>先定义一个枚举，表示当前的文本是什么，请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">public</span> <span class="k">enum</span> <span class="n">TextType</span>
        <span class="p">{</span>
            <span class="c1">/// &lt;summary&gt;</span>
            <span class="c1">/// 默认的文本 中文系 东亚字符</span>
            <span class="c1">/// &lt;/summary&gt;</span>
            <span class="n">EastAsian</span><span class="p">,</span>
            <span class="c1">/// &lt;summary&gt;</span>
            <span class="c1">/// 拉丁英文系</span>
            <span class="c1">/// &lt;/summary&gt;</span>
            <span class="n">Latin</span><span class="p">,</span>
            <span class="c1">/// &lt;summary&gt;</span>
            <span class="c1">/// 复杂脚本</span>
            <span class="c1">/// &lt;/summary&gt;</span>
            <span class="n">ComplexScript</span><span class="p">,</span>

            <span class="c1">/// &lt;summary&gt;</span>
            <span class="c1">/// 特殊符号</span>
            <span class="c1">/// &lt;/summary&gt;</span>
            <span class="n">Symbol</span><span class="p">,</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>添加一个辅助类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="c1">/// &lt;summary&gt;</span>
    <span class="c1">/// 文本内容范围判断类</span>
    <span class="c1">/// &lt;/summary&gt;</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">TextRangePattern</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 创建文本内容范围判断类</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="c1">/// &lt;param name="minChar"&gt;&lt;/param&gt;</span>
        <span class="c1">/// &lt;param name="maxChar"&gt;&lt;/param&gt;</span>
        <span class="k">public</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="kt">int</span> <span class="n">minChar</span><span class="p">,</span> <span class="kt">int</span> <span class="n">maxChar</span><span class="p">)</span>
            <span class="p">:</span> <span class="k">this</span><span class="p">((</span><span class="kt">char</span><span class="p">)</span><span class="n">minChar</span><span class="p">,</span> <span class="p">(</span><span class="kt">char</span><span class="p">)</span><span class="n">maxChar</span><span class="p">)</span>
        <span class="p">{</span>

        <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 创建文本内容范围判断类</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="c1">/// &lt;param name="minChar"&gt;&lt;/param&gt;</span>
        <span class="c1">/// &lt;param name="maxChar"&gt;&lt;/param&gt;</span>
        <span class="k">public</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="kt">char</span> <span class="n">minChar</span><span class="p">,</span> <span class="kt">char</span> <span class="n">maxChar</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">MinChar</span> <span class="p">=</span> <span class="n">minChar</span><span class="p">;</span>
            <span class="n">MaxChar</span> <span class="p">=</span> <span class="n">maxChar</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 最小字符</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="k">public</span> <span class="kt">char</span> <span class="n">MinChar</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 最大字符</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="k">public</span> <span class="kt">char</span> <span class="n">MaxChar</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 是否输入的字符在范围内</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="c1">/// &lt;param name="c"&gt;&lt;/param&gt;</span>
        <span class="c1">/// &lt;returns&gt;&lt;/returns&gt;</span>
        <span class="k">public</span> <span class="kt">bool</span> <span class="nf">IsInRange</span><span class="p">(</span><span class="kt">char</span> <span class="n">c</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="p">!(</span><span class="n">c</span> <span class="p">&lt;</span> <span class="n">MinChar</span> <span class="p">||</span> <span class="n">c</span> <span class="p">&gt;</span> <span class="n">MaxChar</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>接着就是创建 CharUnicodeRangeTextFontType 辅助类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">static</span> <span class="k">class</span> <span class="nc">CharUnicodeRangeTextFontType</span>
    <span class="p">{</span>
        <span class="c1">// 如果觉得下面的很多单词不知道是什么意思，请看 https://zh.wikipedia.org/wiki/Unicode%E5%AD%97%E7%AC%A6%E5%B9%B3%E9%9D%A2%E6%98%A0%E5%B0%84</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">TextRangePattern</span><span class="p">[]</span> <span class="n">LatinFontTextRangePatternList</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span>
        <span class="p">{</span>
            <span class="c1">// - U\+([\dA-F]+)–U\+([\dA-F]+).*</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x0000</span><span class="p">,</span> <span class="m">0x007F</span><span class="p">),</span> <span class="c1">// - U+0000–U+007F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x0080</span><span class="p">,</span> <span class="m">0x00A6</span><span class="p">),</span> <span class="c1">// - U+0080–U+00A6 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x00A9</span><span class="p">,</span> <span class="m">0x00AF</span><span class="p">),</span> <span class="c1">// - U+00A9–U+00AF latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x00B2</span><span class="p">,</span> <span class="m">0x00B3</span><span class="p">),</span> <span class="c1">// - U+00B2–U+00B3 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x00B5</span><span class="p">,</span> <span class="m">0x00D6</span><span class="p">),</span> <span class="c1">// - U+00B5–U+00D6 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x00D8</span><span class="p">,</span> <span class="m">0x00F6</span><span class="p">),</span> <span class="c1">// - U+00D8–U+00F6 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x00F8</span><span class="p">,</span> <span class="m">0x058F</span><span class="p">),</span> <span class="c1">// - U+00F8–U+058F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x10A0</span><span class="p">,</span> <span class="m">0x10FF</span><span class="p">),</span> <span class="c1">// - U+10A0–U+10FF latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x1200</span><span class="p">,</span> <span class="m">0x137F</span><span class="p">),</span> <span class="c1">// - U+1200–U+137F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x13A0</span><span class="p">,</span> <span class="m">0x177F</span><span class="p">),</span> <span class="c1">// - U+13A0–U+177F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x1D00</span><span class="p">,</span> <span class="m">0x1D7F</span><span class="p">),</span> <span class="c1">// - U+1D00–U+1D7F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x1E00</span><span class="p">,</span> <span class="m">0x1FFF</span><span class="p">),</span> <span class="c1">// - U+1E00–U+1FFF latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x2000</span><span class="p">,</span> <span class="m">0x200B</span><span class="p">),</span> <span class="c1">// - U+2000–U+200B latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x2010</span><span class="p">,</span> <span class="m">0x2029</span><span class="p">),</span> <span class="c1">// - U+2010–U+2029 latin font</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x2030</span><span class="p">,</span> <span class="m">0x2046</span><span class="p">),</span> <span class="c1">// - U+2030–U+2046 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x204A</span><span class="p">,</span> <span class="m">0x245F</span><span class="p">),</span> <span class="c1">// - U+204A–U+245F latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x27C0</span><span class="p">,</span> <span class="m">0x2BFF</span><span class="p">),</span> <span class="c1">// - U+27C0–U+2BFF latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0xFB00</span><span class="p">,</span> <span class="m">0xFB17</span><span class="p">),</span> <span class="c1">// - U+FB00–U+FB17 latin font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0xFE50</span><span class="p">,</span> <span class="m">0xFE6F</span><span class="p">),</span> <span class="c1">// - U+FE50–U+FE6F latin font</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0xD835</span><span class="p">,</span> <span class="m">0xD835</span><span class="p">),</span> <span class="c1">// - U+D835        latin font</span>
        <span class="p">};</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">TextRangePattern</span><span class="p">[]</span> <span class="n">ComplexScriptFontTextRangePatternList</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span>
        <span class="p">{</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x0590</span><span class="p">,</span> <span class="m">0x074F</span><span class="p">),</span> <span class="c1">// - U+0590–U+074F cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x0780</span><span class="p">,</span> <span class="m">0x07BF</span><span class="p">),</span> <span class="c1">// - U+0780–U+07BF cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x0900</span><span class="p">,</span> <span class="m">0x109F</span><span class="p">),</span> <span class="c1">// - U+0900–U+109F cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x1780</span><span class="p">,</span> <span class="m">0x18AF</span><span class="p">),</span> <span class="c1">// - U+1780–U+18AF cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x200C</span><span class="p">,</span> <span class="m">0x200F</span><span class="p">),</span> <span class="c1">// - U+200C–U+200F cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x202A</span><span class="p">,</span> <span class="m">0x202F</span><span class="p">),</span> <span class="c1">// - U+202A–U+202F cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x2670</span><span class="p">,</span> <span class="m">0x2671</span><span class="p">),</span> <span class="c1">// - U+2670–U+2671 cs font </span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0xFB1D</span><span class="p">,</span> <span class="m">0xFB4F</span><span class="p">),</span> <span class="c1">// - U+FB1D–U+FB4F cs font </span>
        <span class="p">};</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">TextRangePattern</span><span class="p">[]</span> <span class="n">EastAsianFontTextRangePatternList</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span>
        <span class="p">{</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x2018</span><span class="p">,</span> <span class="m">0x201F</span><span class="p">),</span> <span class="c1">// - U+2018–U+201F ea font</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0x3099</span><span class="p">,</span> <span class="m">0x309A</span><span class="p">),</span> <span class="c1">// - U+3099–U+309A ea font  </span>
        <span class="p">};</span>

        <span class="k">private</span> <span class="k">static</span> <span class="n">TextRangePattern</span><span class="p">[]</span> <span class="n">SymbolFontTextRangePatternList</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span>
        <span class="p">{</span>
            <span class="k">new</span> <span class="nf">TextRangePattern</span><span class="p">(</span><span class="m">0xF000</span><span class="p">,</span> <span class="m">0xF0FF</span><span class="p">),</span> <span class="c1">// - U+F000–U+F0FF sym font </span>
        <span class="p">};</span>

        <span class="k">private</span> <span class="k">static</span> <span class="p">(</span><span class="n">TextType</span> <span class="n">textType</span><span class="p">,</span> <span class="n">TextRangePattern</span><span class="p">[]</span> <span class="n">fontTextRangePatternList</span><span class="p">)[]</span> <span class="n">PatternList</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span>
        <span class="p">{</span>
            <span class="p">(</span><span class="n">TextType</span><span class="p">.</span><span class="n">Latin</span><span class="p">,</span> <span class="n">LatinFontTextRangePatternList</span><span class="p">),</span>
            <span class="p">(</span><span class="n">TextType</span><span class="p">.</span><span class="n">ComplexScript</span><span class="p">,</span> <span class="n">ComplexScriptFontTextRangePatternList</span><span class="p">),</span>
            <span class="p">(</span><span class="n">TextType</span><span class="p">.</span><span class="n">EastAsian</span><span class="p">,</span> <span class="n">EastAsianFontTextRangePatternList</span><span class="p">),</span>
            <span class="p">(</span><span class="n">TextType</span><span class="p">.</span><span class="n">Symbol</span><span class="p">,</span> <span class="n">SymbolFontTextRangePatternList</span><span class="p">)</span>
        <span class="p">};</span>

        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 根据传入的字符判断当前是哪个语言项</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="c1">/// &lt;param name="ch"&gt;&lt;/param&gt;</span>
        <span class="c1">/// &lt;returns&gt;&lt;/returns&gt;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">TextType</span> <span class="nf">GetFontLang</span><span class="p">(</span><span class="kt">char</span> <span class="n">ch</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="c1">// 按照 [dotnet OpenXML 文本字体的选择规则](https://blog.lindexi.com/post/dotnet-OpenXML-%E6%96%87%E6%9C%AC%E5%AD%97%E4%BD%93%E7%9A%84%E9%80%89%E6%8B%A9%E8%A7%84%E5%88%99.html)</span>

            <span class="k">foreach</span> <span class="p">(</span><span class="kt">var</span> <span class="p">(</span><span class="n">textType</span><span class="p">,</span> <span class="n">fontTextRangePatternList</span><span class="p">)</span> <span class="k">in</span> <span class="n">PatternList</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="k">if</span> <span class="p">(</span><span class="n">fontTextRangePatternList</span><span class="p">.</span><span class="nf">Any</span><span class="p">(</span><span class="n">temp</span> <span class="p">=&gt;</span> <span class="n">temp</span><span class="p">.</span><span class="nf">IsInRange</span><span class="p">(</span><span class="n">ch</span><span class="p">)))</span>
                <span class="p">{</span>
                    <span class="k">return</span> <span class="n">textType</span><span class="p">;</span>
                <span class="p">}</span>
            <span class="p">}</span>

            <span class="c1">// - 其他 ea font</span>
            <span class="k">return</span> <span class="n">TextType</span><span class="p">.</span><span class="n">EastAsian</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>上面代码忽略 utf16 的字符</p>

:ET