I",*<p>在 C# 7.0 的时候提供更好用的模式匹配方法，支持通过 is 直接转换对应的类，但是如果是尝试转换可空的对象，那么将会提示无法编译，或转换失败</p>

<!--more-->

<!-- CreateTime:2019/8/31 16:55:58 -->

<p>在 <a href="https://blog.lindexi.com/post/C-7.0.html">C# 7.0</a> 的 is 转换是十分好用的功能，例如我写了一个 Foo 函数，支持将传入的参数转换</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">static</span> <span class="k">void</span> <span class="n">Foo</span><span class="p">&lt;</span><span class="n">T</span><span class="p">&gt;(</span><span class="kt">object</span> <span class="n">o</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span><span class="p">(</span><span class="n">o</span> <span class="k">is</span> <span class="n">T</span> <span class="n">t</span><span class="p">)</span>
            <span class="p">{</span>

            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>此时会判断如果参数属于泛型 T 那么就转换同时拿到对象 t 用于在判断里面用</p>

<p>但是有小伙伴说他传入了一个 <code class="language-plaintext highlighter-rouge">bool?</code> 问我在什么时候才能进入判断</p>

<p>于是我就尝试了下面的代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="n">Foo</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">?&gt;(</span><span class="k">null</span><span class="p">);</span>
            <span class="n">Foo</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">?&gt;(</span><span class="k">true</span><span class="p">);</span>
</code></pre></div></div>

<p>此时发现传入 <code class="language-plaintext highlighter-rouge">null</code> 的时候不会进入判断，同时传入 true 的时候可以进入判断</p>

<p>也就是对于 <code class="language-plaintext highlighter-rouge">if (null is bool? b)</code> 将会一直返回 false 同时这段代码也编译不通过，如果我将可空包装一下会如何</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">object</span> <span class="n">o</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">o</span> <span class="k">is</span> <span class="n">Nullable</span><span class="p">&lt;</span><span class="kt">bool</span><span class="p">&gt;</span> <span class="n">b</span><span class="p">)</span>
            <span class="p">{</span>

            <span class="p">}</span>
</code></pre></div></div>

<p>其实上面代码也是编译不通过的，会看到提示在模式匹配里面使用可以为 null 的类型<code class="language-plaintext highlighter-rouge">bool?</code>是非法的；请改用基础类型<code class="language-plaintext highlighter-rouge">bool</code> 也就是模式匹配里面对于空的判断是认为小伙伴不能这样写</p>

<p>这个用法和 as 有一些不同</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">b</span> <span class="p">=</span> <span class="k">null</span> <span class="k">as</span> <span class="kt">bool</span><span class="p">?;</span>
</code></pre></div></div>

<p>上面代码可以计算出一个为空的 <code class="language-plaintext highlighter-rouge">bool?</code> 但是在模式匹配里面是不进入判断</p>

<p>也就是在模式匹配里面其实不包含可空</p>

<p>这个问题有<a href="https://github.com/Blue0500">Blue</a>小伙伴在 github 上的<a href="https://github.com/dotnet/roslyn/issues/20156">roslyn #20156</a> 提出，他的问题翻译出来大概是这样</p>

<p>在进行可空的模式匹配的时候，将会编译出错，如果使用 <code class="language-plaintext highlighter-rouge">Nullable&lt;int&gt;</code> 将提示错误 <code class="language-plaintext highlighter-rouge">CS8116</code> 编译失败。使用 <code class="language-plaintext highlighter-rouge">int?</code> 将会提示 <code class="language-plaintext highlighter-rouge">CS1003</code> <code class="language-plaintext highlighter-rouge">CS1525</code> <code class="language-plaintext highlighter-rouge">CS0103</code> 编译失败</p>

<p>这里需要了解一下运算对于 is 的做法，对于 <code class="language-plaintext highlighter-rouge">int?</code> 其实你会看到格式化的时候是 <code class="language-plaintext highlighter-rouge">int ?</code> 中间有一个空格</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">object</span> <span class="n">o</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>

            <span class="k">if</span> <span class="p">(</span><span class="n">o</span> <span class="k">is</span> <span class="kt">bool</span> <span class="p">?</span> <span class="n">b</span><span class="p">)</span>
            <span class="p">{</span>

            <span class="p">}</span>
</code></pre></div></div>

<p>这是因为这句表达式编译出来的是 <code class="language-plaintext highlighter-rouge">if ((o is bool) ? b)</code> 这里还缺少的就是后面的值</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">if</span> <span class="p">(</span><span class="n">o</span> <span class="k">is</span> <span class="kt">bool</span> <span class="p">?</span> <span class="k">true</span> <span class="p">:</span> <span class="k">false</span><span class="p">)</span>
</code></pre></div></div>

<p>这里的 <code class="language-plaintext highlighter-rouge">o is bool?</code> 作为的是运算符 <code class="language-plaintext highlighter-rouge">(o is bool) ? 如果o是bool 的时候的值: 如果不是的时候的值</code> 所以提示的无法编译就是找不到定义的变量和表达式为 false 的变量</p>

<p>那么现在尝试做一道题</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">B</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&amp;(</span><span class="n">B</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">1</span><span class="p">;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&gt;(</span><span class="n">B</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">2</span><span class="p">;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&lt;(</span><span class="n">B</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">3</span><span class="p">;</span>

        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&amp;(</span><span class="kt">bool</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">5</span><span class="p">;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&gt;(</span><span class="kt">bool</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">6</span><span class="p">;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="kt">int</span> <span class="k">operator</span> <span class="p">&lt;(</span><span class="kt">bool</span> <span class="n">left</span><span class="p">,</span> <span class="n">B</span> <span class="n">right</span><span class="p">)</span> <span class="p">=&gt;</span> <span class="m">7</span><span class="p">;</span>
    <span class="p">}</span>

         <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">(</span><span class="kt">string</span><span class="p">[]</span> <span class="n">args</span><span class="p">)</span>
         <span class="p">{</span>
             <span class="kt">object</span> <span class="n">a</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
             <span class="n">B</span> <span class="n">c</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
             <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">a</span> <span class="k">is</span> <span class="n">B</span> <span class="p">&amp;</span> <span class="n">c</span><span class="p">);</span>
             <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">a</span> <span class="k">is</span> <span class="n">B</span> <span class="p">&gt;</span> <span class="n">c</span><span class="p">);</span>
             <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">a</span> <span class="k">is</span> <span class="n">B</span> <span class="p">&lt;</span> <span class="n">c</span><span class="p">);</span>
         <span class="p">}</span>
</code></pre></div></div>

<p>请问上面代码输出多少</p>

<p>是将 <code class="language-plaintext highlighter-rouge">a is B</code> 的值作为 bool 转入计算还是将 <code class="language-plaintext highlighter-rouge">a is B b</code> 这个隐藏的 b 传入计算</p>

<p>请看 <a href="https://blog.walterlv.com/post/how-to-identify-a-nullable-type.html">int? 竟然真的可以是 null</a></p>

:ET