I"!<p>开发者可以设置UWP特定设备xaml view，在桌面，手机，Iot，这个对于设置对不同设备的不同屏幕有用。我们可以使用RelativePanel，VisualStateTriggers，但是这样我们的xaml很大，我们在弄的时候觉得想修改一个东西会让我们把全部删了。
为了让我们可以在不同设备使用不同xaml view，我们可以有下面的方式：</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:16:52 -->

<div id="toc"></div>

<p>在不同设备显示不同背景颜色，文本，在同xaml，开始的页面</p>

<Page x:Class="DeviceFamily.MainPage" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="using:DeviceFamily" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <Grid Background="Blue">
        <TextBlock Foreground="White" Text="This is desktop." FontSize="72" VerticalAlignment="Center" HorizontalAlignment="Center" />
    </Grid>
</Page>

<h2 id="新建文件夹devicefamily-type">新建文件夹DeviceFamily-Type</h2>

<p>里面的type是我们的设备，手机：Mobile，桌面：Desktop，IOT</p>

<p>在我们的解决方案新建一个文件夹，我们这里在手机Mobile</p>

<p><img src="http://image.acmx.xyz/16-4-6/21773005.jpg" alt="" /></p>

<p>我们在新建DeviceFamily-Mobile新建xaml，MainPage</p>

<p><img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438517274/deviceFamilyVS2_g6gazd.jpg" alt="这里写图片描述" /></p>

<p>新建类MainPage</p>

<p><img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438517385/deviceFamilyVS3_zrnft1.jpg" alt="这里写图片描述" /></p>

<p>如果在手机运行，就会使用DeviceFamily-Mobile/MainPage.xaml，如果是其他，就会使用解决方案DeviceFamily/MainPage.xaml</p>
<h2 id="在xaml文件加devicefamily-type">在xaml文件加.DeviceFamily-Type</h2>
<p>第二种方式在xaml文件加.DeviceFamily-Type，我们创建一个新的xaml，MainPage.DeviceFamily-Mobile.xaml
<img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438517871/deviceFamilyVS4_syhdit.jpg" alt="这里写图片描述" />
我们不能使用方法1和2在一个工程。</p>

<p>我们打开mobil会使用MainPage.DeviceFamily-Mobile.xaml</p>

<h2 id="initializecomponent重载">InitializeComponent重载</h2>

<p>添加一个DeviceFamily-Type文件夹在里面写一个xaml会在MainPage.g.i.cs对InitializeComponent重载。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">void</span> <span class="nf">InitializeComponent</span><span class="p">(</span><span class="k">global</span><span class="p">::</span><span class="n">System</span><span class="p">.</span><span class="n">Uri</span> <span class="n">resourceLocator</span><span class="p">)</span>  
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">_contentLoaded</span><span class="p">)</span>
        <span class="k">return</span><span class="p">;</span>

    <span class="n">_contentLoaded</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="n">resourceLocator</span> <span class="p">==</span> <span class="k">null</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">resourceLocator</span> <span class="p">=</span> <span class="k">new</span> <span class="k">global</span><span class="p">::</span><span class="n">System</span><span class="p">.</span><span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appx:///MainPage.xaml"</span><span class="p">);</span>
    <span class="p">}</span>
    <span class="k">global</span><span class="p">::</span><span class="n">Windows</span><span class="p">.</span><span class="n">UI</span><span class="p">.</span><span class="n">Xaml</span><span class="p">.</span><span class="n">Application</span><span class="p">.</span><span class="nf">LoadComponent</span><span class="p">(</span><span class="k">this</span><span class="p">,</span> <span class="n">resourceLocator</span><span class="p">,</span> <span class="k">global</span><span class="p">::</span><span class="n">Windows</span><span class="p">.</span><span class="n">UI</span><span class="p">.</span><span class="n">Xaml</span><span class="p">.</span><span class="n">Controls</span><span class="p">.</span><span class="n">Primitives</span><span class="p">.</span><span class="n">ComponentResourceLocation</span><span class="p">.</span><span class="n">Application</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>可以指定一个uri到需要xaml</p>

<p><img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438520919/deviceFamilyVS5_gdgxb8.jpg" alt="这里写图片描述" /></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="nf">MainPage</span><span class="p">()</span>  
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">AnalyticsInfo</span><span class="p">.</span><span class="n">VersionInfo</span><span class="p">.</span><span class="n">DeviceFamily</span> <span class="p">==</span> <span class="s">"Windows.Mobile"</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span> <span class="p">(</span><span class="n">usePrimary</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">InitializeComponent</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appx:///PrimaryMainPage.xaml"</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Absolute</span><span class="p">));</span>
        <span class="p">}</span>
        <span class="k">else</span>
        <span class="p">{</span>
            <span class="nf">InitializeComponent</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appx:///SecondaryMainPage.xaml"</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Absolute</span><span class="p">));</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">else</span>
    <span class="p">{</span>
        <span class="nf">InitializeComponent</span><span class="p">();</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>
<p>使用DeviceFamily指定视图的效果，首先是桌面的MainPage.xaml</p>

<p><img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438521366/desktop_yaxua2.jpg" alt="这里写图片描述" />
我们使用不同颜色放在mobil
<img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438521806/mobile1_sin4zt.jpg" alt="这里写图片描述" />
如果使用方式3，我们需要手动在main写我们需要加载，我们有两个xaml
<img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438522070/mobile-primary_j8v5fl.jpg" alt="这里写图片描述" /></p>

<p><img src="http://res.cloudinary.com/dvi6ot1t1/image/upload/v1438522070/mobile-secondary_gjihv4.jpg" alt="这里写图片描述" /></p>

<p>单页面触发器</p>

<p>我们可以在一个页面不同设备使用不同的xaml
<a href="https://github.com/dotMorten/WindowsStateTriggers/blob/master/src/TestApp/Samples/DeviceFamilySample.xaml">WindowsStateTriggers DeviceFamily sample</a></p>

<p>https://github.com/igrali/UWP-DeviceFamily</p>

<p>http://www.cnblogs.com/mushroom/p/5080032.html</p>

<p>http://igrali.com/2015/08/02/three-ways-to-set-specific-devicefamily-xaml-views-in-uwp/</p>

:ET