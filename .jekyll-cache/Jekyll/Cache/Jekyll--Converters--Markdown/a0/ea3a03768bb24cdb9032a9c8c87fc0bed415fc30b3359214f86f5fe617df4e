I":=<p>在 Office 文档的一些有趣的设计，颜色和画刷是可以继承的，这个继承包括了属性的继承。在形状填充里面使用的渐变色是可以一部分属性放在主题里面，主要找到主题里面的画刷，替换掉形状自己定义的内容，才是形状的画刷</p>

<!--more-->

<!-- CreateTime:5/20/2020 11:46:32 AM -->

<p>我拿到一份有趣的课件，从这份课件的表现上，可以找到在一个 Shape 元素里面的 ShapeProperties 定义了 GradientFill 属性</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// OpenXmlElementList element</span>
<span class="kt">var</span> <span class="n">gradientFill</span> <span class="p">=</span> <span class="n">element</span><span class="p">.</span><span class="n">First</span><span class="p">&lt;</span><span class="n">GradientFill</span><span class="p">&gt;();</span>
</code></pre></div></div>

<p>而这个 gradientFill 的 GradientStopList 的值是空</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">gradientFill</span><span class="p">.</span><span class="n">GradientStopList</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
<span class="p">{</span>

<span class="p">}</span>
</code></pre></div></div>

<p>通过 <a href="http://officeopenxml.com/drwSp-GradFill.php">Office Open XML - DrawingML - Shapes - Gradient Fill</a> 可以知道，这个 GradientStopList 是用来定义渐变的颜色的，也就是这个值是空那么就是渐变将会丢失颜色，也就是形状填充丢失渐变色</p>

<p>从文档上看，形状属性定义里面没有 <code class="language-plaintext highlighter-rouge">gsLst</code> 的值</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">p</span><span class="p">:</span><span class="n">spPr</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">xfrm</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">off</span> <span class="n">x</span><span class="p">=</span><span class="s">"611560"</span> <span class="n">y</span><span class="p">=</span><span class="s">"1059582"</span><span class="p">/&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">ext</span> <span class="n">cx</span><span class="p">=</span><span class="s">"2120518"</span> <span class="n">cy</span><span class="p">=</span><span class="s">"645160"</span><span class="p">/&gt;</span>
	<span class="p">&lt;/</span><span class="n">a</span><span class="p">:</span><span class="n">xfrm</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">prstGeom</span> <span class="n">prst</span><span class="p">=</span><span class="s">"rect"</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">avLst</span><span class="p">/&gt;</span>
	<span class="p">&lt;/</span><span class="n">a</span><span class="p">:</span><span class="n">prstGeom</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">gradFill</span> <span class="n">flip</span><span class="p">=</span><span class="s">"none"</span> <span class="n">rotWithShape</span><span class="p">=</span><span class="s">"1"</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">lin</span> <span class="n">ang</span><span class="p">=</span><span class="s">"10800000"</span> <span class="n">scaled</span><span class="p">=</span><span class="s">"1"</span><span class="p">/&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">tileRect</span><span class="p">/&gt;</span>
	<span class="p">&lt;/</span><span class="n">a</span><span class="p">:</span><span class="n">gradFill</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">p</span><span class="p">:</span><span class="n">spPr</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>也就是 <code class="language-plaintext highlighter-rouge">a:gradFill</code> 里面不包含 <code class="language-plaintext highlighter-rouge">a:gsLst</code> 的值，也就是没有 <code class="language-plaintext highlighter-rouge">a:gs</code> 定义颜色</p>

<p>这个问题是 <code class="language-plaintext highlighter-rouge">OpenXML a:gradFill without a:gsLst</code> 渐变色里面没有 GradientStopList 的值</p>

<p>而在这个形状一般都可以看到 ShapeStyle 的值，这个值里面有一个属性是 FillReference 表示样式里面的填充</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">p</span><span class="p">:</span><span class="n">style</span><span class="p">&gt;</span>
	<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">fillRef</span> <span class="n">idx</span><span class="p">=</span><span class="s">"2"</span><span class="p">&gt;</span>
		<span class="p">&lt;</span><span class="n">a</span><span class="p">:</span><span class="n">schemeClr</span> <span class="n">val</span><span class="p">=</span><span class="s">"accent3"</span><span class="p">/&gt;</span>
	<span class="p">&lt;/</span><span class="n">a</span><span class="p">:</span><span class="n">fillRef</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">p</span><span class="p">:</span><span class="n">style</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>而这个样式要的属性是 idx 属性，表示属于主题的哪个样式</p>

<p>那么在 OpenXML SDK 里面如何获取主题，如果是在 Slide 页面的元素可以通过下面的代码获取主题</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Slide slide</span>
<span class="kt">var</span> <span class="n">slidePart</span> <span class="p">=</span> <span class="n">slide</span><span class="p">.</span><span class="n">SlidePart</span><span class="p">;</span>
<span class="n">FormatScheme</span> <span class="n">formatScheme</span> <span class="p">=</span> <span class="n">slidePart</span><span class="p">?.</span><span class="n">ThemeOverridePart</span><span class="p">?.</span><span class="n">ThemeOverride</span><span class="p">?.</span><span class="n">FormatScheme</span><span class="p">;</span>
</code></pre></div></div>

<p>当前，如果 Slide 拿不到就从 SlideLayoutPart 拿，再拿不到就从 SlideMasterPart 拿</p>

<p>然后是通过 FillReference 的 idx 从 FormatScheme 的 FillStyleList 拿到指定的元素，注意这里的 idx 使用的是从 1 开始的下标。但是 FillStyleList 的数组是 C# 的数组，下标是从 0 开始</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// FillReference reference, FormatScheme formatScheme</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">reference</span><span class="p">.</span><span class="n">Index</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">formatScheme</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="kt">var</span> <span class="n">index</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">reference</span><span class="p">.</span><span class="n">Index</span><span class="p">.</span><span class="n">Value</span><span class="p">;</span>

        <span class="kt">var</span> <span class="n">openXmlElementList</span> <span class="p">=</span> <span class="n">formatScheme</span><span class="p">.</span><span class="n">FillStyleList</span><span class="p">?.</span><span class="n">ChildElements</span><span class="p">;</span>

        <span class="k">if</span> <span class="p">(</span><span class="n">openXmlElementList</span> <span class="p">!=</span> <span class="k">null</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">return</span> <span class="nf">GetThemeElement</span><span class="p">(</span><span class="n">index</span><span class="p">,</span> <span class="n">openXmlElementList</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>而 GetThemeElement 方法的实现如下</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">static</span> <span class="n">OpenXmlElement</span> <span class="nf">GetThemeElement</span><span class="p">(</span><span class="kt">int</span> <span class="n">index</span><span class="p">,</span> <span class="n">OpenXmlElementList</span> <span class="n">elements</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">index</span> <span class="p">&gt;</span> <span class="m">0</span> <span class="p">&amp;&amp;</span> <span class="n">elements</span> <span class="p">!=</span> <span class="k">null</span> <span class="p">&amp;&amp;</span> <span class="n">elements</span><span class="p">.</span><span class="n">Count</span> <span class="p">&gt;=</span> <span class="n">index</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="c1">//GetItem是0 base的数组，所以需要减去1</span>
                <span class="kt">var</span> <span class="n">xmlElement</span> <span class="p">=</span> <span class="n">elements</span><span class="p">.</span><span class="nf">GetItem</span><span class="p">(</span><span class="n">index</span> <span class="p">-</span> <span class="m">1</span><span class="p">);</span>

                <span class="k">return</span> <span class="n">xmlElement</span><span class="p">;</span>
            <span class="p">}</span>

            <span class="k">return</span> <span class="k">null</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>此时就能拿到 OpenXmlElement 返回值了，这个 OpenXmlElement 是某个填充颜色。在 OpenXML SDK 里面没有给填充颜色一个基类，这部分的设计不是很好</p>

<p>在 PPT 文档里面对应的是 <code class="language-plaintext highlighter-rouge">ppt\theme\themex.xml</code> 文件里面的 <code class="language-plaintext highlighter-rouge">a:fillStyleLst</code> 的值</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a:fmtScheme</span> <span class="na">name=</span><span class="s">"Office"</span><span class="nt">&gt;</span>
	<span class="nt">&lt;a:fillStyleLst&gt;</span>
		<span class="nt">&lt;a:solidFill&gt;</span>
			<span class="nt">&lt;a:schemeClr</span> <span class="na">val=</span><span class="s">"phClr"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;/a:solidFill&gt;</span>
		<span class="nt">&lt;a:gradFill</span> <span class="na">rotWithShape=</span><span class="s">"1"</span><span class="nt">&gt;</span>
			<span class="nt">&lt;a:gsLst&gt;</span>
				<span class="nt">&lt;a:gs</span> <span class="na">pos=</span><span class="s">"0"</span><span class="nt">&gt;</span>
					<span class="nt">&lt;a:schemeClr</span> <span class="na">val=</span><span class="s">"phClr"</span><span class="nt">&gt;</span>
						<span class="nt">&lt;a:tint</span> <span class="na">val=</span><span class="s">"50000"</span><span class="nt">/&gt;</span>
						<span class="nt">&lt;a:satMod</span> <span class="na">val=</span><span class="s">"300000"</span><span class="nt">/&gt;</span>
					<span class="nt">&lt;/a:schemeClr&gt;</span>
				<span class="nt">&lt;/a:gs&gt;</span>
				<span class="nt">&lt;a:gs</span> <span class="na">pos=</span><span class="s">"35000"</span><span class="nt">&gt;</span>
					<span class="nt">&lt;a:schemeClr</span> <span class="na">val=</span><span class="s">"phClr"</span><span class="nt">&gt;</span>
						<span class="nt">&lt;a:tint</span> <span class="na">val=</span><span class="s">"37000"</span><span class="nt">/&gt;</span>
						<span class="nt">&lt;a:satMod</span> <span class="na">val=</span><span class="s">"300000"</span><span class="nt">/&gt;</span>
					<span class="nt">&lt;/a:schemeClr&gt;</span>
				<span class="nt">&lt;/a:gs&gt;</span>
				<span class="nt">&lt;a:gs</span> <span class="na">pos=</span><span class="s">"100000"</span><span class="nt">&gt;</span>
					<span class="nt">&lt;a:schemeClr</span> <span class="na">val=</span><span class="s">"phClr"</span><span class="nt">&gt;</span>
						<span class="nt">&lt;a:tint</span> <span class="na">val=</span><span class="s">"15000"</span><span class="nt">/&gt;</span>
						<span class="nt">&lt;a:satMod</span> <span class="na">val=</span><span class="s">"350000"</span><span class="nt">/&gt;</span>
					<span class="nt">&lt;/a:schemeClr&gt;</span>
				<span class="nt">&lt;/a:gs&gt;</span>
			<span class="nt">&lt;/a:gsLst&gt;</span>
			<span class="nt">&lt;a:lin</span> <span class="na">ang=</span><span class="s">"16200000"</span> <span class="na">scaled=</span><span class="s">"1"</span><span class="nt">/&gt;</span>
		<span class="nt">&lt;/a:gradFill&gt;</span>
		<span class="c">&lt;!-- 忽略代码 --&gt;</span>
</code></pre></div></div>

<p>上面文档里面用的是 idx 是 2 也就是对应 <code class="language-plaintext highlighter-rouge">a:fillStyleLst</code> 的第二项，也就是 <code class="language-plaintext highlighter-rouge">a:gradFill</code> 渐变的值</p>

<p>此时的主题的 <code class="language-plaintext highlighter-rouge">a:gradFill</code> 的 <code class="language-plaintext highlighter-rouge">a:gsLst</code> 将会被形状的填充用到，如果形状的填充的颜色也是渐变色，如果这个渐变色没有设置 <code class="language-plaintext highlighter-rouge">a:gsLst</code> 的值，那么将会采用主题里面的 <code class="language-plaintext highlighter-rouge">a:gsLst</code> 的值。如果形状自己定义了就使用形状定义的</p>

<!-- ![](image/dotnet OpenXml SDK 形状填充渐变色的主题色/dotnet OpenXml SDK 形状填充渐变色的主题色0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20205201421454732.jpg" alt="" /></p>

<p>请看下图就知道如何获取</p>

<!-- ![](image/dotnet OpenXml SDK 形状填充渐变色的主题色/dotnet OpenXml SDK 形状填充渐变色的主题色1.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20205201425124820.jpg" alt="" /></p>

<p>大部分的存在继承关系和联系的都在 OpenXML SDK 里面写出来关系了，只有这些比较边角的功能需要自己实现</p>

<p>而渐变色的各个属性的行为请看 <a href="http://officeopenxml.com/drwSp-GradFill.php">Office Open XML - DrawingML - Shapes - Gradient Fill</a></p>

<p>官方文档请看 <a href="https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.drawing.gradientfill?view=openxml-2.8.1">GradientFill Class (DocumentFormat.OpenXml.Drawing)</a></p>

:ET