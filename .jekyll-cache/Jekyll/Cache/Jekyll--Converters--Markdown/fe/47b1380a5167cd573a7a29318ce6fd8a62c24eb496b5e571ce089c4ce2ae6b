I"+,<p>在拿到一个 Stream 如何优雅将这个 Stream 保存到代码</p>

<!--more-->

<!-- CreateTime:2020/3/14 9:22:48 -->

<p>最优雅的方法应该是通过 CopyTo 或 CopyToAsync 的方法</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">fileStream</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"C:\\lindexi\\File.txt"</span><span class="p">))</span>
<span class="p">{</span>
    <span class="n">inputStream</span><span class="p">.</span><span class="nf">Seek</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="n">SeekOrigin</span><span class="p">.</span><span class="n">Begin</span><span class="p">);</span>
    <span class="n">iputStream</span><span class="p">.</span><span class="nf">CopyTo</span><span class="p">(</span><span class="n">fileStream</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>这里的 <code class="language-plaintext highlighter-rouge">inputStream.Seek(0, SeekOrigin.Begin);</code> 不一定需要，请根据你自己的需求，如你只需要将这个 Stream 的从第10个byte开始复制等就不能采用这句代码</p>

<p>用异步方法会让本次写入的时间长一点，但是会让总体性能更好，让 CPU 能处理其他任务</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">fileStream</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"C:\\lindexi\\File.txt"</span><span class="p">))</span>
<span class="p">{</span>
    <span class="k">await</span> <span class="n">iputStream</span><span class="p">.</span><span class="nf">CopyToAsync</span><span class="p">(</span><span class="n">fileStream</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>注意使用 CopyToAsync 记得加上 await 哦，执行到这句代码的时候，就将执行交给了 IO 了，大部分的 IO 处理都不需要 CPU 进行计算，这样能达到总体性能更好</p>

<p>另外如果 iputStream 是外面传入的，那么我不建议在这个方法里面释放，为什么呢？我用的好好的一个Stream传入一个业务就被干掉了</p>

<p>其次的方法是自己控制内存复制缓存，此方法将会多出一次内存复制</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">static</span> <span class="k">void</span> <span class="nf">CopyStream</span><span class="p">(</span><span class="n">Stream</span> <span class="n">input</span><span class="p">,</span> <span class="n">Stream</span> <span class="n">output</span><span class="p">)</span>
<span class="p">{</span>
    <span class="kt">byte</span><span class="p">[]</span> <span class="n">buffer</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="m">1024</span><span class="p">];</span>
    <span class="kt">int</span> <span class="n">len</span><span class="p">;</span>
    <span class="k">while</span> <span class="p">(</span> <span class="p">(</span><span class="n">len</span> <span class="p">=</span> <span class="n">input</span><span class="p">.</span><span class="nf">Read</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">buffer</span><span class="p">.</span><span class="n">Length</span><span class="p">))</span> <span class="p">&gt;</span> <span class="m">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">output</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">buffer</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">len</span><span class="p">);</span>
    <span class="p">}</span>    
<span class="p">}</span>

<span class="c1">// 使用方法如下</span>
<span class="k">using</span> <span class="p">(</span><span class="n">Stream</span> <span class="n">file</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"C:\\lindexi\\File.txt"</span><span class="p">))</span>
<span class="p">{</span>
    <span class="nf">CopyStream</span><span class="p">(</span><span class="n">input</span><span class="p">,</span> <span class="n">file</span><span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>此方法的作用就是让你修改 <code class="language-plaintext highlighter-rouge">new byte[1024]</code> 的值，让你可以控制复制的缓存</p>

<p>接下来就是一些不推荐的方法了，但是写的时候方便</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">stream</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MemoryStream</span><span class="p">())</span>
<span class="p">{</span>
    <span class="n">input</span><span class="p">.</span><span class="nf">CopyTo</span><span class="p">(</span><span class="n">stream</span><span class="p">);</span>
    <span class="n">File</span><span class="p">.</span><span class="nf">WriteAllBytes</span><span class="p">(</span><span class="n">file</span><span class="p">,</span> <span class="n">stream</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">());</span>
<span class="p">}</span>
</code></pre></div></div>

<p>上面这个方法将会复制两次内存，而且如果 input 这个资源长度有 1G 就要占用 2G 的资源</p>

<p>和上面差不多的是申请一个大的缓存，如下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">void</span> <span class="nf">SaveStreamToFile</span><span class="p">(</span><span class="kt">string</span> <span class="n">fileFullPath</span><span class="p">,</span> <span class="n">Stream</span> <span class="n">stream</span><span class="p">)</span>
<span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">stream</span><span class="p">.</span><span class="n">Length</span> <span class="p">==</span> <span class="m">0</span><span class="p">)</span> <span class="k">return</span><span class="p">;</span>

    <span class="k">using</span> <span class="p">(</span><span class="n">FileStream</span> <span class="n">fileStream</span> <span class="p">=</span> <span class="n">System</span><span class="p">.</span><span class="n">IO</span><span class="p">.</span><span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="n">fileFullPath</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">stream</span><span class="p">.</span><span class="n">Length</span><span class="p">))</span>
    <span class="p">{</span>
        <span class="kt">byte</span><span class="p">[]</span> <span class="n">bytesInStream</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="p">[</span><span class="n">stream</span><span class="p">.</span><span class="n">Length</span><span class="p">];</span>
        <span class="n">stream</span><span class="p">.</span><span class="nf">Read</span><span class="p">(</span><span class="n">bytesInStream</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span><span class="n">bytesInStream</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>

        <span class="n">fileStream</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">bytesInStream</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">bytesInStream</span><span class="p">.</span><span class="n">Length</span><span class="p">);</span>
     <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>从效率和代码的优雅其实都不如 CopyTo 方法，而且因为 stream.Length 作为长度没有决定缓存，所以也不如第二个方法</p>

<p>下面是一个超级慢的方法，一个 byte 一个 byte 写入的速度是超级慢的</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">public</span> <span class="k">void</span> <span class="nf">SaveStreamToFile</span><span class="p">(</span><span class="n">Stream</span> <span class="n">stream</span><span class="p">,</span> <span class="kt">string</span> <span class="n">filename</span><span class="p">)</span>
<span class="p">{</span>  
   <span class="k">using</span><span class="p">(</span><span class="n">Stream</span> <span class="n">destination</span> <span class="p">=</span> <span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="n">filename</span><span class="p">))</span>
   <span class="p">{</span>
       <span class="nf">Write</span><span class="p">(</span><span class="n">stream</span><span class="p">,</span> <span class="n">destination</span><span class="p">);</span>
   <span class="p">}</span>
<span class="p">}</span>


<span class="k">public</span> <span class="k">void</span> <span class="nf">Write</span><span class="p">(</span><span class="n">Stream</span> <span class="k">from</span><span class="p">,</span> <span class="n">Stream</span> <span class="n">to</span><span class="p">)</span>
<span class="p">{</span>
      <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">a</span> <span class="p">=</span> <span class="k">from</span><span class="p">.</span><span class="nf">ReadByte</span><span class="p">();</span> <span class="n">a</span> <span class="p">!=</span> <span class="p">-</span><span class="m">1</span><span class="p">;</span> <span class="n">a</span> <span class="p">=</span> <span class="k">from</span><span class="p">.</span><span class="nf">ReadByte</span><span class="p">())</span>
      <span class="p">{</span>
      	<span class="n">to</span><span class="p">.</span><span class="nf">WriteByte</span><span class="p">(</span> <span class="p">(</span><span class="kt">byte</span><span class="p">)</span> <span class="n">a</span> <span class="p">);</span>
      <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p><a href="https://stackoverflow.com/questions/411592/how-do-i-save-a-stream-to-a-file-in-c">.net - How do I save a stream to a file in C#? - Stack Overflow</a></p>

:ET