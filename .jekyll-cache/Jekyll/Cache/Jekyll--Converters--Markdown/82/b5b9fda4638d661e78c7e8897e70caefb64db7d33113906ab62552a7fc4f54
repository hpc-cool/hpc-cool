I"l)<p>我在写一个有趣的 WPF 应用，我会不断收到从硬件发过来的数据，这些数据被使用 Byte[] 数组进行传输。我想要使用最快的方法转换为我的 int 数组或者转换为结构体数组，此时可以使用不安全代码的方式转换</p>

<!--more-->

<!-- CreateTime:2021/1/26 19:52:43 -->

<!-- 发布 -->

<p>假定有一个二进制数组 Byte[] 是使用如下代码创建的</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">memoryStream</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MemoryStream</span><span class="p">();</span>
            <span class="kt">var</span> <span class="n">binaryWriter</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">BinaryWriter</span><span class="p">(</span><span class="n">memoryStream</span><span class="p">);</span>
            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">100</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="n">binaryWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">i</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="n">memoryStream</span><span class="p">.</span><span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

            <span class="kt">var</span> <span class="n">byteList</span> <span class="p">=</span> <span class="n">memoryStream</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
</code></pre></div></div>

<p>也就是说本质这是一个 int 数组，在获取到 byteList 时，可以如何快速转换为 int 数组使用？如果使用不安全代码，那么转换逻辑将会非常简单</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="k">unsafe</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">length</span> <span class="p">=</span> <span class="n">byteList</span><span class="p">.</span><span class="n">Length</span> <span class="p">/</span> <span class="k">sizeof</span><span class="p">(</span><span class="kt">int</span><span class="p">);</span>
                <span class="k">fixed</span> <span class="p">(</span><span class="kt">byte</span><span class="p">*</span> <span class="n">bytePointer</span> <span class="p">=</span> <span class="n">byteList</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="kt">int</span><span class="p">*</span> <span class="n">intList</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">*)</span> <span class="n">bytePointer</span><span class="p">;</span>
                    <span class="c1">// 这里就获取到了 int 数组，虽然这是一个指针的数组</span>
                    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="kt">int</span> <span class="k">value</span> <span class="p">=</span> <span class="p">*</span><span class="n">intList</span><span class="p">;</span>
                        <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="k">value</span><span class="p">);</span>
                        <span class="n">intList</span><span class="p">++;</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></div></div>

<p>在使用不安全代码的时候，需要在项目属性生成里面勾选允许不安全代码，或者在csproj中添加下面代码</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;PropertyGroup&gt;</span>
    <span class="nt">&lt;AllowUnsafeBlocks&gt;</span>true<span class="nt">&lt;/AllowUnsafeBlocks&gt;</span>
  <span class="nt">&lt;/PropertyGroup&gt;</span>
</code></pre></div></div>

<p>而如果此时的 byte 数组的内容实际是某个结构体呢？例如我有一个结构体定义如下</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="p">[</span><span class="nf">StructLayout</span><span class="p">(</span><span class="n">LayoutKind</span><span class="p">.</span><span class="n">Sequential</span><span class="p">)]</span>
        <span class="k">struct</span> <span class="nc">FooStruct</span>
        <span class="p">{</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">N1</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">N2</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">public</span> <span class="kt">int</span> <span class="n">N3</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>使用这个代码写入到二进制</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="m">100</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">fooStruct</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FooStruct</span><span class="p">()</span>
                <span class="p">{</span>
                    <span class="n">N1</span> <span class="p">=</span> <span class="n">i</span><span class="p">,</span>
                    <span class="n">N2</span> <span class="p">=</span> <span class="n">i</span><span class="p">,</span>
                    <span class="n">N3</span> <span class="p">=</span> <span class="n">i</span>
                <span class="p">};</span>
                <span class="n">binaryWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">fooStruct</span><span class="p">.</span><span class="n">N1</span><span class="p">);</span>
                <span class="n">binaryWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">fooStruct</span><span class="p">.</span><span class="n">N2</span><span class="p">);</span>
                <span class="n">binaryWriter</span><span class="p">.</span><span class="nf">Write</span><span class="p">(</span><span class="n">fooStruct</span><span class="p">.</span><span class="n">N3</span><span class="p">);</span>
            <span class="p">}</span>

            <span class="n">memoryStream</span><span class="p">.</span><span class="n">Position</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>

            <span class="n">byteList</span> <span class="p">=</span> <span class="n">memoryStream</span><span class="p">.</span><span class="nf">ToArray</span><span class="p">();</span>
</code></pre></div></div>

<p>此时和上面代码差不多，只是使用对应的结构体强行转换指针就可以</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="k">unsafe</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">length</span> <span class="p">=</span> <span class="n">byteList</span><span class="p">.</span><span class="n">Length</span> <span class="p">/</span> <span class="k">sizeof</span><span class="p">(</span><span class="n">FooStruct</span><span class="p">);</span>
                <span class="k">fixed</span> <span class="p">(</span><span class="kt">byte</span><span class="p">*</span> <span class="n">bytePointer</span> <span class="p">=</span> <span class="n">byteList</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="kt">var</span> <span class="n">fooStructList</span> <span class="p">=</span> <span class="p">(</span><span class="n">FooStruct</span><span class="p">*)</span> <span class="n">bytePointer</span><span class="p">;</span>
                    <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
                    <span class="p">{</span>
                        <span class="kt">var</span> <span class="n">fooStruct</span> <span class="p">=</span> <span class="p">*</span><span class="n">fooStructList</span><span class="p">;</span>

                        <span class="c1">// 此时就获取到了结构体数组</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></div></div>

<p>通过这个方法，虽然是不安全的代码，但是能提升很多性能</p>

<p>本文代码放在 <a href="https://github.com/lindexi/lindexi_gd/tree/f897f444/LawdalenaLifearjanugear">github</a> 欢迎小伙伴访问</p>

:ET