I"4<p>本文告诉大家如何做一个 wpf 单例程序。单例就是用户只能运行这个程序一次，也就是内存只有存在这个程序一个。</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:16:53 -->

<!-- csdn -->

<p>首先创建项目，右击 App.xaml.cs 选择编译为 Page ，原来是 ApplicationDefinition</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F20171019201545.jpg" alt="" /></p>

<p>打开 App.xaml 删除<code class="language-plaintext highlighter-rouge">StartupUri="MainWindow.xaml"</code>，不然下面的代码会启动两个窗口</p>

<p>然后创建 Main ，请添加下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">App</span> <span class="p">:</span> <span class="n">Application</span>
    <span class="p">{</span>
        <span class="nf">App</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="nf">InitializeComponent</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="p">[</span><span class="n">STAThread</span><span class="p">]</span>
        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">App</span> <span class="n">app</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">App</span><span class="p">();</span>
            <span class="n">MainWindow</span> <span class="n">window</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MainWindow</span><span class="p">();</span>
            <span class="n">app</span><span class="p">.</span><span class="nf">Run</span><span class="p">(</span><span class="n">window</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>然后就在 Main 写逻辑，这里判断是否有全局锁，如果有就不启动。添加锁的代码很简单。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">static</span> <span class="n">Mutex</span> <span class="n">mutex</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Mutex</span><span class="p">(</span><span class="k">true</span><span class="p">,</span> <span class="s">"lindexi"</span><span class="p">);</span>
</code></pre></div></div>

<p>如果程序没有启动，那么通过下面的代码判断现在只有他一个软件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span> <span class="p">(</span><span class="n">_mutex</span><span class="p">.</span><span class="nf">WaitOne</span><span class="p">(</span><span class="n">TimeSpan</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="k">true</span><span class="p">))</span>
</code></pre></div></div>

<p>现在的主函数就是判断可以启动就创建窗口</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">App</span> <span class="n">app</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">App</span><span class="p">();</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">_mutex</span><span class="p">.</span><span class="nf">WaitOne</span><span class="p">(</span><span class="n">TimeSpan</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="k">true</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="c1">//如果申请成功</span>
                <span class="n">MainWindow</span> <span class="n">window</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MainWindow</span><span class="p">();</span>
                <span class="n">app</span><span class="p">.</span><span class="nf">Run</span><span class="p">(</span><span class="n">window</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>但是如果不能启动，就需要启动原来启动的程序。这里使用一个特殊方法，先创建一个类，可以发送消息给原先的程序。需要知道，在windows上，程序和系统通信都是使用消息，通过模拟消息就可以让其他程序做出特殊的效果，如让他放在窗口最前。</p>

<p>如果需要发送消息，那么需要使用下面的方法。下面代码注册了一个自己的消息，这样在自己的程序可以判断<code class="language-plaintext highlighter-rouge">WM_SHOWME</code>来把自己给用户。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">internal</span> <span class="k">class</span> <span class="nc">NativeMethods</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">const</span> <span class="kt">int</span> <span class="n">HWND_BROADCAST</span> <span class="p">=</span> <span class="m">0xffff</span><span class="p">;</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">readonly</span> <span class="kt">int</span> <span class="n">WM_SHOWME</span> <span class="p">=</span> <span class="nf">RegisterWindowMessage</span><span class="p">(</span><span class="s">"WM_SHOWME"</span><span class="p">);</span>
        <span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"user32"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">extern</span> <span class="kt">bool</span> <span class="nf">PostMessage</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hwnd</span><span class="p">,</span> <span class="kt">int</span> <span class="n">msg</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">wparam</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">lparam</span><span class="p">);</span>
        <span class="p">[</span><span class="nf">DllImport</span><span class="p">(</span><span class="s">"user32"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="k">static</span> <span class="k">extern</span> <span class="kt">int</span> <span class="nf">RegisterWindowMessage</span><span class="p">(</span><span class="kt">string</span> <span class="n">message</span><span class="p">);</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>接着修改主函数，在已经启动一个程序，就让他打开。这个方法就是发送一个特殊的消息，只有自己的程序知道这个消息是显示。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">static</span> <span class="k">void</span> <span class="nf">Main</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">App</span> <span class="n">app</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">App</span><span class="p">();</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">_mutex</span><span class="p">.</span><span class="nf">WaitOne</span><span class="p">(</span><span class="n">TimeSpan</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span> <span class="k">true</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="c1">//如果申请成功</span>
                <span class="n">MainWindow</span> <span class="n">window</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MainWindow</span><span class="p">();</span>
                <span class="n">app</span><span class="p">.</span><span class="nf">Run</span><span class="p">(</span><span class="n">window</span><span class="p">);</span>
                <span class="n">_mutex</span><span class="p">.</span><span class="nf">ReleaseMutex</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">else</span>
            <span class="p">{</span>
                <span class="n">NativeMethods</span><span class="p">.</span><span class="nf">PostMessage</span><span class="p">(</span>
                    <span class="p">(</span><span class="n">IntPtr</span><span class="p">)</span> <span class="n">NativeMethods</span><span class="p">.</span><span class="n">HWND_BROADCAST</span><span class="p">,</span>
                    <span class="n">NativeMethods</span><span class="p">.</span><span class="n">WM_SHOWME</span><span class="p">,</span>
                    <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">,</span>
                    <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>然后发送消息需要让程序自己监听，于是打开 MainWindow.xaml.cs 添加下面的代码，如果监听消息是让自己显示，那么就打开自己。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnSourceInitialized</span><span class="p">(</span><span class="n">EventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnSourceInitialized</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
            <span class="n">HwndSource</span> <span class="n">source</span> <span class="p">=</span> <span class="n">PresentationSource</span><span class="p">.</span><span class="nf">FromVisual</span><span class="p">(</span><span class="k">this</span><span class="p">)</span> <span class="k">as</span> <span class="n">HwndSource</span><span class="p">;</span>
            <span class="n">source</span><span class="p">.</span><span class="nf">AddHook</span><span class="p">(</span><span class="n">WndProc</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">IntPtr</span> <span class="nf">WndProc</span><span class="p">(</span><span class="n">IntPtr</span> <span class="n">hwnd</span><span class="p">,</span> <span class="kt">int</span> <span class="n">msg</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">wparam</span><span class="p">,</span> <span class="n">IntPtr</span> <span class="n">lparam</span><span class="p">,</span> <span class="k">ref</span> <span class="kt">bool</span> <span class="n">handled</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">msg</span> <span class="p">==</span> <span class="n">NativeMethods</span><span class="p">.</span><span class="n">WM_SHOWME</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="nf">Activate</span><span class="p">();</span>
            <span class="p">}</span>
            <span class="k">return</span> <span class="n">IntPtr</span><span class="p">.</span><span class="n">Zero</span><span class="p">;</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>这样就可以运行一个程序，再次打开也会打开原来的程序。</p>

<p>但是程序有一个坑，如果是多用户，那么打开只能是一个程序，请看下面的代码。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">static</span> <span class="n">Mutex</span> <span class="n">_mutex</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Mutex</span><span class="p">(</span><span class="k">true</span><span class="p">,</span> <span class="s">"lindexi"</span> <span class="p">+</span> <span class="n">Environment</span><span class="p">.</span><span class="n">UserName</span><span class="p">);</span>

</code></pre></div></div>

<p>实际文章就想说如何在多用户系统使用单例。</p>

<p>参见：<a href="https://ludovic.chabant.com/devblog/2010/04/20/writing-a-custom-main-method-for-wpf-applications/">Writing a custom Main() method for WPF applications — The Stochastic Game</a></p>

<p><a href="http://sanity-free.org/143/csharp_dotnet_single_instance_application.html">C# .NET Single Instance Application - Sanity Free Coding - C#, .NET, PHP</a></p>

<p>代码：<a href="http://download.csdn.net/download/lindexi_gd/10030684">wpf 单例 PfalmcYmgtx-CSDN下载</a></p>

:ET