I"8u<!--more-->

<!-- CreateTime:2019/11/29 8:36:07 -->

<div id="toc"></div>

<h2 id="设置默认上传当前分支">设置默认上传当前分支</h2>

<p>这是一个很好用的功能，如我现在已经切换到了 t/lindexi/f1 分支，我想要将这个分支推送到 remote 默认需要这样写</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">t</span><span class="p">/</span><span class="n">lindexi</span><span class="p">/</span><span class="n">f1</span>
</code></pre></div></div>

<p>如果设置了默认推送当前分支，那么代码将会变得十分简单，每次使用 git push 都会自动上传 CurrentBranch 现在的分支</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="k">global</span> <span class="n">push</span><span class="p">.</span><span class="k">default</span> <span class="n">current</span>
</code></pre></div></div>

<p>这个配置加上了 <code class="language-plaintext highlighter-rouge">--global</code> 对本机的所有仓库都有用，将可以在仓库里面输入 <code class="language-plaintext highlighter-rouge">git push </code> 就自动推送当前分支，减少了命令行很多代码</p>

<h2 id="计算-git-的提交数">计算 git 的提交数</h2>

<p>使用下面代码可以计算提交数</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">rev</span><span class="p">-</span><span class="n">list</span> <span class="p">--</span><span class="n">all</span> <span class="p">--</span><span class="n">count</span>
</code></pre></div></div>

<h2 id="计算-git-的提交距离">计算 Git 的提交距离</h2>

<p>下面代码的写法就是从 21a2b79331 距离 origin/dev 的提交数</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">rev</span><span class="p">-</span><span class="n">list</span> <span class="p">--</span><span class="n">count</span> <span class="n">origin</span><span class="p">/</span><span class="n">dev</span> <span class="p">^</span><span class="m">694</span><span class="n">b319f24</span>
</code></pre></div></div>

<h2 id="提交出现-taskcanceledexception">提交出现 TaskCanceledException</h2>

<p>如果提交出现异常 <code class="language-plaintext highlighter-rouge">Fatal: TaskCanceledException encountered</code></p>

<p>这是 git 的问题，尝试升级最新的 git 或输入<code class="language-plaintext highlighter-rouge">git config --global credential.helper wincred</code> 就可以让 git 记住密码</p>

<h2 id="合并多个分支的时候不要自动合并">合并多个分支的时候不要自动合并</h2>

<p>每次在合并 csproj 文件的时候自动合并都会让项目难以编译，如果需要让 git 合并多个分支的时候不要自动合并，发现有文件都有修改的时候就让开发自己解决，请使用下面的命令</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">merge</span> <span class="n">origin</span><span class="p">/</span><span class="n">xx</span> <span class="p">--</span><span class="n">strategy</span><span class="p">=</span><span class="n">resolve</span>
</code></pre></div></div>

<p>这里的命令的使用需要先使用 <code class="language-plaintext highlighter-rouge">git fetch --all -p</code> 让远程的分支最新，然后调用 merge 合并对应的分支</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">fetch</span> <span class="p">--</span><span class="n">all</span> <span class="p">-</span><span class="n">p</span>
<span class="n">git</span> <span class="n">merge</span> <span class="err">仓库</span><span class="p">/</span><span class="err">分支名</span> <span class="p">--</span><span class="n">strategy</span><span class="p">=</span><span class="n">resolve</span>
</code></pre></div></div>

<h2 id="cherry-pick-多个提交">Cherry-pick 多个提交</h2>

<p>如果多个提交是连续的，那么可以使用下面的方法<code class="language-plaintext highlighter-rouge">git cherry-pick 开始...结束</code></p>

<p>例如有提交</p>

<p>76a0298d38760a635f404c1660238ae852d96517 提交 4</p>

<p>55b43be69fa90f4d03f27632c0231458ba1e7fd9 提交 3</p>

<p>55b43be69fa90f4d03f27632c0231458ba1e7fd9 错误的提交</p>

<p>e50b523f12d34435b3b49fe229d76ecc4754687f 提交 2</p>

<p>322d49c166b0a48bdcc6c1f69b29c617b435850b 提交 1</p>

<p>8793f59a87cbc4c62cf77b21369de657dc343a5d 提交 0</p>

<p>需要挑拣出 提交0-4 那么一般的方法是使用 <code class="language-plaintext highlighter-rouge">git cherry-pick</code> 5次。但是有一个简单的方法，只需要pick两次</p>

<p>git 的 pick 可以指定范围，下面的代码告诉大家如何使用</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">cherry</span><span class="p">-</span><span class="n">pick</span> <span class="m">8793f59</span><span class="n">a87cbc4c62cf77b21369de657dc343a5d</span><span class="p">^...</span><span class="n">e50b523f12d34435b3b49fe229d76ecc4754687f</span>

<span class="c1">//8793f59a87cbc4c62cf77b21369de657dc343a5d 提交 0 </span>

<span class="c1">//e50b523f12d34435b3b49fe229d76ecc4754687f 提交 2</span>

<span class="n">git</span> <span class="n">cherry</span><span class="p">-</span><span class="n">pick</span> <span class="m">55</span><span class="n">b43be69fa90f4d03f27632c0231458ba1e7fd9</span><span class="p">...</span><span class="m">76</span><span class="n">a0298d38760a635f404c1660238ae852d96517</span>

<span class="c1">//55b43be69fa90f4d03f27632c0231458ba1e7fd9 错误的提交</span>

<span class="c1">//76a0298d38760a635f404c1660238ae852d96517 提交 4</span>
</code></pre></div></div>

<p>可以看到第一个代码存在<code class="language-plaintext highlighter-rouge">^</code>，因为pick的范围是<code class="language-plaintext highlighter-rouge">(左开，右闭]</code>，所以为了包含 提交0 ，就需要在提交0添加<code class="language-plaintext highlighter-rouge">^</code>。第二个提交从 55b43be69fa90f4d03f27632c0231458ba1e7fd9 错误的提交 开始，因为左开右闭，不会包含这个提交。</p>

<h2 id="git-删除不需要的分支">git 删除不需要的分支</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">branch</span> <span class="p">--</span><span class="n">merged</span> <span class="p">|</span> <span class="n">grep</span> <span class="p">-</span><span class="n">v</span> <span class="err">'</span><span class="n">dev</span><span class="err">'</span> <span class="p">|</span> <span class="n">xargs</span> <span class="p">-</span><span class="n">n</span> <span class="m">1</span> <span class="n">git</span> <span class="n">branch</span> <span class="p">-</span><span class="n">d</span>
</code></pre></div></div>

<p>可以删除已经合并的分支</p>

<h2 id="git-删除仓库的-tag">git 删除仓库的 tag</h2>

<p>删除 origin 仓库的 tagname 可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">push</span> <span class="n">origin</span> <span class="p">:</span><span class="n">tagname</span>
</code></pre></div></div>

<p>也可以使用 <code class="language-plaintext highlighter-rouge">--delete</code> 删除</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">push</span> <span class="p">--</span><span class="n">delete</span> <span class="n">origin</span> <span class="n">tagname</span>
</code></pre></div></div>

<p>删除本地 tag 可以使用</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">tag</span> <span class="p">--</span><span class="n">delete</span> <span class="n">tagname</span>
</code></pre></div></div>

<p>https://stackoverflow.com/a/5480292/6116637</p>

<h2 id="git-删除本地所有-tag-号">git 删除本地所有 Tag 号</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">tag</span> <span class="p">|</span> <span class="n">xargs</span> <span class="n">git</span> <span class="n">tag</span> <span class="p">-</span><span class="n">d</span>
</code></pre></div></div>

<h2 id="git-推送所有-tag-号">git 推送所有 Tag 号</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">push</span> <span class="p">--</span><span class="n">tags</span>
</code></pre></div></div>

<p>快速推送刚打出来的 Tag 可以采用先删除本地所有的 Tag 号，然后再打出一个 Tag 推送所有 Tag 号</p>

<h2 id="git-取消暂存">git 取消暂存</h2>

<p>如果错误 add 不想添加的文件，可以使用下面命令取消添加文件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">reset</span> <span class="p">.</span>
</code></pre></div></div>

<p>如果有 f1 f2 两个文件，错误把两个文件都使用 add 暂存，现在只需要添加 f1 那么可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">reset</span> <span class="n">f2</span>
</code></pre></div></div>

<p>使用方法：</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">reset</span> <span class="err">文件名</span>
</code></pre></div></div>

<p>如果需要查看现在暂存的文件，可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">status</span>
</code></pre></div></div>

<h2 id="git-寻找提交所在的分支">git 寻找提交所在的分支</h2>

<p>使用下面的代码可以找到提交所在的分支</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">branch</span> <span class="p">--</span><span class="n">contains</span> <span class="p">&lt;</span><span class="n">commit</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>如果需要找到远程分支，加添加<code class="language-plaintext highlighter-rouge">-r</code>，请看下面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">branch</span> <span class="p">-</span><span class="n">r</span> <span class="p">--</span><span class="n">contains</span> <span class="p">&lt;</span><span class="n">commit</span><span class="p">&gt;</span>
</code></pre></div></div>

<h2 id="git-worktree-添加已有分支的空间">git worktree 添加已有分支的空间</h2>

<p>使用下面代码可以使用已有分支添加空间</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">worktree</span> <span class="k">add</span> <span class="p">&lt;</span><span class="err">文件夹</span><span class="p">&gt;</span> <span class="err">分支</span>
</code></pre></div></div>

<p>或</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">worktree</span> <span class="k">add</span> <span class="p">-</span><span class="n">b</span> <span class="p">&lt;</span><span class="err">新分支名</span><span class="p">&gt;</span> <span class="p">&lt;</span><span class="err">新路径</span><span class="p">&gt;</span> <span class="p">&lt;</span><span class="err">从此分支创建</span><span class="p">&gt;</span>
</code></pre></div></div>

<h2 id="在-visualstudio-添加-blame">在 VisualStudio 添加 Blame</h2>

<p>在 VisualStudio ，我看到了自带的 Blame 很烂，于是如何在 VisualStudio 添加一个强大的 Blame？</p>

<p>我选择了<a href="http://www.syntevo.com/deepgit/tour">deepgit</a> ，我把它安装在 C 盘，安装完成可以使用外部命令把他放在 VisualStudio，下面就是方法</p>

<ol>
  <li>
    <p>确定 deepgit 的路径，记为 path ，我这里的是<code class="language-plaintext highlighter-rouge">C:\Program Files (x86)\DeepGit\bin\deepgit.exe</code></p>
  </li>
  <li>
    <p>打开 VisualStudio 工具 外部工具</p>
  </li>
  <li>
    <p>点击添加</p>
  </li>
  <li>
    <p>输入标题，标题可以随意写。命令就是 path 安装路径，参数写<code class="language-plaintext highlighter-rouge">$(ItemPath)</code></p>
  </li>
</ol>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F2017101010119.jpg" alt="" /></p>

<ol>
  <li>点击添加或移除按钮 自定义</li>
</ol>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F20171010101234.jpg" alt="" /></p>

<ol>
  <li>添加命令 这里选择工具的外部命令4，外部命令和添加命令所在有关，我这里添加的是第4个</li>
</ol>

<h2 id="git-列出所有的-subtree">git 列出所有的 subtree</h2>

<p>请使用下面代码列出</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">log</span> <span class="p">|</span> <span class="n">grep</span> <span class="n">git</span><span class="p">-</span><span class="n">subtree</span><span class="p">-</span><span class="n">dir</span> <span class="p">|</span> <span class="n">tr</span> <span class="p">-</span><span class="n">d</span> <span class="sc">' '</span> <span class="p">|</span> <span class="n">cut</span> <span class="p">-</span><span class="n">d</span> <span class="s">":"</span> <span class="p">-</span><span class="n">f2</span> <span class="p">|</span> <span class="n">sort</span> <span class="p">|</span> <span class="n">uniq</span>
</code></pre></div></div>

<h2 id="git-推送-subtree">git 推送 subtree</h2>

<p>可以使用下面的代码推送</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">subtree</span> <span class="p">--</span><span class="n">prefix</span><span class="p">=</span><span class="s">"路径"</span> <span class="n">push</span> <span class="n">origin</span> <span class="n">dev</span> 
</code></pre></div></div>

<p>分离分支</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">subtree</span> <span class="n">split</span> <span class="p">[--</span><span class="n">rejoin</span><span class="p">]</span> <span class="p">--</span><span class="n">prefix</span><span class="p">=&lt;</span><span class="err">本地子项目目录</span><span class="p">&gt;</span> <span class="p">--</span><span class="n">branch</span> <span class="p">&lt;</span><span class="err">主项目中作为放置子项目的分支名</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>拉取项目</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">subtree</span> <span class="p">-</span><span class="n">P</span> <span class="p">&lt;</span><span class="err">本地子项目目录</span><span class="p">&gt;</span> <span class="n">pull</span> <span class="p">&lt;</span><span class="err">远程仓库</span><span class="p">&gt;</span> <span class="p">&lt;</span><span class="err">远程分支</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>需要知道 使用<code class="language-plaintext highlighter-rouge">-P</code>和使用<code class="language-plaintext highlighter-rouge">--prefix</code>是相同的，使用<code class="language-plaintext highlighter-rouge">--branch</code>和使用<code class="language-plaintext highlighter-rouge">-b</code>是相同的。</p>

<h2 id="git-tag-添加说明">git tag 添加说明</h2>

<p>如果对于一个分支的提交，需要添加tag而且给说明，如</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">v1</span><span class="p">.</span><span class="m">1</span> <span class="err">添加游戏</span>
</code></pre></div></div>

<p>那么可以使用下面的命令</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">tag</span> <span class="n">v1</span><span class="p">.</span><span class="m">1</span> <span class="p">-</span><span class="n">m</span> <span class="s">"添加游戏"</span>
</code></pre></div></div>

<p>这样就会拿分支最后一次提交添加 tag 加上说明</p>

<h2 id="git-指定文件夹">git 指定文件夹</h2>

<p>如果是在程序使用 git ，需要指定 git 的文件夹。</p>

<p>例如我在程序使用了 <code class="language-plaintext highlighter-rouge">git add . </code> 那么 git 怎么知道是添加哪个文件夹，如果没有告诉 git 就会添加程序运行的文件夹</p>

<p>例如添加 <code class="language-plaintext highlighter-rouge">E:\林德熙\代码</code> 文件夹，可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">git</span> <span class="p">-</span><span class="n">C</span> <span class="s">"/e/林德熙/代码"</span> <span class="k">add</span> <span class="p">.</span>
</code></pre></div></div>

<p>使用 <code class="language-plaintext highlighter-rouge">-C 文件夹路径</code> 就可以让 git 添加指定的文件夹</p>

<h2 id="创建本地仓库">创建本地仓库</h2>

<p>如果需要创建本地仓库，只需要创建一个文件夹，然后在文件夹里使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">init</span>
</code></pre></div></div>

<p>这样就可以创建，但是现在创建的仓库无法被push代码，如果使用 push 到这个文件夹的代码，就会出现下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">remote</span><span class="p">:</span> <span class="n">error</span><span class="p">:</span> <span class="n">refusing</span> <span class="n">to</span> <span class="n">update</span> <span class="k">checked</span> <span class="k">out</span> <span class="n">branch</span><span class="p">:</span> <span class="n">refs</span><span class="p">/</span><span class="n">heads</span><span class="p">/</span><span class="n">master</span>
<span class="n">remote</span><span class="p">:</span> <span class="n">error</span><span class="p">:</span> <span class="n">By</span> <span class="k">default</span><span class="p">,</span> <span class="n">updating</span> <span class="n">the</span> <span class="n">current</span> <span class="n">branch</span> <span class="k">in</span> <span class="n">a</span> <span class="n">non</span><span class="p">-</span><span class="n">bare</span> <span class="n">repository</span>
<span class="n">remote</span><span class="p">:</span> <span class="k">is</span> <span class="n">denied</span><span class="p">,</span> <span class="n">because</span> <span class="n">it</span> <span class="n">will</span> <span class="n">make</span> <span class="n">the</span> <span class="n">index</span> <span class="n">and</span> <span class="n">work</span> <span class="n">tree</span> <span class="n">inconsistent</span>
</code></pre></div></div>

<p>解决方法是在刚才创建的本地仓库文件夹使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="kt">bool</span> <span class="n">core</span><span class="p">.</span><span class="n">bare</span> <span class="k">true</span>

</code></pre></div></div>

<p>或者在创建文件夹之后，使用下面代码初始化</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">init</span> <span class="p">--</span><span class="n">bare</span>
</code></pre></div></div>

<p>这时本地的文件夹是无法看到文件的，原来显示文件的 <code class="language-plaintext highlighter-rouge">git checkout .</code> 执行会显示下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">This</span> <span class="n">operation</span> <span class="n">must</span> <span class="n">be</span> <span class="n">run</span> <span class="k">in</span> <span class="n">a</span> <span class="n">work</span> <span class="n">tree</span>
</code></pre></div></div>

<p>因为设置了<code class="language-plaintext highlighter-rouge">bare</code>所以无法使用，如果要使用，就需要先去掉，使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="n">unset</span> <span class="n">core</span><span class="p">.</span><span class="n">bare</span>
</code></pre></div></div>

<p>如果想要看到文件，需要执行下面两句代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="n">unset</span> <span class="n">core</span><span class="p">.</span><span class="n">bare</span>
<span class="n">git</span> <span class="n">checkout</span> <span class="p">.</span>
</code></pre></div></div>

<p>注意，设置了<code class="language-plaintext highlighter-rouge">git config --unset core.bare</code>就无法再push任何东西，需要再设置<code class="language-plaintext highlighter-rouge">git config --bool core.bare true</code>才可以</p>

<h2 id="找到被删除的文件">找到被删除的文件</h2>

<p>从历史提交里面找到被删除的文件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">log</span> <span class="p">--</span><span class="n">all</span> <span class="p">--</span><span class="n">full</span><span class="p">-</span><span class="n">history</span> <span class="p">--</span> <span class="p">&lt;</span><span class="n">path</span><span class="p">-</span><span class="n">to</span><span class="p">-</span><span class="n">file</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>文件支持通配如知道文件叫 xx.cs 可以使用下面的代码找到这个文件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">log</span> <span class="p">--</span><span class="n">all</span> <span class="p">--</span><span class="n">full</span><span class="p">-</span><span class="n">history</span> <span class="p">--</span> <span class="p">**/</span><span class="n">xx</span><span class="p">.</span><span class="n">cs</span>
</code></pre></div></div>

<p>https://stackoverflow.com/a/7203551/6116637</p>

<h2 id="设置只对-github-开启代理">设置只对 github 开启代理</h2>

<p>请将 <a href="socks5://127.0.0.1:1080">socks5://127.0.0.1:1080</a> 换你本地代理</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="k">global</span> <span class="n">http</span><span class="p">.</span><span class="n">https</span><span class="p">:</span><span class="c1">//github.com.proxy socks5://127.0.0.1:1080</span>
</code></pre></div></div>

<p>取消设置</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">config</span> <span class="p">--</span><span class="k">global</span> <span class="p">--</span><span class="n">unset</span> <span class="n">http</span><span class="p">.</span><span class="n">https</span><span class="p">:</span><span class="c1">//github.com.proxy</span>
</code></pre></div></div>

<h2 id="统计更改文件">统计更改文件</h2>

<p>统计被更改的文件可以使用下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">git</span> <span class="n">status</span> <span class="p">|</span> <span class="n">grep</span> <span class="err">'</span><span class="n">modified</span><span class="p">:</span><span class="err">'</span> <span class="p">|</span> <span class="n">wc</span> <span class="p">-</span><span class="n">l</span>
</code></pre></div></div>

<p>在使用 <code class="language-plaintext highlighter-rouge">git status</code> 会显示版本里面被当前修改的文件，需要通过 git add 添加的文件有哪些是被修改，然后通过过滤修改统计修改的文件</p>

<h2 id="git-只需要-commit-号">Git 只需要 commit 号</h2>

<p>想要让 Git 的 Log 输出的只有 commit 号而没有其他内容，可以使用下面命令</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log --pretty=format:%H
</code></pre></div></div>

<p>输出格式如下</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>964568b1bbc042b1a5f4d3109103022d9d089b0d
693fec8423b3a6c5cc760d345dbd668a69c03c81
7eb048730fbedd26b691271349088b5c5f6b39d3
</code></pre></div></div>

<p>如果需要的是短的 commit 内容，可以将 <code class="language-plaintext highlighter-rouge">H</code> 替换为 <code class="language-plaintext highlighter-rouge">h</code> 如下面命令</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git log --pretty=format:%h
</code></pre></div></div>

<p>输出格式如下</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>964568b
693fec8
7eb0487
</code></pre></div></div>

<h2 id="如何删除错误提交的-git-大文件"><a href="http://lindexi.oschina.io/lindexi//post/%E5%A6%82%E4%BD%95%E5%88%A0%E9%99%A4%E9%94%99%E8%AF%AF%E6%8F%90%E4%BA%A4%E7%9A%84-git-%E5%A4%A7%E6%96%87%E4%BB%B6.html">如何删除错误提交的 git 大文件</a></h2>

<h2 id="git无法pull仓库refusing-to-merge-unrelated-histories"><a href="http://lindexi.oschina.io/lindexi//post/git%E6%97%A0%E6%B3%95pull%E4%BB%93%E5%BA%93refusing-to-merge-unrelated-histories.html">git无法pull仓库refusing to merge unrelated histories</a></h2>

<h2 id="git-subtree-pull-错误-working-tree-has-modifications"><a href="http://lindexi.oschina.io/lindexi//post/git-subtree-pull-%E9%94%99%E8%AF%AF-Working-tree-has-modifications.html">git subtree pull 错误 Working tree has modifications</a></h2>

<h2 id="git-提交添加-emoij-文字"><a href="http://lindexi.oschina.io/lindexi//post/git-%E6%8F%90%E4%BA%A4%E6%B7%BB%E5%8A%A0-emoij-%E6%96%87%E5%AD%97.html">git 提交添加 emoij 文字</a></h2>

<h2 id="git-cannot-lock-ref"><a href="http://lindexi.oschina.io/lindexi//post/git-cannot-lock-ref.html">git cannot lock ref</a></h2>

<h2 id="git-修改commit日期为之前的日期"><a href="http://lindexi.oschina.io/lindexi//post/git-%E4%BF%AE%E6%94%B9commit%E6%97%A5%E6%9C%9F%E4%B8%BA%E4%B9%8B%E5%89%8D%E7%9A%84%E6%97%A5%E6%9C%9F.html">git 修改commit日期为之前的日期</a></h2>

<h2 id="git镜像仓库"><a href="http://lindexi.oschina.io/lindexi//post/git%E9%95%9C%E5%83%8F%E4%BB%93%E5%BA%93.html">git镜像仓库</a></h2>

<h2 id="git-合并两个仓库"><a href="http://lindexi.oschina.io/lindexi//post/git-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E4%BB%93%E5%BA%93.html">git 合并两个仓库</a></h2>

<h2 id="git-分支改名"><a href="http://lindexi.oschina.io/lindexi//post/git-%E5%88%86%E6%94%AF%E6%94%B9%E5%90%8D.html">git 分支改名</a></h2>

<h2 id="git-push-错误-hook-declined"><a href="http://lindexi.oschina.io/lindexi//post/git-push-%E9%94%99%E8%AF%AF-hook-declined.html">git push 错误 hook declined</a></h2>

<h2 id="git-上传当前分支"><a href="https://lindexi.oschina.io/lindexi/post/git-%E4%B8%8A%E4%BC%A0%E5%BD%93%E5%89%8D%E5%88%86%E6%94%AF.html">git 上传当前分支</a></h2>

<h2 id="git-合并工具">git 合并工具</h2>

<p><a href="https://blog.lindexi.com/post/git-%E9%80%9A%E8%BF%87-SublimeMerge-%E5%A4%84%E7%90%86%E5%86%B2%E7%AA%81.html">git 通过 SublimeMerge 处理冲突</a></p>

<p>参见：</p>

<p><a href="https://blog.csdn.net/wpwalter/article/details/79201581">再也不用克隆多个仓库啦！git worktree 一个 git 仓库可以连接多个工作目录 - CSDN博客</a></p>
:ET