I"h;<p>本文告诉大家如何使用资源在后台创建控件，本文使用按钮做例子，包括如何绑定资源，找到资源。</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:17:19 -->

<!-- csdn -->

<h2 id="定义资源">定义资源</h2>

<p>在 App.xaml 定义的资源样式可以在整个程序拿到，但是不建议在 App.xaml 直接写资源，建议是写一个资源文件，例如是 SormarMapay.xaml 在 App.xaml 用<code class="language-plaintext highlighter-rouge">ResourceDictionary.MergedDictionaries</code>合并</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    &lt;Application.Resources&gt;
        &lt;ResourceDictionary&gt;
            &lt;ResourceDictionary.MergedDictionaries&gt;
                &lt;ResourceDictionary Source="SormarMapay.xaml"&gt;&lt;/ResourceDictionary&gt;
            &lt;/ResourceDictionary.MergedDictionaries&gt;
        &lt;/ResourceDictionary&gt;
    &lt;/Application.Resources&gt;
</code></pre></div></div>

<p>现在可以打开 SormarMapay.xaml 写样式，这里需要写一个按钮的样式，就需要设置<code class="language-plaintext highlighter-rouge">TargetType="Button"</code>，例如这个按钮需要一张图片和标题、次标题</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&lt;ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"&gt;
    &lt;Style x:Key="CustomButtonLarge" TargetType="Button"&gt;
        &lt;Setter Property="Background" Value="Black" /&gt;
        &lt;Setter Property="Foreground" Value="White" /&gt;
        &lt;Setter Property="HorizontalAlignment" Value="Center" /&gt;
        &lt;Setter Property="VerticalAlignment" Value="Top" /&gt;
        &lt;Setter Property="Margin" Value="10,10,10,10"&gt;&lt;/Setter&gt;
        &lt;Setter Property="Height" Value="200" /&gt;
        &lt;Setter Property="Width" Value="100" /&gt;
        &lt;Setter Property="Template"&gt;
            &lt;Setter.Value&gt;
                &lt;ControlTemplate TargetType="Button" &gt;
                    &lt;Grid x:Name="AlbumContentGrid" Background="{TemplateBinding Background}" &gt;
                        &lt;Grid.RowDefinitions&gt;
                            &lt;RowDefinition Height="200*"/&gt;
                            &lt;RowDefinition Height="Auto"/&gt;
                            &lt;RowDefinition Height="Auto"/&gt;
                        &lt;/Grid.RowDefinitions&gt;

                        &lt;Image x:Name="AlbumCover" Grid.Row="0" Source="{Binding Path=Image}"/&gt;
                        &lt;TextBlock x:Name="Title" Grid.Row="1" Margin="10,10,10,10" Text="{Binding Title}" Foreground="{TemplateBinding Foreground}"/&gt;
                        &lt;TextBlock x:Name="SubTitle" Grid.Row="2" Margin="10,10,10,10" Text="{Binding SubTitle}" Foreground="{TemplateBinding Foreground}"/&gt;
                    &lt;/Grid&gt;
                &lt;/ControlTemplate&gt;
            &lt;/Setter.Value&gt;
        &lt;/Setter&gt;
    &lt;/Style&gt;
&lt;/ResourceDictionary&gt;
</code></pre></div></div>

<p>这里需要解释一下，使用的<code class="language-plaintext highlighter-rouge">&lt;Grid x:Name="AlbumContentGrid" Background="{TemplateBinding Background}" &gt;</code>是为了让按钮的背景有用，如果没有设置这个值，也就是按钮的背景设置了是没有用的。</p>

<p>里面的控件使用的是<code class="language-plaintext highlighter-rouge">x:Name="AlbumCover"</code>而不是 <code class="language-plaintext highlighter-rouge">x:Key</code> ，因为只能使用name的方法。</p>

<p>为了在后台代码可以修改按钮的内容，就需要使用绑定 DataContext ，这时绑定只能用 Binding 的方法，如果大家发现如何在这里使用 <code class="language-plaintext highlighter-rouge">x:bind</code> 请告诉我</p>

<h2 id="定义数据">定义数据</h2>

<p>这里使用的数据需要自己定义，下面代码定义一直类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">Foo</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="n">BitmapImage</span> <span class="n">Image</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">Title</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span>  <span class="n">SubTitle</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<h2 id="创建按钮">创建按钮</h2>

<p>在 Main 页面添加下面代码，用来创建多个按钮</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">public</span> <span class="nf">MainPage</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">this</span><span class="p">.</span><span class="nf">InitializeComponent</span><span class="p">();</span>

            <span class="n">Loaded</span> <span class="p">+=</span> <span class="n">MainPage_Loaded</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">MainPage_Loaded</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">int</span> <span class="n">numberOfButtons</span> <span class="p">=</span> <span class="m">3</span><span class="p">;</span>


            <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span> <span class="n">i</span> <span class="p">&lt;</span> <span class="n">numberOfButtons</span><span class="p">;</span> <span class="n">i</span><span class="p">++)</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">foo</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Foo</span>
                <span class="p">{</span>
                    <span class="n">Image</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">BitmapImage</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appx:///Assets/Square44x44Logo.scale-200.png"</span><span class="p">)),</span>
                    <span class="n">Title</span> <span class="p">=</span> <span class="s">"title"</span> <span class="p">+</span> <span class="n">i</span><span class="p">,</span>
                    <span class="n">SubTitle</span> <span class="p">=</span> <span class="n">i</span><span class="p">.</span><span class="nf">ToString</span><span class="p">()</span>
                <span class="p">};</span>

                <span class="n">Button</span> <span class="n">btn</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Button</span><span class="p">();</span>
                <span class="n">Style</span> <span class="n">style</span> <span class="p">=</span> <span class="n">Application</span><span class="p">.</span><span class="n">Current</span><span class="p">.</span><span class="n">Resources</span><span class="p">[</span><span class="s">"CustomButtonLarge"</span><span class="p">]</span> <span class="k">as</span> <span class="n">Style</span><span class="p">;</span>

                <span class="n">btn</span><span class="p">.</span><span class="n">Style</span> <span class="p">=</span> <span class="n">style</span><span class="p">;</span>

                <span class="n">btn</span><span class="p">.</span><span class="n">DataContext</span> <span class="p">=</span> <span class="n">foo</span><span class="p">;</span>

                <span class="n">StackAlbums</span><span class="p">.</span><span class="n">Children</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="n">btn</span><span class="p">);</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>上面的 StackAlbums 就是一个 StackPanel ，现在运行代码可以看到下面界面</p>

<!-- ![](image/win10 uwp 使用资源在后台创建控件/win10 uwp 使用资源在后台创建控件0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F201872193448696" alt="" /></p>

<h2 id="添加动画">添加动画</h2>

<p>如果使用了上面的代码可以看到，这个界面按钮是不存在按下的动画，因为没有写 <code class="language-plaintext highlighter-rouge">VisualStateManager</code> 现在打开 SormarMapay.xaml 在 AlbumContentGrid 添加下面代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                        &lt;VisualStateManager.VisualStateGroups&gt;
                            &lt;VisualStateGroup x:Name="CommonStates"&gt;
                                &lt;VisualState x:Name="Normal"&gt;
                                    &lt;Storyboard&gt;
                                        &lt;PointerUpThemeAnimation Storyboard.TargetName="AlbumContentGrid" /&gt;
                                    &lt;/Storyboard&gt;
                                &lt;/VisualState&gt;
                                &lt;VisualState x:Name="PointerOver"&gt;
                                    &lt;Storyboard&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="AlbumContentGrid"
                                                                       Storyboard.TargetProperty="BorderBrush"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{ThemeResource SystemControlHighlightBaseMediumLowBrush}" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="Title"
                                                                       Storyboard.TargetProperty="Foreground"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="#aaaaaa" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubTitle"
                                                                       Storyboard.TargetProperty="Foreground"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="#aaaaaa" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;PointerUpThemeAnimation Storyboard.TargetName="AlbumContentGrid" /&gt;
                                    &lt;/Storyboard&gt;
                                &lt;/VisualState&gt;
                                &lt;VisualState x:Name="Pressed"&gt;
                                    &lt;Storyboard&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="AlbumContentGrid"
                                                                       Storyboard.TargetProperty="Background"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundBaseMediumLowBrush}" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="AlbumContentGrid"
                                                                       Storyboard.TargetProperty="BorderBrush"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightTransparentBrush}" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="Title"
                                                                       Storyboard.TargetProperty="Foreground"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubTitle"
                                                                       Storyboard.TargetProperty="Foreground"&gt;
                                            &lt;DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightBaseHighBrush}" /&gt;
                                        &lt;/ObjectAnimationUsingKeyFrames&gt;
                                        &lt;PointerDownThemeAnimation Storyboard.TargetName="AlbumContentGrid" /&gt;
                                    &lt;/Storyboard&gt;
                                &lt;/VisualState&gt;
                            &lt;/VisualStateGroup&gt;
                        &lt;/VisualStateManager.VisualStateGroups&gt;

</code></pre></div></div>

<p>然后在 AlbumContentGrid 绑定一下 BorderBrush ，请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">Grid</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"AlbumContentGrid"</span> <span class="n">Background</span><span class="p">=</span><span class="s">"{TemplateBinding Background}"</span>
                          <span class="n">BorderBrush</span><span class="p">=</span><span class="s">"{TemplateBinding BorderBrush}"</span>
</code></pre></div></div>

<p>现在代码看起来就是这样</p>

<p><img src="http://image.acmx.xyz/lindexi%2F2018721144021381" alt="" /></p>

<!-- ![](image/win10 uwp 使用资源在后台创建控件/win10 uwp 使用资源在后台创建控件1.png) -->

<p>尝试运行一下代码，可以看到按下动画</p>

<p><img src="http://image.acmx.xyz/lindexi%2F2018721144046138" alt="" /></p>

:ET