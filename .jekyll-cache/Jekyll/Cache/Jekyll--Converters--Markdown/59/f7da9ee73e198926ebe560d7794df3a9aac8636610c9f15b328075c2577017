I"<!--more-->

<!-- CreateTime:2018/2/13 17:23:03 -->

<div id="toc"></div>
<!-- csdn -->

<p>我们来弄简单协议</p>

<p>首先第一层是传输层，这一层是Head+Data</p>

<p>其中Head就是有传输的头，加上Data长度</p>

<p>Head=Head+length</p>

<p>length是Data长度</p>

<p>上面传输的头，Head=Head+length 中的第二个Head，包含
 传输者id，当前传输是传输的消息最后一段还是中间,当前传输
 是服务器第消息</p>

<p>传输的最后一段还是中间指的是在上一层，有很长的数据，被拆为多个Data发送，
 这时就需要标注接下来几条消息要合并为一条</p>

<p>传输头Head=id+stx+count</p>

<p>count就是服务器随机给的序号，客户端接收到，就返回接收到+count，这样服务器就可以知道客户端收到，如果超过时间，那么服务器就重新发送</p>

<p>id、count都是16位int，我上面说的服务器其实就是发送的，客户端就是接收，不是说服务器协议</p>

<p>我们接收是byte那么如何从byte两个转换为int，其实简单，short才对，不过说16位那是我C艹</p>

<p>我们一个byte是高8位，一个是低8位</p>

<p><code class="language-plaintext highlighter-rouge">value = 256 * high + low;</code></p>

<p><code class="language-plaintext highlighter-rouge">(high &lt;&lt; 8) | low</code></p>

<p>stx=stx+length stx和length是8位byte</p>

<p><code class="language-plaintext highlighter-rouge">stx=1</code>是发送中间</p>

<p><code class="language-plaintext highlighter-rouge">stx=2</code>是发送结束</p>

<p><code class="language-plaintext highlighter-rouge">stx=3</code>是回复</p>

<p>length在<code class="language-plaintext highlighter-rouge">stx=1</code> <code class="language-plaintext highlighter-rouge">stx=2</code>是表示消息顺序，如果接收到<code class="language-plaintext highlighter-rouge">stx=1</code>那么把消息放到缓存区，然后直到接收到<code class="language-plaintext highlighter-rouge">stx=2</code>才把消息合并，通知，这时需要按照length顺序组合，如果接收到的length不对，缺少，那么废掉信息。</p>

<p>我们开始接收就接收16+16+16+16位，然后使用length接收下面，这样就可以解决</p>

<p>技术很简单，其实我们需要做服务器，和客户端，一般我们可以在UWP做两个，这个参见http://www.wangchenran.com/uwp-streamsocket-chatroom-1.html</p>

<p>我们可以用传输数据，可以传输文本，这个我们需要传什么需要一个协议，这个是应用高层，前面说的是协议传输</p>

<h2 id="带header的webrequest">带Header的WebRequest</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">HttpRequestMessage</span> <span class="n">httpRequestMessage</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpRequestMessage</span><span class="p">(</span>
    <span class="n">HttpMethod</span><span class="p">.</span><span class="n">Post</span><span class="p">,</span> <span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"http://www.contoso.com"</span><span class="p">));</span>
<span class="n">httpRequestMessage</span><span class="p">.</span><span class="n">Content</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">HttpStringContent</span><span class="p">(</span><span class="s">"hello, world"</span><span class="p">);</span>
<span class="n">httpRequestMessage</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="nf">Append</span><span class="p">(</span><span class="s">"X-My-Client"</span><span class="p">,</span><span class="s">"true"</span><span class="p">);</span>

<span class="n">myWebView</span><span class="p">.</span><span class="nf">NavigateWithHttpRequestMessage</span><span class="p">(</span><span class="n">httpRequestMessage</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">url</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"http://www.baidu.com"</span><span class="p">,</span> <span class="n">UriKind</span><span class="p">.</span><span class="n">Absolute</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">httpClient</span> <span class="p">=</span> <span class="k">new</span> <span class="n">System</span><span class="p">.</span><span class="n">Net</span><span class="p">.</span><span class="n">Http</span><span class="p">.</span><span class="nf">HttpClient</span><span class="p">();</span>
            <span class="n">httpClient</span><span class="p">.</span><span class="n">DefaultRequestHeaders</span><span class="p">.</span><span class="nf">Add</span><span class="p">(</span><span class="s">"apikey"</span><span class="p">,</span> <span class="s">"123456"</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">reponse</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">GetStreamAsync</span><span class="p">(</span><span class="n">url</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">streamReader</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">reponse</span><span class="p">,</span> <span class="n">Encoding</span><span class="p">.</span><span class="n">UTF8</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">jsonString</span> <span class="p">=</span> <span class="n">streamReader</span><span class="p">.</span><span class="nf">ReadToEnd</span><span class="p">();</span>
            <span class="kt">var</span> <span class="n">jsonObject</span> <span class="p">=</span> <span class="n">JsonObject</span><span class="p">.</span><span class="nf">Parse</span><span class="p">(</span><span class="n">jsonString</span><span class="p">);</span>
</code></pre></div></div>

<h2 id="获取buffer">获取Buffer</h2>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>                <span class="n">Windows</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">Http</span><span class="p">.</span><span class="n">HttpClient</span> <span class="n">http</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Windows</span><span class="p">.</span><span class="n">Web</span><span class="p">.</span><span class="n">Http</span><span class="p">.</span><span class="nf">HttpClient</span><span class="p">();</span>
                <span class="n">IBuffer</span> <span class="n">buffer</span> <span class="p">=</span> <span class="k">await</span> <span class="n">http</span><span class="p">.</span><span class="nf">GetBufferAsync</span><span class="p">(</span><span class="n">uri</span><span class="p">);</span>

</code></pre></div></div>

<p>参见：https://msdn.microsoft.com/zh-cn/library/windows/apps/windows.ui.xaml.controls.webview.navigatewithhttprequestmessage.aspx</p>

<h2 id="httpclient-使用-cookie">HttpClient 使用 Cookie</h2>

<p>参见：https://stackoverflow.com/questions/41599384/httpclient-cookie-issue</p>

<p>如果不想自己写，请看 https://github.com/chenrensong/WebSocket.UWP</p>

<p>https://github.com/rdavisau/sockets-for-pcl</p>
:ET