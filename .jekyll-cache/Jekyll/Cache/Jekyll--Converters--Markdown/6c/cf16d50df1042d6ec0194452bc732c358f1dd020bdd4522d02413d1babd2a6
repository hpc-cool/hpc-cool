I"<p>我看到了 MUV 的写法，发现其实默认 WPF 也是支持了大部分了，小部分还不支持的需要改一下 WPF 框架，反正现在 WPF 框架也开源了，我也算是 WPF 框架的开发者，也能构建发布自己的版本</p>

<!--more-->

<!-- CreateTime:6/15/2020 6:01:13 PM -->

<p>本文的内容不需要使用德熙发布的版本，而是默认的 WPF 就可以支持了，写出的效果如下</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">border</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Border</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Background</span> <span class="p">=</span> <span class="n">Brushes</span><span class="p">.</span><span class="n">Gray</span><span class="p">,</span>
                <span class="n">Width</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Height</span> <span class="p">=</span> <span class="m">100</span><span class="p">,</span>
                <span class="n">Child</span> <span class="p">=</span> <span class="k">new</span> <span class="n">Grid</span>
                <span class="p">{</span>
                    <span class="n">Children</span> <span class="p">=</span>
                    <span class="p">{</span>
                        <span class="k">new</span> <span class="nf">StackPanel</span><span class="p">()</span>
                        <span class="p">{</span>
                            <span class="n">Orientation</span> <span class="p">=</span> <span class="n">Orientation</span><span class="p">.</span><span class="n">Horizontal</span><span class="p">,</span>
                            <span class="n">VerticalAlignment</span> <span class="p">=</span> <span class="n">VerticalAlignment</span><span class="p">.</span><span class="n">Bottom</span><span class="p">,</span>
                            <span class="n">Margin</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thickness</span><span class="p">(</span><span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">,</span> <span class="m">10</span><span class="p">),</span>
                            <span class="n">Children</span> <span class="p">=</span>
                            <span class="p">{</span>
                                <span class="k">new</span> <span class="n">Button</span>
                                <span class="p">{</span>

                                <span class="p">}.</span><span class="nf">Do</span><span class="p">(</span><span class="n">b</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="n">b</span><span class="p">.</span><span class="n">Click</span> <span class="p">+=</span> <span class="n">Foo_Click</span><span class="p">;</span> <span class="p">})</span>
                            <span class="p">}</span>
                        <span class="p">}</span>
                    <span class="p">}</span>
                <span class="p">}</span>
            <span class="p">};</span>
</code></pre></div></div>

<p>在 C# 写界面代码的时候会遇到的问题是事件的监听等问题，本文主要是解决事件监听的问题，写法很简单，添加下面这个辅助方法</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">static</span> <span class="k">class</span> <span class="nc">UIInitExtensions</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">static</span> <span class="n">Button</span> <span class="nf">Do</span><span class="p">(</span><span class="k">this</span> <span class="n">Button</span> <span class="n">button</span><span class="p">,</span> <span class="n">Action</span><span class="p">&lt;</span><span class="n">Button</span><span class="p">&gt;</span> <span class="n">action</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="nf">action</span><span class="p">(</span><span class="n">button</span><span class="p">);</span>
            <span class="k">return</span> <span class="n">button</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>注意的点是扩展方法需要返回自身，这样才能在后台代码写</p>

:ET