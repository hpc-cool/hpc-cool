I"m+<p>ViewBox 是一个好用的东西，但是在他缩小的时候，可能有一些线无法显示。
现在公司项目就是做一个类似 ppt 的软件，所以需要使用缩略图，而对于矩形形状，在缩略图，经常看不到线。
因为 ViewBox 和 visualBrush 都使用 邻近算法 所以  ViewBox 和 visualBrush  都存在丢失线的问题。
本文提供一个算法，解决 单线条在WPF不显示问题。1像素线段在WPF不显示问题。ViewBox 缩小失去线段问题。</p>

<!--more-->

<!-- CreateTime:2018/11/21 9:37:53 -->

<!-- csdn -->
<div id="toc"></div>

<p>我发现这个问题，于是在 堆栈网提问：<a href="https://stackoverflow.com/q/44495238/6116637">https://stackoverflow.com/q/44495238/6116637</a>，最后在<a href="https://github.com/walterlv">walterlv</a> 的帮助下，找到解决方法。</p>

<p>先来说下问题：</p>

<p>如果使用 ViewBox 缩小一个矩形，如果线段只有 1 像素，那么容易就丢失。</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F2017613101115.jpg" alt="" /></p>

<p>请看上图，左边就是一个矩形，右边是使用 ViewBox 做出来的缩小图形。可以看到存在线条不显示，但是在移动矩形过程中，有些线就显示了，于是看起来图形在闪烁，这个设计不好。</p>

<p>当然为了显示矩形，我需要使用 VisualBrush 。为了说明 ViewBox 问题，我用了两个方法，一个就是使用 一个ViewBox 里面放矩形。一个就是使用 ViusalBrush 显示矩形。得到结果差不多， ViewBox 和 visualBrush 都会丢失线段。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>         <span class="p">&lt;</span><span class="n">Border</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"SlideBorder"</span> <span class="n">Margin</span><span class="p">=</span><span class="s">"10,10,10,100"</span> <span class="n">BorderThickness</span><span class="p">=</span><span class="s">"1"</span> <span class="n">BorderBrush</span><span class="p">=</span><span class="s">"White"</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">Border</span><span class="p">.</span><span class="n">Background</span><span class="p">&gt;</span>
                    <span class="p">&lt;</span><span class="n">VisualBrush</span>  <span class="n">Visual</span><span class="p">=</span><span class="s">"{Binding ElementName=Rectangle}"</span> <span class="n">Stretch</span><span class="p">=</span><span class="s">"Uniform"</span>  <span class="p">/&gt;</span>
                <span class="p">&lt;/</span><span class="n">Border</span><span class="p">.</span><span class="n">Background</span><span class="p">&gt;</span>
            <span class="p">&lt;/</span><span class="n">Border</span><span class="p">&gt;</span>
</code></pre></div></div>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="p">&lt;</span><span class="n">Viewbox</span>  <span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">Grid</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"Rectangle"</span> <span class="n">Background</span><span class="p">=</span><span class="s">"#FFFFFFFF"</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="n">Rectangle</span> <span class="n">Margin</span><span class="p">=</span><span class="s">"10,50,10,10"</span> <span class="n">Stroke</span><span class="p">=</span><span class="s">"#FF565656"</span>
                           <span class="n">StrokeThickness</span><span class="p">=</span><span class="s">"1"</span>
                           <span class="n">UseLayoutRounding</span><span class="p">=</span><span class="s">"True"</span><span class="p">&gt;</span>

                <span class="p">&lt;/</span><span class="n">Rectangle</span><span class="p">&gt;</span>
                <span class="p">&lt;/</span><span class="n">Grid</span><span class="p">&gt;</span>
                
            <span class="p">&lt;/</span><span class="n">Viewbox</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>但是大家都知道，ps 缩小图片，不会容易就出现线段不显示，于是能否使用和 ps 相似的方法？</p>

<p>答案，是的。于是使用的技术有：控件截图、改变图片大小</p>

<p>通过控件截图得到控件的图片，然后通过改变图片大小方式，不会让线段不显示。</p>

<h2 id="wpf-截图">wpf 截图</h2>

<p>可以使用下面代码截图，width 是图片像素宽度，height是高度</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>             <span class="kt">var</span> <span class="n">bitmap</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RenderTargetBitmap</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="m">96.0</span> <span class="n">dpi</span> <span class="err">就是</span><span class="m">96</span><span class="p">,</span> <span class="m">96.0</span><span class="p">,</span> <span class="n">PixelFormats</span><span class="p">.</span><span class="n">Pbgra32</span><span class="p">);</span>
            <span class="n">bitmap</span><span class="p">.</span><span class="nf">Render</span><span class="p">(</span><span class="err">控件</span><span class="p">);</span>
</code></pre></div></div>

<p>如果dpi不是96，那么请使用其他值</p>

<p>通过上面方法就可以截图，然后需要修改图片大小。</p>

<h2 id="修改图片大小">修改图片大小</h2>

<p>修改图片大小，可以使用<code class="language-plaintext highlighter-rouge">TransformedBitmap</code></p>

<p>如果需要把图片修改为大小为 size ，请使用下面代码，这个代码的效率很高。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">new</span> <span class="nf">TransformedBitmap</span><span class="p">(</span><span class="n">bitmap</span><span class="p">,</span> <span class="k">new</span> <span class="nf">ScaleTransform</span><span class="p">(</span><span class="n">size</span><span class="p">.</span><span class="n">Width</span> <span class="p">/</span> <span class="err">图片宽度</span><span class="p">,</span> <span class="n">size</span><span class="p">.</span><span class="n">Height</span> <span class="p">/</span> <span class="err">图片高度</span><span class="p">))</span>
</code></pre></div></div>

<p>这样可以返回一个 BitmapImage ，于是就得到从输入一个控件到输出一个图片</p>

<p>通过上面的方法，可以使用和 VisualBrush 的方法，把控件转为图片，但是效率没有 visualBrush 那么高。不过在 <code class="language-plaintext highlighter-rouge">1280*720P</code> 的控件效率大概比 VisualBrush 时间大概多不到 50 毫秒。当然我的配置比较高也有关，TransformedBitmap 的代码是在 GPU 计算的，而截图是在 UI 线程，所以需要注意一下。</p>

<p>总的代码就是：</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">public</span> <span class="k">static</span> <span class="n">BitmapSource</span> <span class="nf">ToBitmapSource</span><span class="p">(</span><span class="n">Visual</span> <span class="n">visual</span><span class="p">,</span> <span class="n">Size</span> <span class="n">size</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">bounds</span> <span class="p">=</span> <span class="n">VisualTreeHelper</span><span class="p">.</span><span class="nf">GetDescendantBounds</span><span class="p">(</span><span class="n">visual</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">width</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">Math</span><span class="p">.</span><span class="nf">Round</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">Width</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">height</span> <span class="p">=</span> <span class="p">(</span><span class="kt">int</span><span class="p">)</span> <span class="n">Math</span><span class="p">.</span><span class="nf">Round</span><span class="p">(</span><span class="n">bounds</span><span class="p">.</span><span class="n">Height</span><span class="p">);</span>
            <span class="kt">var</span> <span class="n">bitmap</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RenderTargetBitmap</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="m">96.0</span><span class="p">,</span> <span class="m">96.0</span><span class="p">,</span> <span class="n">PixelFormats</span><span class="p">.</span><span class="n">Pbgra32</span><span class="p">);</span>
            <span class="n">bitmap</span><span class="p">.</span><span class="nf">Render</span><span class="p">(</span><span class="n">visual</span><span class="p">);</span>
            <span class="k">return</span> <span class="k">new</span> <span class="nf">TransformedBitmap</span><span class="p">(</span><span class="n">bitmap</span><span class="p">,</span> <span class="k">new</span> <span class="nf">ScaleTransform</span><span class="p">(</span><span class="n">size</span><span class="p">.</span><span class="n">Width</span> <span class="p">/</span> <span class="n">width</span><span class="p">,</span> <span class="n">size</span><span class="p">.</span><span class="n">Height</span> <span class="p">/</span> <span class="n">height</span><span class="p">));</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>输入你需要转换的控件，输入转换后的大小，得到一个图片</p>

<p>于是大概就是 VisualBrush 的功能。</p>

<p>于是使用上面的代码，尝试缩小，可以看到不会丢失线</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F20176131139.jpg" alt="" /></p>

<p>缺点：无法获得用户的输入，得到是图片，只能用于显示</p>

<p>大法的缩略图，是在用户输入完成在做新的图片，尝试移动一个图片，在移动中，缩略图是不显示的。</p>

<p>呆磨：http://download.csdn.net/detail/lindexi_gd/9868941</p>

<p>参见：<a href="https://stackoverflow.com/q/44495238/6116637">How to fix VisualBrush lost line?</a></p>

<p><a href="https://stackoverflow.com/q/29552339/6116637">how to avoid a single pixel line disappear in wpf?</a></p>

:ET