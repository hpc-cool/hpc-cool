I"<p>We can trigger the GitHub Action by Git tag pushed and we can read the Git tag name as the version. And then we can generate the NuGet package with this version.</p>

<!--more-->

<!-- CreateTime:5/26/2020 2:18:01 PM -->

<p>There is a dotnet tool that can read Git tags as a version and write it to the version file.</p>

<p>Before using it, we should create the version file and import the version file.</p>

<p>We should use dotnet to install the dotnetCampus.TagToVersion tool and use the tool to write the Git tag to version file.</p>

<p>The step 1:</p>

<p>Adding the <code class="language-plaintext highlighter-rouge">Directory.Build.props</code> file to repo folder.</p>

<p>Writing the code to the <code class="language-plaintext highlighter-rouge">Directory.Build.props</code> file.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Project&gt;</span>
  <span class="nt">&lt;Import</span> <span class="na">Project=</span><span class="s">"build\Version.props"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/Project&gt;</span>
</code></pre></div></div>

<p>The step 2:</p>

<p>Making a folder named <code class="language-plaintext highlighter-rouge">build</code> and adding the <code class="language-plaintext highlighter-rouge">Version.props</code> file to this folder.</p>

<p>Writing the code to the <code class="language-plaintext highlighter-rouge">build\Version.props</code> file.</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Project&gt;</span>
  <span class="nt">&lt;PropertyGroup&gt;</span>
    <span class="nt">&lt;Version&gt;</span>1.0.5<span class="nt">&lt;/Version&gt;</span>
  <span class="nt">&lt;/PropertyGroup&gt;</span>
<span class="nt">&lt;/Project&gt;</span>
</code></pre></div></div>

<p>The step 3:</p>

<p>Writing a GitHub Action configuration file in <code class="language-plaintext highlighter-rouge">.github\workflows</code> folder, for example create the <code class="language-plaintext highlighter-rouge">.github\workflows\push tag and pack nuget.yml</code> file</p>

<p>Making the Action trigger by tag push.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">on</span><span class="pi">:</span>
  <span class="na">push</span><span class="pi">:</span>
    <span class="na">tags</span><span class="pi">:</span>
    <span class="pi">-</span> <span class="s1">'</span><span class="s">*'</span> 
</code></pre></div></div>

<p>Writing the tag as version by dotnet tool.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install dotnet tool</span>
      <span class="na">run</span><span class="pi">:</span> <span class="s">dotnet tool install -g dotnetCampus.TagToVersion</span>

    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Set tag to version</span>  
      <span class="na">run</span><span class="pi">:</span> <span class="s">dotnet TagToVersion -t ${ { github.ref } }</span>
</code></pre></div></div>

<!-- ![](image/How to generate NuGet package with Git Tag version using GitHub Action/How to generate NuGet package with Git Tag version using GitHub Action0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F20205281056227454.jpg" alt="" /></p>

<p>Building the package</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># Build and publish</span>

    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build with dotnet</span>
      <span class="na">run</span><span class="pi">:</span> <span class="s">dotnet build --configuration Release</span>

    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install Nuget</span>
      <span class="na">uses</span><span class="pi">:</span> <span class="s">nuget/setup-nuget@v1</span>
      <span class="na">with</span><span class="pi">:</span>        
        <span class="na">nuget-version</span><span class="pi">:</span> <span class="s1">'</span><span class="s">5.x'</span>

    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Add private GitHub registry to NuGet</span>
      <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>
        <span class="s">nuget sources add -name github -Source https://nuget.pkg.github.com/ORGANIZATION_NAME/index.json -Username ORGANIZATION_NAME -Password ${ { secrets.GITHUB_TOKEN } }</span>
    <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Push generated package to GitHub registry</span>
      <span class="na">run</span><span class="pi">:</span> <span class="pi">|</span>
        <span class="s">nuget push .\bin\release\*.nupkg -Source github -SkipDuplicate</span>
        <span class="s">nuget push .\bin\release\*.nupkg -Source https://api.nuget.org/v3/index.json -SkipDuplicate -ApiKey ${ { secrets.NugetKey } } -NoSymbols </span>
</code></pre></div></div>

<p>See https://github.com/dotnet-campus/dotnetCampus.TagToVersion</p>
:ET