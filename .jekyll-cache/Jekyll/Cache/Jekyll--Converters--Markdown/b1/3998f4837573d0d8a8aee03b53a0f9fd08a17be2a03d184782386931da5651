I"K%<p><strong>Problem description:</strong>
WPF will initialize pen thread when the window initializing. But I find the window may be locked in PenThreadWorker constructor.
The <code class="language-plaintext highlighter-rouge">UnsafeNativeMethods.CreateResetEvent</code> will lock the thread.</p>

<p><strong>Actual behavior:</strong> <!-- callstack for crashes / exceptions -->
I use multithreading to create some windows by this code and maybe the thread be locked in PenThreadWorker constructor.
The Demo code</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">App</span> <span class="p">:</span> <span class="n">Application</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStartup</span><span class="p">(</span><span class="n">StartupEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">thread</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="p">(()</span> <span class="p">=&gt;</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">mainWindow</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MainWindow</span><span class="p">();</span>
                <span class="n">mainWindow</span><span class="p">.</span><span class="nf">Show</span><span class="p">();</span>
                <span class="n">Dispatcher</span><span class="p">.</span><span class="nf">Run</span><span class="p">();</span>
            <span class="p">});</span>
            <span class="n">thread</span><span class="p">.</span><span class="nf">SetApartmentState</span><span class="p">(</span><span class="n">ApartmentState</span><span class="p">.</span><span class="n">STA</span><span class="p">);</span>
            <span class="n">thread</span><span class="p">.</span><span class="nf">Start</span><span class="p">();</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnStartup</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
<p>The step</p>
<ol>
  <li>Run the code</li>
  <li>Use the VisualStudio to suspend the application
Maybe you can find the application only create a <code class="language-plaintext highlighter-rouge">Stylus Input</code> thread and show only a main window and the other main window and the thread be locked in PenThreadWorker constructor and the window can not show
Why I need multithreading to show the windows? I need the splash window to show the welcome page and then I should show the main window in other thread to do the bussiness code and I should close the splash window when the main window showed.
But I found some users could not show the main window and the main window be lock in PenThreadWorker constructor.
I use dnspy to suspend the application and find the code run in PenThreadWorker constructor and the <code class="language-plaintext highlighter-rouge">UnsafeNativeMethods.CreateResetEvent</code> will lock the thread.
    <div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="n">PenThreadWorker</span><span class="p">..</span><span class="nf">ctor</span><span class="p">()</span>  
 <span class="n">PenThread</span><span class="p">..</span><span class="nf">ctor</span><span class="p">()</span>  
 <span class="n">PenThreadPool</span><span class="p">.</span><span class="nf">GetPenThreadForPenContextHelper</span><span class="p">(</span><span class="n">PenContext</span> <span class="n">penContext</span><span class="p">)</span>  
 <span class="n">PenThreadPool</span><span class="p">.</span><span class="nf">GetPenThreadForPenContext</span><span class="p">(</span><span class="n">PenContext</span> <span class="n">penContext</span><span class="p">)</span>  
 <span class="n">WispTabletDeviceCollection</span><span class="p">.</span><span class="nf">UpdateTabletsImpl</span><span class="p">()</span>  
 <span class="n">WispTabletDeviceCollection</span><span class="p">.</span><span class="nf">UpdateTablets</span><span class="p">()</span>  
 <span class="n">WispTabletDeviceCollection</span><span class="p">..</span><span class="nf">ctor</span><span class="p">()</span>  
 <span class="n">WispLogic</span><span class="p">.</span><span class="nf">get_WispTabletDevices</span><span class="p">()</span>  
 <span class="n">WispLogic</span><span class="p">.</span><span class="nf">RegisterHwndForInput</span><span class="p">(</span><span class="n">InputManager</span> <span class="n">inputManager</span><span class="p">,</span> <span class="n">PresentationSource</span> <span class="n">inputSource</span><span class="p">)</span>  
 <span class="n">HwndStylusInputProvider</span><span class="p">..</span><span class="nf">ctor</span><span class="p">(</span><span class="n">HwndSource</span> <span class="n">source</span><span class="p">)</span>  
 <span class="n">HwndSource</span><span class="p">.</span><span class="nf">Initialize</span><span class="p">(</span><span class="n">HwndSourceParameters</span> <span class="n">parameters</span><span class="p">)</span>  
 <span class="n">HwndSource</span><span class="p">..</span><span class="nf">ctor</span><span class="p">(</span><span class="n">HwndSourceParameters</span> <span class="n">parameters</span><span class="p">)</span>  
 <span class="n">PresentationFramework</span><span class="p">.</span><span class="n">dll</span><span class="p">!</span><span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Window</span><span class="p">.</span><span class="nf">CreateSourceWindow</span><span class="p">(</span><span class="kt">bool</span> <span class="n">duringShow</span><span class="p">)</span>  
 <span class="n">PresentationFramework</span><span class="p">.</span><span class="n">dll</span><span class="p">!</span><span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Window</span><span class="p">.</span><span class="nf">CreateSourceWindowDuringShow</span><span class="p">()</span>  
 <span class="n">PresentationFramework</span><span class="p">.</span><span class="n">dll</span><span class="p">!</span><span class="n">System</span><span class="p">.</span><span class="n">Windows</span><span class="p">.</span><span class="n">Window</span><span class="p">.</span><span class="nf">ShowHelper</span><span class="p">(</span><span class="kt">object</span> <span class="n">booleanBox</span><span class="p">)</span>  
</code></pre></div>    </div>
    <p><strong>Expected behavior:</strong>
The <code class="language-plaintext highlighter-rouge">UnsafeNativeMethods.CreateResetEvent</code> do not lock the thread</p>
  </li>
</ol>

<p><strong>Minimal repro:</strong></p>

<p>Create a empty WPF application and then change the app.xaml.cs code</p>
<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">partial</span> <span class="k">class</span> <span class="nc">App</span> <span class="p">:</span> <span class="n">Application</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;inheritdoc /&gt;</span>
        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnStartup</span><span class="p">(</span><span class="n">StartupEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="kt">var</span> <span class="n">thread</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thread</span><span class="p">(()</span> <span class="p">=&gt;</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">mainWindow</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MainWindow</span><span class="p">();</span>
                <span class="n">mainWindow</span><span class="p">.</span><span class="nf">Show</span><span class="p">();</span>
                <span class="n">Dispatcher</span><span class="p">.</span><span class="nf">Run</span><span class="p">();</span>
            <span class="p">});</span>
            <span class="n">thread</span><span class="p">.</span><span class="nf">SetApartmentState</span><span class="p">(</span><span class="n">ApartmentState</span><span class="p">.</span><span class="n">STA</span><span class="p">);</span>
            <span class="n">thread</span><span class="p">.</span><span class="nf">Start</span><span class="p">();</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnStartup</span><span class="p">(</span><span class="n">e</span><span class="p">);</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>
<p>Run the code and maybe you can find one of the main window can not show and it stop in <code class="language-plaintext highlighter-rouge">UnsafeNativeMethods.CreateResetEvent</code> and I wait for a hour but it can not run.</p>
:ET