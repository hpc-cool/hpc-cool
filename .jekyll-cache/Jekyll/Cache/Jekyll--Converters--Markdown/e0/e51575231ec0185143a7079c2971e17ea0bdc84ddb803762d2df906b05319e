I",<p>本文讲如何访问解决方案的资源。</p>

<!--more-->

<!-- CreateTime:2019/10/31 9:24:18 -->

<div id="toc"></div>
<!-- 标签：uwp，uwp文件 -->

<p>我们经常会把一些图片资源放在我们的解决方案，那么从这里拿出来很简单。</p>

<p>我在 Assets 放了图片 1.jpg 那么我要把他拿出来可以</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;Image</span> <span class="na">Source=</span><span class="s">"ms-appx:///Assets/logo.png"</span> <span class="nt">/&gt;</span>
</code></pre></div></div>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">file</span> <span class="p">=</span> <span class="k">await</span> <span class="n">StorageFile</span><span class="p">.</span><span class="nf">GetFileFromApplicationUriAsync</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appx:///Assets/1.png"</span><span class="p">));</span> 
</code></pre></div></div>

<p>那么我们访问我们解决方案加的 ms-appx 就是解决方案的绝对路径，如果我们相对于我们xaml的路径也是可以</p>

<p>如果需要访问我们应用中的本地数据 local ，临时文件 temp 等，可以使用 ms-appdate:// 后面加/ local、temp</p>

<p>如果我们本地有 1.png 放在 local</p>

<p>我们可以使用</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">var</span> <span class="n">file</span><span class="p">=</span><span class="k">await</span> <span class="n">StorageFile</span><span class="p">.</span><span class="nf">GetFileFromApplicationUriAsync</span><span class="p">(</span><span class="k">new</span> <span class="nf">Uri</span><span class="p">(</span><span class="s">"ms-appdate:///local/1.png"</span><span class="p">));</span>
</code></pre></div></div>

<p>如果提示找不到文件，但是自己确定位置是对的，那么一个可能是，你创建了生成不对。
试试右击文件，属性，选生成操作：内容。记住要内容，其他可能出现找不到。</p>

<p>参见：<a href="https://msdn.microsoft.com/zh-cn/library/windows/apps/xaml/hh965322\(v=win.10\).aspx">https://msdn.microsoft.com/zh-cn/library/windows/apps/xaml/hh965322(v=win.10).aspx</a></p>

<p>关于git http://blog.csdn.net/marktheone/article/details/52062888</p>

<h2 id="wpf-访问解决方案文件">WPF 访问解决方案文件</h2>

<p>WPF 使用 Application.GetResourceStream 获得，注意 URL 和UWP不同，WPF使用 <code class="language-plaintext highlighter-rouge">pack://application:,,,/</code> 的方法 参见 https://msdn.microsoft.com/en-us/library/aa970069%28v=vs.110%29.aspx?f=255&amp;MSPPError=-2147217396</p>

<p>具体请看 <a href="https://blog.lindexi.com/post/WPF-%E4%BD%BF%E7%94%A8-VisualStudio-2017-%E9%A1%B9%E7%9B%AE%E6%96%87%E4%BB%B6.html">WPF 使用 VisualStudio 2017 项目文件</a></p>

<h2 id="c-访问解决方案文件">C# 访问解决方案文件</h2>

<p>如果是命令行，那么可以使用 Resource 放文件，然后读取</p>

<p>在项目右击新建资源文件，注意这个文件的后缀是 resw 格式，创建之后，点击添加文件，选取项目里面的现有文件。此时将会自动生成代码，包括添加的文件的二进制数组属性</p>

<p>读取到的文件是 byte[] 数组 ，如果需要转 stream 请看下面代码，其中资源文件名称为 resource ，资源文件里的文件是 Res 属性，资源文件是没有后缀，所以打开不能通过后缀判断</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">new</span> <span class="nf">MemoryStream</span><span class="p">(</span><span class="n">resource</span><span class="p">.</span><span class="n">Res</span><span class="p">)</span>
</code></pre></div></div>

<p>也就是将 byte 数组转换为 MemoryStream 从而转为 Stream 作为参数</p>

:ET