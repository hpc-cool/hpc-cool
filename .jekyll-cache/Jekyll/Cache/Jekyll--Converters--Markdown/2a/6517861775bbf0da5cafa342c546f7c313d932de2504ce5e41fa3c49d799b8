I"*<p>如果需要做一个类的重写，需要重新写这个类的所有属性和函数，本文提供一个简单的方法让大家快速重写一个类的所有属性和函数。</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:16:51 -->

<!-- 标签：Resharper -->

<p>在有 Resharper 之后，对一个比较长的类进行重构。例如有这个类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">class</span> <span class="nc">Foo</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">F1</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">F2</span><span class="p">()</span>
        <span class="p">{</span>

        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>来写出这个类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">Foo1</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">Foo</span> <span class="n">_foo</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Foo1</span><span class="p">(</span><span class="n">Foo</span> <span class="n">fooImplementation</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_foo</span> <span class="p">=</span> <span class="n">fooImplementation</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">F1</span>
        <span class="p">{</span>
            <span class="k">get</span> <span class="p">{</span> <span class="k">return</span> <span class="n">_foo</span><span class="p">.</span><span class="n">F1</span><span class="p">;</span> <span class="p">}</span>
            <span class="k">set</span> <span class="p">{</span> <span class="n">_foo</span><span class="p">.</span><span class="n">F1</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span> <span class="p">}</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">F2</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_foo</span><span class="p">.</span><span class="nf">F2</span><span class="p">();</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>难道需要自己全部写一遍？实际上可以使用这个方法来快速写。</p>

<p>使用 ctrl+shift+R 把 Foo 弄出一个接口</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F2018123183128.jpg" alt="" /></p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F201812318323.jpg" alt="" /></p>

<p>可以看到接口</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">internal</span> <span class="k">interface</span> <span class="nc">IFoo</span>
    <span class="p">{</span>
        <span class="kt">string</span> <span class="n">F1</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>
        <span class="k">void</span> <span class="nf">F2</span><span class="p">();</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>写另外的类继承这个接口</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="k">class</span> <span class="nc">Foo1</span> <span class="p">:</span> <span class="n">IFoo</span>
    <span class="p">{</span>
        <span class="k">private</span> <span class="n">IFoo</span> <span class="n">_foo</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Foo1</span><span class="p">(</span><span class="n">IFoo</span> <span class="n">foo</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_foo</span> <span class="p">=</span> <span class="n">foo</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>在这个类按 alt+insert 可以看到  Delegating Members ，点击</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F201812318371.jpg" alt="" /></p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F201812318383.jpg" alt="" /></p>

<p>这样就可以拿到这个类的所有属性和函数</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">class</span> <span class="nc">Foo1</span> <span class="p">:</span> <span class="n">IFoo</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">F2</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">_foo</span><span class="p">.</span><span class="nf">F2</span><span class="p">();</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">IFoo</span> <span class="n">_foo</span><span class="p">;</span>

        <span class="k">public</span> <span class="nf">Foo1</span><span class="p">(</span><span class="n">IFoo</span> <span class="n">foo</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_foo</span> <span class="p">=</span> <span class="n">foo</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">F1</span>
        <span class="p">{</span>
            <span class="k">get</span> <span class="p">=&gt;</span> <span class="n">_foo</span><span class="p">.</span><span class="n">F1</span><span class="p">;</span>
            <span class="k">set</span> <span class="p">=&gt;</span> <span class="n">_foo</span><span class="p">.</span><span class="n">F1</span> <span class="p">=</span> <span class="k">value</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>如果需要复制一个类，可以使用 ctrl+shift+R 点击 Copy Type</p>

<p>复制一个类可以复制静态属性、方法，拿到类的接口不能获得静态的属性方法。</p>

:ET