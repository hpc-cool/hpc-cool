I"]<p>在 dotnet 可以使用 LZ4 这个无损的压缩算法，这个压缩算法的压缩率不高但是速度很快。这个库支持在 .NET Standard 1.6 .NET Core .NET Framework Mono Xamarin 和 UWP 运行</p>

<!--more-->

<!-- CreateTime:2019/8/31 16:55:58 -->

<p>压缩算法 LZ4 的原代码是使用 C 写的，请看<a href="https://github.com/lz4/lz4">代码</a> 本文的 <a href="https://github.com/MiloszKrajewski/K4os.Compression.LZ4">K4os.Compression.LZ4</a> 是使用 C# 写的，里面也有版本使用了 C++ 代码</p>

<p>因为很多时候都是对 Stream 压缩，所以重点告诉大家如何进行 Stream 压缩</p>

<p>注意这个压缩算法不是 zip 或 rar 压缩，也就是压缩文件不能使用现在的 zip 压缩软件打开，同时压缩的内容也不是文件</p>

<p>使用 NuGet 安装 <a href="https://www.nuget.org/packages/K4os.Compression.LZ4.Streams">K4os.Compression.LZ4.Streams</a> 很简单就可以使用 LZ4 压缩</p>

<p>如我需要压缩一个字符串到文件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">K4os.Compression.LZ4.Streams</span><span class="p">;</span>

            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">stream</span> <span class="p">=</span> <span class="n">LZ4Stream</span><span class="p">.</span><span class="nf">Encode</span><span class="p">(</span><span class="n">File</span><span class="p">.</span><span class="nf">Create</span><span class="p">(</span><span class="s">"1.lz4"</span><span class="p">)))</span>
            <span class="p">{</span>
                <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">sw</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamWriter</span><span class="p">(</span><span class="n">stream</span><span class="p">))</span>
                <span class="p">{</span>
                    <span class="n">sw</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"林德熙是逗比"</span><span class="p">);</span>
                <span class="p">}</span>
            <span class="p">}</span>

</code></pre></div></div>

<p>这样就将字符串压缩进了文件</p>

<p>调用 LZ4Stream.Encode 传入 stream 对返回的 stream 写入将会压缩到传入的 stream 如上面代码</p>

<p>在解压缩是 LZ4Stream.Decode 方法，如解压缩上面的文件</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">stream</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StreamReader</span><span class="p">(</span><span class="n">LZ4Stream</span><span class="p">.</span><span class="nf">Decode</span><span class="p">(</span><span class="n">File</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="s">"1.lz4"</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">))))</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">stream</span><span class="p">.</span><span class="nf">ReadLine</span><span class="p">());</span>
            <span class="p">}</span>
</code></pre></div></div>

<p>运行代码可以发现输出逗比这就是 LZ4 简单的使用，其实复杂的使用和简单的也差不多</p>

<p>在 Encode 和 Decode 里面还可以传入参数，用于配置更高性能的压缩</p>

<p><a href="https://github.com/lz4/lz4">lz4/lz4: Extremely Fast Compression algorithm</a></p>

<p><a href="https://github.com/MiloszKrajewski/K4os.Compression.LZ4">K4os.Compression.LZ4</a></p>

<p>所有代码都在 <a href="https://github.com/lindexi/lindexi_gd/tree/c315a9e325e07abe3782a5966d2b24ebd2e92954/DurbujukerhaHaykairyearnal">github</a></p>

:ET