I"Y <p>今天有小伙伴问我一个问题，在image控件用鼠标拖拽出矩形，本文告诉大家如何使用鼠标画出矩形</p>

<!--more-->

<!-- CreateTime:2018/11/19 15:35:13 -->

<p>做出来的效果先请大家看一下</p>

<!-- ![](image/WPF 在image控件用鼠标拖拽出矩形/WPF 在image控件用鼠标拖拽出矩形.gif) -->

<p><img src="http://image.acmx.xyz/lindexi%2F2018811152153967" alt="" /></p>

<p>最简单的方法是在 Down 的时候记录按下的点，在 移动的时候重新计算所在的宽度</p>

<!-- ![](image/WPF 在image控件用鼠标拖拽出矩形/WPF 在image控件用鼠标拖拽出矩形0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F201881115410158" alt="" /></p>

<p>先在界面使用一个图片和一个矩形</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="p">&lt;</span><span class="n">Grid</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"Grid"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">Image</span> <span class="n">Source</span><span class="p">=</span><span class="s">"TIM截图20180811150831.png"</span><span class="p">&gt;&lt;/</span><span class="n">Image</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">TextBlock</span> <span class="n">HorizontalAlignment</span><span class="p">=</span><span class="s">"Center"</span> <span class="n">VerticalAlignment</span><span class="p">=</span><span class="s">"Center"</span><span class="p">&gt;</span><span class="err">欢迎访问我博客</span> <span class="n">http</span><span class="p">:</span><span class="c1">//lindexi.oschina.io &lt;/TextBlock&gt;</span>
        <span class="p">&lt;</span><span class="n">Rectangle</span> <span class="n">x</span><span class="p">:</span><span class="n">Name</span><span class="p">=</span><span class="s">"Rectangle"</span> <span class="n">StrokeThickness</span><span class="p">=</span><span class="s">"2"</span> <span class="n">Stroke</span><span class="p">=</span><span class="s">"Black"</span> <span class="n">HorizontalAlignment</span><span class="p">=</span><span class="s">"Left"</span> <span class="n">VerticalAlignment</span><span class="p">=</span><span class="s">"Top"</span><span class="p">&gt;&lt;/</span><span class="n">Rectangle</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">Grid</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>需要注意，图片的位置需要修改为自己需要的图片</p>

<p>这里的 <code class="language-plaintext highlighter-rouge">Rectangle</code> 需要做一些设置，主要 <code class="language-plaintext highlighter-rouge">HorizontalAlignment</code> 和 <code class="language-plaintext highlighter-rouge">VerticalAlignment</code> 必须设置为左上角</p>

<p>现在打开 cs 代码，在按下和移动修改矩形</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
            <span class="n">MouseDown</span> <span class="p">+=</span> <span class="n">MainWindow_MouseDown</span><span class="p">;</span>
            <span class="n">MouseMove</span> <span class="p">+=</span> <span class="n">MainWindow_MouseMove</span><span class="p">;</span>
            <span class="n">MouseUp</span> <span class="p">+=</span> <span class="n">MainWindow_MouseUp</span><span class="p">;</span>
</code></pre></div></div>

<p>需要两个字段来记录当前是否按下和第一次按下所在的坐标</p>

<p>刚才给 <code class="language-plaintext highlighter-rouge">Grid</code> 的命名就是为了拿到相对 Grid 的坐标</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">MainWindow_MouseDown</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseButtonEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_started</span> <span class="p">=</span> <span class="k">true</span><span class="p">;</span>

            <span class="n">_downPoint</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="nf">GetPosition</span><span class="p">(</span><span class="n">Grid</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="kt">bool</span> <span class="n">_started</span><span class="p">;</span>

        <span class="k">private</span> <span class="n">Point</span> <span class="n">_downPoint</span><span class="p">;</span>
</code></pre></div></div>

<p>在鼠标按下时拿到按下的坐标，通过这个坐标就可以计算出矩形所在的位置</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="k">void</span> <span class="nf">MainWindow_MouseUp</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseButtonEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">_started</span> <span class="p">=</span> <span class="k">false</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">MainWindow_MouseMove</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">MouseEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="n">_started</span><span class="p">)</span>
            <span class="p">{</span>
                <span class="kt">var</span> <span class="n">point</span> <span class="p">=</span> <span class="n">e</span><span class="p">.</span><span class="nf">GetPosition</span><span class="p">(</span><span class="n">Grid</span><span class="p">);</span>

                <span class="kt">var</span> <span class="n">rect</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="n">_downPoint</span><span class="p">,</span> <span class="n">point</span><span class="p">);</span>
                <span class="n">Rectangle</span><span class="p">.</span><span class="n">Margin</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Thickness</span><span class="p">(</span><span class="n">rect</span><span class="p">.</span><span class="n">Left</span><span class="p">,</span> <span class="n">rect</span><span class="p">.</span><span class="n">Top</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">);</span>
                <span class="n">Rectangle</span><span class="p">.</span><span class="n">Width</span> <span class="p">=</span> <span class="n">rect</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
                <span class="n">Rectangle</span><span class="p">.</span><span class="n">Height</span> <span class="p">=</span> <span class="n">rect</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
            <span class="p">}</span>
        <span class="p">}</span>
</code></pre></div></div>

<p>代码就是这么简单，通过修改 <code class="language-plaintext highlighter-rouge">Margin</code> 的方法修改矩形</p>

<p>如果对于高手，我建议使用 <code class="language-plaintext highlighter-rouge">RenderTransform</code> 的方式而不是使用 <code class="language-plaintext highlighter-rouge">Margin</code> 这里使用这个方法只是看起来简单</p>

<p>因为性能最差 Canvas.SetLeft Canvas.SetTop，性能中等 Margin，性能最好 RenderTransform 当然使用 RenderTransform 的方法没有使用 Margin 那样容易了解</p>

:ET