I":<p>在写 Roslyn 的时候，经常需要辅助编译的工具，而这些工具需要传入一些参数，在项目很大的时候，会发现自己传入的参数比微软限制控制台可以传入的参数大很多，这时就无法传入了参数。
本文告诉大家如何使用 WriteLinesToFile 先把参数写入文件，通过文件的方式传输参数</p>

<!--more-->

<!-- CreateTime:2019/1/29 16:31:43 -->

<!-- 标签：Roslyn,MSBuild,编译器 -->

<p>为了让大家可以方便了解 Roslyn 编译过程，所以本文是带着一个任务来做的。通过阅读本文，大家可以学会怎么写出一些神奇的代码。</p>

<p>任务的背景是，在编译的过程，暗中修改一些代码，而且让开发者发现不了。</p>

<p>最简单的方法就是修改编译流程，修改编译流程是相对比较复杂的。但是上面在 MSBuild 可以使用很多奇怪的 Task 来做很多有趣的事情，其中就有一个强大的 Task 是 <code class="language-plaintext highlighter-rouge">Exec </code> ，这个命令就是使用命令行调用另一个程序。</p>

<p>也就是在编译的过程可以调用另一个程序，所以就把辅助编译的方法放在另一个程序去做。</p>

<p>但是要让这个辅助的程序跑，还需要告诉这个辅助的程序一下信息，如哪些需要编译的文件。</p>

<p>于是最简单的方式就是写一个 Target 来执行这个辅助的程序。先假设这个辅助的程序就放在 <code class="language-plaintext highlighter-rouge">E:\辅助程序.exe</code> ，调用的方法请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">Target</span> <span class="n">Name</span><span class="p">=</span><span class="s">"BitedeZawpiDafuge"</span> <span class="n">BeforeTargets</span><span class="p">=</span><span class="s">"CoreCompile"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">Exec</span> <span class="n">Command</span><span class="p">=</span><span class="s">"E:\辅助程序.exe @(Compile)"</span><span class="p">&gt;&lt;/</span><span class="n">Exec</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">Target</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>为了让 Target 运行需要给 Target 一个 Name ，还需要告诉 VisualStudio 什么时候运行这个 Target ，于是就使用<code class="language-plaintext highlighter-rouge">BeforeTargets="CoreCompile"</code> 告诉 VisualStudio 在开始编译之前就执行</p>

<p>当然，上面的写法只是为了方便第一次接触 Roslyn 的小伙伴，如果看到了这里还是有很多内容不知道，请先看<a href="https://lindexi.oschina.io/lindexi/post/roslyn.html">手把手教你写 Roslyn 修改编译</a>。</p>

<p>现在的问题是，调用 Exec 能传入的参数就是被微软限制大小，我的<code class="language-plaintext highlighter-rouge">Compile</code>编译文件有 10000000000000 个，于是就有很多文件无法传参数进去，这时我就无法在编译之前把代码修改掉，让项目可以成功运行，这样本渣还怎么去坑一个团队。</p>

<p>所以腹黑的本渣就需要一个方式传入很大的参数，找到了一个简单的方法就是使用<code class="language-plaintext highlighter-rouge">WriteLinesToFile</code>先把参数写到文件，然后把文件路径给辅助程序就可以</p>

<p>为了写入的文件可以在辅助程序找到，就需要先定义文件，请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">ItemGroup</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">TextFile</span> <span class="n">Include</span><span class="p">=</span><span class="s">"Items.txt"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="n">ItemGroup</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>把参数写入文件的方法请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">Target</span> <span class="n">Name</span><span class="p">=</span><span class="s">"WriteToFile"</span> <span class="n">BeforeTargets</span><span class="p">=</span><span class="s">"CoreCompile"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">WriteLinesToFile</span> <span class="n">File</span><span class="p">=</span><span class="s">"@(TextFile)"</span> <span class="n">Lines</span><span class="p">=</span><span class="s">"@(Compile)"</span> <span class="n">Overwrite</span><span class="p">=</span><span class="s">"true"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="n">Target</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>这时就会把 Compile 的所有文件都写入到<code class="language-plaintext highlighter-rouge">TextFile</code>文件</p>

<p>在写完之后就可以调用 Exec 执行程序了，也许这时大家会发现，本金鱼又在逗大家了，辅助的程序怎么知道 WriteLinesToFile 执行完了，会不会拿到一个空的文件。</p>

<p>我很负责和大家说，会的，如果现在不修改代码直接调用就会出现读取到的文件可能是空的</p>

<p>还记得 <code class="language-plaintext highlighter-rouge">DependsOnTargets </code> 这个属性？通过这个属性可以指定一个 Target 在什么时候运行，在运行辅助程序的代码就需要依赖上面的代码运行。于是修改之后的全部代码请看下面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="p">&lt;</span><span class="n">Target</span> <span class="n">Name</span><span class="p">=</span><span class="s">"WriteToFile"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">WriteLinesToFile</span> <span class="n">File</span><span class="p">=</span><span class="s">"@(TextFile)"</span> <span class="n">Lines</span><span class="p">=</span><span class="s">"@(Compile)"</span> <span class="n">Overwrite</span><span class="p">=</span><span class="s">"true"</span> <span class="p">/&gt;</span>
  <span class="p">&lt;/</span><span class="n">Target</span><span class="p">&gt;</span>

  <span class="p">&lt;</span><span class="n">Target</span> <span class="n">Name</span><span class="p">=</span><span class="s">"BitedeZawpiDafuge"</span> <span class="n">BeforeTargets</span><span class="p">=</span><span class="s">"CoreCompile"</span> <span class="n">DependsOnTargets</span><span class="p">=</span><span class="s">"WriteToFile"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">Exec</span> <span class="n">Command</span><span class="p">=</span><span class="s">"E:\辅助程序.exe $(MSBuildProjectDirectory)\@(TextFile)"</span><span class="p">&gt;&lt;/</span><span class="n">Exec</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">Target</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>现在的代码是可以运行了，从参数可以拿到文件名，然后通过读文件的方式拿到输入的文件</p>

<p>现在的代码已经可以运行了，但是本渣还需要继续告诉大家一些属性的设置是为什么，第一个设置的参数就是<code class="language-plaintext highlighter-rouge">WriteLinesToFile</code> 的 <code class="language-plaintext highlighter-rouge">File</code> ，使用这个就可以设置输出到哪个文件。第二个参数<code class="language-plaintext highlighter-rouge">Lines</code>就是输入的文本，不要问我文本怎么写为 <code class="language-plaintext highlighter-rouge">line</code> 而且是按照<code class="language-plaintext highlighter-rouge">;</code>分割多行的。</p>

<p>最后一个参数比较重要，是设置如果存在这个文件是否覆盖，如果没有选择覆盖，那么下面的辅助程序拿到的文件都会是以前的文件。我就是没有设置这个属性用了半个钟才发现读的文件都是以前的文件。</p>

<p>在另一个 Target 就是调用辅助程序，需要知道在参数传入的是<code class="language-plaintext highlighter-rouge">$(MSBuildProjectDirectory)</code>路径的，原因就是刚才写入的文件相对的就是项目所在的文件夹，所以需要从项目所在的文件夹才可以拿到这个文件。</p>

<p>如果是想把文件写在一个临时的文件夹，那么建议使用	<code class="language-plaintext highlighter-rouge">$(IntermediateOutputPath)</code>文件夹，这个<code class="language-plaintext highlighter-rouge">$(IntermediateOutputPath)</code>文件夹就是 <code class="language-plaintext highlighter-rouge">obj</code> 文件夹，建议在这个文件夹里再创建一个文件夹用来放临时的文件。</p>

<p>需要注意，文件同样可以写在<code class="language-plaintext highlighter-rouge">PropertyGroup</code>里，只是在<code class="language-plaintext highlighter-rouge">PropertyGroup</code>的引用是使用<code class="language-plaintext highlighter-rouge">$</code>请看下面代码</p>

<div class="language-diff highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gd">-  &lt;ItemGroup&gt;
-    &lt;TextFile Include="Items.txt" /&gt;
-  &lt;/ItemGroup&gt;
</span><span class="gi">+  &lt;PropertyGroup&gt;
+    &lt;TextFile&gt;Items.txt&lt;/TextFile&gt;
+  &lt;/PropertyGroup&gt;
</span>   &lt;Target Name="WriteToFile"&gt;
<span class="gd">-    &lt;WriteLinesToFile File="@(TextFile)" Lines="@(Compile)" Overwrite="true" /&gt;
</span><span class="gi">+    &lt;WriteLinesToFile File="$(TextFile)" Lines="@(Compile)" Overwrite="true" /&gt;
</span>   &lt;/Target&gt;
</code></pre></div></div>

<p>因为 PropertyGroup 的内容是不存在 Include 特性，所以需要使用上面的方法</p>

<p>如果写入的文件的文件夹是不存在，就需要先创建，如写入的是 <code class="language-plaintext highlighter-rouge">lindexi\foo.txt</code> 就需要先判断<code class="language-plaintext highlighter-rouge">lindexi</code>文件夹是否存在，如果没有判断直接使用就会出现下面代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="err">严重性</span>	<span class="err">代码</span>	<span class="err">说明</span>	<span class="err">项目</span>	<span class="err">文件</span>	<span class="err">行</span>	<span class="err">禁止显示状态</span>
<span class="err">错误</span>	<span class="n">MSB3491</span>	<span class="err">未能向文件“</span><span class="n">obj</span><span class="err">\</span><span class="n">Debug</span><span class="err">\</span><span class="n">netcoreapp2</span><span class="p">.</span><span class="m">0</span><span class="err">\</span><span class="n">lindexi</span><span class="err">\</span><span class="n">Items</span><span class="p">.</span><span class="n">txt</span><span class="err">”写入命令行。未能找到路径“</span><span class="n">C</span><span class="p">:</span><span class="err">\</span><span class="n">lindexi</span><span class="err">\</span><span class="n">framework</span><span class="err">\</span><span class="n">lindexi</span><span class="p">.</span><span class="n">Mvvm</span><span class="p">.</span><span class="n">framework</span><span class="err">\</span><span class="n">obj</span><span class="err">\</span><span class="n">Debug</span><span class="err">\</span><span class="n">netcoreapp2</span><span class="p">.</span><span class="m">0</span><span class="err">\</span><span class="n">lindexi</span><span class="err">\</span><span class="n">Items</span><span class="p">.</span><span class="n">txt</span><span class="err">”的一部分。</span>	<span class="n">framework</span>	<span class="n">C</span><span class="p">:</span><span class="err">\</span><span class="n">Users</span><span class="err">\</span><span class="n">lindexi</span><span class="err">\</span><span class="p">.</span><span class="n">nuget</span><span class="err">\</span><span class="n">packages</span><span class="err">\</span><span class="n">lindexi</span><span class="p">.</span><span class="n">Mvvm</span><span class="p">.</span><span class="n">framework</span><span class="err">\</span><span class="m">0.1</span><span class="p">.</span><span class="m">52</span><span class="p">-</span><span class="n">alpha</span><span class="err">\</span><span class="n">build</span><span class="err">\</span><span class="n">lindexi</span><span class="p">.</span><span class="n">Mvvm</span><span class="p">.</span><span class="n">framework</span><span class="p">.</span><span class="n">targets</span>	<span class="m">11</span>	

</code></pre></div></div>

<p>简单创建文件夹的方法是使用 MakeDir 请看下面代码</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   <span class="nt">&lt;PropertyGroup&gt;</span>
     <span class="nt">&lt;TextDirectory&gt;</span>lindexi/<span class="nt">&lt;/TextDirectory&gt;</span>
     <span class="nt">&lt;TextFile&gt;</span>$(TextDirectory)Items.txt<span class="nt">&lt;/TextFile&gt;</span>
   <span class="nt">&lt;/PropertyGroup&gt;</span>
   <span class="nt">&lt;Target</span> <span class="na">Name=</span><span class="s">"WriteToFile"</span><span class="nt">&gt;</span>
     <span class="nt">&lt;MakeDir</span> <span class="na">Condition=</span><span class="s">"!Exists($(TextDirectory))"</span> <span class="na">Directories=</span><span class="s">"$(TextDirectory)"</span><span class="nt">&gt;&lt;/MakeDir&gt;</span>
     <span class="nt">&lt;WriteLinesToFile</span> <span class="na">File=</span><span class="s">"$(TextFile)"</span> <span class="na">Lines=</span><span class="s">"@(Compile)"</span> <span class="na">Overwrite=</span><span class="s">"true"</span> <span class="nt">/&gt;</span>
   <span class="nt">&lt;/Target&gt;</span>
</code></pre></div></div>

<p>我在测试的项目写了很长的参数，这个参数只能通过写入到文件的方式传输，不能通过参数的方法传输。测试项目请点击 <a href="https://download.csdn.net/download/lindexi_gd/10616166">Roslyn 使用 WriteLinesToFile 解决参数过长无法传入 1.0-CSDN下载</a></p>

<!-- 下载文件 NekasNugouMedapai -->

<p>参见：
<a href="https://walterlv.gitee.io/post/known-properties-in-csproj.html">项目文件中的已知属性（知道了这些，就不会随便在 csproj 中写死常量啦） - walterlv</a></p>

<p><img src="https://i.loli.net/2018/08/20/5b7aab757d2f9.jpg" alt="" /></p>

:ET