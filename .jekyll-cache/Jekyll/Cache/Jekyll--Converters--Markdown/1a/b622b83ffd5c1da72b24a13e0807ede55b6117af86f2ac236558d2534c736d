I"Y7<p>本文告诉大家使用 Magick.NET 的方法播放 gif 图片。</p>

<!--more-->

<!-- CreateTime:2018/2/13 17:23:03 -->

<div id="toc"></div>

<!-- csdn -->
<!-- 标签：WPF，gif -->

<p>最近在做 gif 播放，发现 gif 播放需要很多内存，于是就使用  Magick.NET 播放，但是这个方式也需要很多的内存。播放一张 <a href="https://lindexi.github.io/lindexi/post/win10-uwp-%E8%90%A4%E7%81%AB%E8%99%AB%E6%95%88%E6%9E%9C.html">uwp 萤火虫</a> 需要 600 M 内存。但是我还是把方法记下。</p>

<h2 id="安装-magicknet">安装 Magick.NET</h2>

<p>可以选择的很多，如果只是做测试，那么建议直接使用 AnyCPU 这样就不需要关心在哪里使用。里面的选项 Qn中的n就是表示质量，一般使用 8 就可以啦。</p>

<p>安装的方法建议使用 nuget 下载，nuget 可以使用国内博客园的源，当然现在大法更新了速度，安装也不难。</p>

<h2 id="解析-gif">解析 gif</h2>

<p>安装完成之后就可以使用，不过使用之前需要先设置缓存<code class="language-plaintext highlighter-rouge">MagickAnyCPU.CacheDirectory</code>，然后进行解析gif。关于解析参见：<a href="https://lindexi.github.io/lindexi/post/WPF-%E4%B8%80%E4%B8%AA%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84-gif-%E8%A7%A3%E6%9E%90%E5%BA%93.html">WPF 一个性能比较好的 gif 解析库 - 林德熙</a>，这篇文章的解析只能播放常规的 gif ，对于压缩的 gif 是无法进行播放的，如果需要播放压缩后的 gif 那么需要使用 <code class="language-plaintext highlighter-rouge">Coalesce</code> ，一旦使用了就需要大概800M的内存，虽然很快就gc了。</p>

<p>常规 gif 图是直接把图片存放，对于这个文件，只需要把他分为多个 图片播放出来就好，需要注意就是他的图片时间，多久才继续播放。解析这个格式很简单，还可以使用大法的[wpf GifBitmapDecoder 解析 gif 格式(https://lindexi.github.io/lindexi/post/wpf-GifBitmapDecoder-%E8%A7%A3%E6%9E%90-gif-%E6%A0%BC%E5%BC%8F.html )</p>

<p>压缩的 gif 是把两个图片，判断这张图片有哪些像素和上一张一样，如果存在，就忽略。这个算法可以减少图片的空间。但是解析难度有些大，因为需要获得播放的上一个图片才可以进行解析这一张图片。</p>

<p>本文的解析gif 方法已经在<a href="https://lindexi.github.io/lindexi/post/WPF-%E4%B8%80%E4%B8%AA%E6%80%A7%E8%83%BD%E6%AF%94%E8%BE%83%E5%A5%BD%E7%9A%84-gif-%E8%A7%A3%E6%9E%90%E5%BA%93.html">WPF 一个性能比较好的 gif 解析库 - 林德熙</a>讲到，下面就是代码。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="n">collection</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MagickImageCollection</span><span class="p">(</span><span class="n">File</span><span class="p">);</span>

</code></pre></div></div>

<h2 id="播放-gif">播放 gif</h2>

<p>这次播放的方式不是使用 image，而是直接写一个底层的控件播放，请看代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">SuxlzHjp</span> <span class="p">:</span> <span class="n">UIElement</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="nf">SuxlzHjp</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="n">MagickAnyCPU</span><span class="p">.</span><span class="n">CacheDirectory</span> <span class="p">=</span> <span class="s">"E:\\temp"</span><span class="p">;</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">void</span> <span class="nf">Play</span><span class="p">()</span>
        <span class="p">{</span>
            <span class="k">if</span> <span class="p">(</span><span class="kt">string</span><span class="p">.</span><span class="nf">IsNullOrEmpty</span><span class="p">(</span><span class="n">CacheDirectory</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">CacheDirectory</span> <span class="p">=</span> <span class="n">Path</span><span class="p">.</span><span class="nf">Combine</span><span class="p">(</span><span class="n">Environment</span><span class="p">.</span><span class="n">CurrentDirectory</span><span class="p">,</span> <span class="s">"temp"</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="k">if</span> <span class="p">(!</span><span class="n">Directory</span><span class="p">.</span><span class="nf">Exists</span><span class="p">(</span><span class="n">CacheDirectory</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="n">Directory</span><span class="p">.</span><span class="nf">CreateDirectory</span><span class="p">(</span><span class="n">CacheDirectory</span><span class="p">);</span>
            <span class="p">}</span>
            <span class="n">MagickAnyCPU</span><span class="p">.</span><span class="n">CacheDirectory</span> <span class="p">=</span> <span class="n">CacheDirectory</span><span class="p">;</span>

            <span class="n">collection</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">MagickImageCollection</span><span class="p">(</span><span class="n">File</span><span class="p">);</span>

            <span class="kt">int</span> <span class="n">n</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
            <span class="n">Task</span><span class="p">.</span><span class="nf">Run</span><span class="p">(</span><span class="k">async</span> <span class="p">()</span> <span class="p">=&gt;</span>
            <span class="p">{</span>
                <span class="k">while</span> <span class="p">(</span><span class="k">true</span><span class="p">)</span>
                <span class="p">{</span>
                    <span class="k">if</span> <span class="p">(</span><span class="n">n</span> <span class="p">==</span> <span class="n">collection</span><span class="p">.</span><span class="n">Count</span><span class="p">)</span>
                    <span class="p">{</span>
                        <span class="n">n</span> <span class="p">=</span> <span class="m">0</span><span class="p">;</span>
                    <span class="p">}</span>

                    <span class="kt">var</span> <span class="n">t</span> <span class="p">=</span> <span class="n">collection</span><span class="p">[</span><span class="n">n</span><span class="p">];</span>
                    <span class="kt">var</span> <span class="n">delay</span> <span class="p">=</span> <span class="n">t</span><span class="p">.</span><span class="n">AnimationDelay</span> <span class="p">*</span> <span class="m">10</span><span class="p">;</span>

                    <span class="k">await</span> <span class="n">Dispatcher</span><span class="p">.</span><span class="nf">InvokeAsync</span><span class="p">(()</span> <span class="p">=&gt;</span>
                    <span class="p">{</span>
                        <span class="kt">var</span> <span class="n">width</span> <span class="p">=</span> <span class="n">t</span><span class="p">.</span><span class="n">Width</span><span class="p">;</span>
                        <span class="kt">var</span> <span class="n">height</span> <span class="p">=</span> <span class="n">t</span><span class="p">.</span><span class="n">Height</span><span class="p">;</span>
                        <span class="n">RenderTargetBitmap</span> <span class="n">image</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">RenderTargetBitmap</span><span class="p">(</span><span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">,</span> <span class="m">96</span><span class="p">,</span> <span class="m">96</span><span class="p">,</span> <span class="n">PixelFormats</span><span class="p">.</span><span class="n">Pbgra32</span><span class="p">);</span>
                        <span class="n">image</span><span class="p">.</span><span class="nf">Render</span><span class="p">(</span><span class="n">drawing</span><span class="p">);</span>
                        <span class="k">using</span> <span class="p">(</span><span class="kt">var</span> <span class="n">drawingContext</span> <span class="p">=</span> <span class="n">drawing</span><span class="p">.</span><span class="nf">RenderOpen</span><span class="p">())</span>
                        <span class="p">{</span>
                            <span class="n">drawingContext</span><span class="p">.</span><span class="nf">DrawImage</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="n">width</span><span class="p">,</span> <span class="n">height</span><span class="p">));</span>
                            <span class="n">drawingContext</span><span class="p">.</span><span class="nf">DrawImage</span><span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="nf">ToBitmapSource</span><span class="p">(),</span>
                                <span class="k">new</span> <span class="nf">Rect</span><span class="p">(</span><span class="n">t</span><span class="p">.</span><span class="n">BoundingBox</span><span class="p">.</span><span class="n">X</span><span class="p">,</span> <span class="n">t</span><span class="p">.</span><span class="n">BoundingBox</span><span class="p">.</span><span class="n">Y</span><span class="p">,</span> <span class="n">t</span><span class="p">.</span><span class="n">BoundingBox</span><span class="p">.</span><span class="n">Width</span><span class="p">,</span> <span class="n">t</span><span class="p">.</span><span class="n">BoundingBox</span><span class="p">.</span><span class="n">Height</span><span class="p">));</span>
                        <span class="p">}</span>
                        <span class="nf">InvalidateVisual</span><span class="p">();</span>
                    <span class="p">});</span>

                    <span class="k">await</span> <span class="n">Task</span><span class="p">.</span><span class="nf">Delay</span><span class="p">(</span><span class="n">delay</span><span class="p">);</span>
                    <span class="n">n</span><span class="p">++;</span>
                <span class="p">}</span>
            <span class="p">});</span>
        <span class="p">}</span>

        <span class="k">public</span> <span class="k">static</span> <span class="k">readonly</span> <span class="n">DependencyProperty</span> <span class="n">FileProperty</span> <span class="p">=</span> <span class="n">DependencyProperty</span><span class="p">.</span><span class="nf">Register</span><span class="p">(</span>
            <span class="k">nameof</span><span class="p">(</span><span class="n">File</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="kt">string</span><span class="p">),</span> <span class="k">typeof</span><span class="p">(</span><span class="n">SuxlzHjp</span><span class="p">),</span> <span class="k">new</span> <span class="nf">PropertyMetadata</span><span class="p">(</span><span class="k">default</span><span class="p">(</span><span class="kt">string</span><span class="p">)));</span>

        <span class="k">public</span> <span class="k">static</span> <span class="kt">string</span> <span class="n">CacheDirectory</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">File</span>
        <span class="p">{</span>
            <span class="k">get</span> <span class="p">=&gt;</span> <span class="p">(</span><span class="kt">string</span><span class="p">)</span> <span class="nf">GetValue</span><span class="p">(</span><span class="n">FileProperty</span><span class="p">);</span>
            <span class="k">set</span> <span class="p">=&gt;</span> <span class="nf">SetValue</span><span class="p">(</span><span class="n">FileProperty</span><span class="p">,</span> <span class="k">value</span><span class="p">);</span>
        <span class="p">}</span>


        <span class="k">protected</span> <span class="k">override</span> <span class="k">void</span> <span class="nf">OnRender</span><span class="p">(</span><span class="n">DrawingContext</span> <span class="n">drawingContext</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">drawingContext</span><span class="p">.</span><span class="nf">DrawDrawing</span><span class="p">(</span><span class="n">drawing</span><span class="p">.</span><span class="n">Drawing</span><span class="p">);</span>
            <span class="k">base</span><span class="p">.</span><span class="nf">OnRender</span><span class="p">(</span><span class="n">drawingContext</span><span class="p">);</span>
        <span class="p">}</span>

        <span class="k">private</span> <span class="n">DrawingVisual</span> <span class="n">drawing</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">DrawingVisual</span><span class="p">();</span>

        <span class="k">private</span> <span class="n">MagickImageCollection</span> <span class="n">collection</span><span class="p">;</span>
    <span class="p">}</span>

</code></pre></div></div>

<p>可以尝试这个类进行播放，使用方法是设置 File 然后<code class="language-plaintext highlighter-rouge">Play</code>，可以看到这个方法需要使用的内存有 600M ，还不停gc所以这个方式不是我推荐。</p>

<p>其他播放gif的方法请看<a href="https://lindexi.github.io/lindexi/post/WPF-%E6%92%AD%E6%94%BE-gif.html">WPF 播放 gif</a></p>

:ET