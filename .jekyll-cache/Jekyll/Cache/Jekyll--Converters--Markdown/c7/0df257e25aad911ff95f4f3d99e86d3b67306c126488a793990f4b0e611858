I"C)<p>在使用 OpenXML 解析 Office 文档，无论是 PPT 还是 Word 还是 Excel 文档，都会使用标准方式解析。而此时的文档如果包含了错误的 Url 格式，例如不正确的邮件名的时候，将会在解析的时候出错。本文告诉大家如何修复这个问题</p>

<!--more-->

<!-- CreateTime:2021/1/4 16:07:29 -->

<!-- 发布 -->

<p>尽管在 Office 2016 等版本，是可以在用户端制作出格式不正确的 Url 文档，如下图所示的内容</p>

<!-- ![](image/dotnet OpenXML 修复 Office 文档里面包含格式不正确的 Uri 而无法解析/dotnet OpenXML 修复 Office 文档里面包含格式不正确的 Uri 而无法解析0.png) -->

<p><img src="http://image.acmx.xyz/lindexi%2F202114167365594.jpg" alt="" /></p>

<p>此时在执行解析的时候，将会提示如下代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DocumentFormat.OpenXml.Packaging.OpenXmlPackageException:“A malformed URI was found in the document. Please provide a OpenSettings.RelationshipErrorRewriter to handle these errors while opening a package.”
</code></pre></div></div>

<p>或者在更古老的 OpenXML SDK 里面会提示下面代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>DocumentFormat.OpenXml.Packaging.OpenXmlPackageException: Invalid Hyperlink: Malformed URI is embedded as a hyperlink in the document.
   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load() in OpenXmlPackage.cs: line 490
   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(String path, Boolean readWriteMode) in OpenXmlPackage.cs: line 402
   at DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(String path, Boolean isEditable, OpenSettings openSettings) in PackageDocument.cs: line 297
   at  DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(String path, Boolean isEditable) in PackageDocument.cs: line 256
</code></pre></div></div>

<p>和以下内容代码</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>   at System.Uri.CreateThis(String uri, Boolean dontEscape, UriKind uriKind)
   at System.Uri..ctor(String uriString, UriKind uriKind)
   at MS.Internal.IO.Packaging.InternalRelationshipCollection.ProcessRelationshipAttributes(XmlCompatibilityReader reader)
   at MS.Internal.IO.Packaging.InternalRelationshipCollection.ParseRelationshipPart(PackagePart part)
   at MS.Internal.IO.Packaging.InternalRelationshipCollection..ctor(Package package, PackagePart part)
   at System.IO.Packaging.PackagePart.EnsureRelationships()
   at System.IO.Packaging.PackagePart.GetRelationshipsHelper(String filterString)
   at System.IO.Packaging.PackagePart.GetRelationships()
   at DocumentFormat.OpenXml.Packaging.PackagePartRelationshipPropertyCollection..ctor(PackagePart packagePart)
   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)
   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)
   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load()
</code></pre></div></div>

<p>这是一个古老的坑，在 2015 就有人在官方报告，请看 <a href="https://github.com/OfficeDev/Open-XML-SDK/issues/38">Malformed mailto Hyperlink causes Exception on .NET 4.5+ · Issue #38 · OfficeDev/Open-XML-SDK</a></p>

<p>而在 OpenXML SDK 的 2.12.0 终于提供了修复方法，更改代码请看 <a href="https://github.com/OfficeDev/Open-XML-SDK/pull/793">Add a relationship rewriter to help sanitize malformed URIs by twsouthwick · Pull Request #793 · OfficeDev/Open-XML-SDK</a></p>

<p>可以看到我也在这个修复中，提了一些有趣的看法</p>

<p>在 2.12.0 或以上的版本，可以在 OpenSettings 里面传入如何处理格式不对的 Uri 的文档，如本文使用到的测试文档，这是一个 Excel 文档，这个文档里面包含下面代码</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nt">&lt;si&gt;</span>
    <span class="nt">&lt;t</span> <span class="na">xml:space=</span><span class="s">"preserve"</span><span class="nt">&gt;</span>mailto:mailto@one@ <span class="nt">&lt;/t&gt;</span>
  <span class="nt">&lt;/si&gt;</span>
</code></pre></div></div>

<p>可以看到这个超链接是格式不正确的，此时如果使用 Uri 的构造函数传入，将会提示格式出错</p>

<p>在 2.12.0 或以上版本提供了重写的方法，判断如果格式不正确，那么让开发者返回一个正确的格式，重新写入回文档，这样就能修复此问题，如下面代码的实现</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">openSettings</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">OpenSettings</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">RelationshipErrorHandlerFactory</span> <span class="p">=</span> <span class="n">RelationshipErrorHandler</span><span class="p">.</span><span class="nf">CreateRewriterFactory</span><span class="p">(</span><span class="n">Rewriter</span><span class="p">)</span>
            <span class="p">};</span>
</code></pre></div></div>

<p>以上代码使用了 RelationshipErrorHandler.CreateRewriterFactory 方法传入了 Rewriter 方法，在 Rewriter 方法里面提供了返回正确的值的方法</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 表示如何重写修复超链接格式</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="c1">/// &lt;param name="partUri"&gt;这个 &lt;paramref name="uri"/&gt; 属于哪个文档 Part 内容，值如 /xl/worksheets/_rels/sheet1.xml.rels 等&lt;/param&gt;</span>
        <span class="c1">/// &lt;param name="id"&gt;这个资源的值&lt;/param&gt;</span>
        <span class="c1">/// &lt;param name="uri"&gt;格式不对的 Uri 内容&lt;/param&gt;</span>
        <span class="c1">/// &lt;returns&gt;&lt;/returns&gt;</span>
        <span class="k">static</span> <span class="kt">string</span> <span class="nf">Rewriter</span><span class="p">(</span><span class="n">Uri</span> <span class="n">partUri</span><span class="p">,</span> <span class="kt">string</span> <span class="n">id</span><span class="p">,</span> <span class="kt">string</span> <span class="n">uri</span><span class="p">)</span>
            <span class="p">=&gt;</span> <span class="s">$"http://unknown?id=</span><span class="p">{</span><span class="n">id</span><span class="p">}</span><span class="s">"</span><span class="p">;</span>
</code></pre></div></div>

<p>在创建文档读取的时候，传入 OpenSettings 即可，如打开 Excel 文档</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="k">using</span> <span class="p">(</span><span class="n">FileStream</span> <span class="n">fs</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">FileStream</span><span class="p">(</span><span class="n">fileName</span><span class="p">,</span> <span class="n">FileMode</span><span class="p">.</span><span class="n">Open</span><span class="p">,</span> <span class="n">FileAccess</span><span class="p">.</span><span class="n">ReadWrite</span><span class="p">,</span> <span class="n">FileShare</span><span class="p">.</span><span class="n">ReadWrite</span><span class="p">))</span>
            <span class="p">{</span>
                <span class="k">using</span> <span class="p">(</span><span class="n">SpreadsheetDocument</span> <span class="n">doc</span> <span class="p">=</span> <span class="n">SpreadsheetDocument</span><span class="p">.</span><span class="nf">Open</span><span class="p">(</span><span class="n">fs</span><span class="p">,</span> <span class="n">isEditable</span><span class="p">:</span> <span class="k">true</span><span class="p">,</span> <span class="n">openSettings</span><span class="p">))</span>
                <span class="p">{</span>

                <span class="p">}</span>
            <span class="p">}</span>
</code></pre></div></div>

<p>采用本文的方法，就需要让文档的打开方式支持可以写入，否则依然无法解析。我在 GitHub 上问了 <a href="https://github.com/twsouthwick">Taylor Southwick</a> 大佬能否在只读下，解决此问题，大佬的回复是必须开启写入权限 <a href="https://github.com/OfficeDev/Open-XML-SDK/pull/793/files#r471867355">https://github.com/OfficeDev/Open-XML-SDK/pull/793/files#r471867355</a></p>

<p>当前的逻辑是如果读取到文档里面有 Uri 格式不对的资源，就调用 Rewriter 方法，在业务端尝试解决，如我上面代码就返回一个不认识的格式正确的链接。然后重新写回到文档里面，这样就能修复此问题</p>

<p>也可以在尝试使用只读的方式读取，只有在出现格式不对的时候，再复制文档一份用来编辑写入。或者文档的内容本身不大，全部读取到内存里面，在内存里面进行读写</p>

<p>本文代码放在 <a href="https://github.com/lindexi/lindexi_gd/tree/2b042ed0/BelehereluJewelemkiho">github</a> 欢迎小伙伴访问</p>

<p>当然了，这个坑还是需要 dotnet runtime 来背，详细请看 <a href="https://github.com/dotnet/runtime/issues/26084">System.IO.Packaging.Package should have a way to handle common errors with malformed packages · Issue #26084 · dotnet/runtime</a></p>

<p>本文的属性是依靠 <a href="https://blog.lindexi.com/post/dotnet-OpenXML-%E8%A7%A3%E5%8E%8B%E7%BC%A9%E6%96%87%E6%A1%A3%E4%B8%BA%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B7%A5%E5%85%B7.html">dotnet OpenXML 解压缩文档为文件夹工具</a> 工具协助测试的，这个工具是开源免费的工具，欢迎小伙伴使用</p>

<p>更多请看 <a href="https://blog.lindexi.com/post/Office-%E4%BD%BF%E7%94%A8-OpenXML-SDK-%E8%A7%A3%E6%9E%90%E6%96%87%E6%A1%A3%E5%8D%9A%E5%AE%A2%E7%9B%AE%E5%BD%95.html">Office 使用 OpenXML SDK 解析文档博客目录</a></p>

:ET