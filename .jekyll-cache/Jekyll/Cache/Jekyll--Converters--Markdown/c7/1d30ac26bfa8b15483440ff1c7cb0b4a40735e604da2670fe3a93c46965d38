I"WU<p>我在开发的时候需要使用到一些 DEBUG 库进行调试，但是我的库是通过 NuGet 给用户的，如果在 NuGet 里面使用到了 DEBUG 的库那么会让代码的运行效率降低。于是我就找到一个方法，可以在 NuGet 同时打包调试和发布的包，这样在用户调试的时候就可以使用调试的代码</p>

<!--more-->

<!-- CreateTime:2019/4/15 16:13:42 -->

<!-- csdn -->

<!-- 标签：VisualStudio，调试,nuget -->

<p>我在一个库写代码，我需要做一点黑科技，让<a href="https://blog.walterlv.com/">吕毅</a> 在调试的时候输出的是 林德熙是逗比，但是在他发布的时候却输出吕毅是逗比那么我需要如何做？</p>

<p>打开 <a href="https://blog.lindexi.com/post/VisualStudio-2019-%E6%96%B0%E7%89%B9%E6%80%A7.html">VisualStudio 2019</a> 创建一个项目，然后添加下面一点代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">using</span> <span class="nn">System</span><span class="p">;</span>

<span class="k">namespace</span> <span class="nn">LerewararraNurfabeyo</span>
<span class="p">{</span>
    <span class="k">public</span> <span class="k">class</span> <span class="nc">WijonakabaiBohallcallcem</span>
    <span class="p">{</span>
        <span class="k">public</span> <span class="k">void</span> <span class="nf">Foo</span><span class="p">()</span>
        <span class="p">{</span>
<span class="cp">#if DEBUG
</span>            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"林德熙是逗比"</span><span class="p">);</span>
<span class="cp">#else
</span>            <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="s">"吕毅是逗比"</span><span class="p">);</span>
<span class="cp">#endif
</span>
        <span class="p">}</span>
    <span class="p">}</span>
<span class="p">}</span>

</code></pre></div></div>

<p>使用右击一键打包 NuGet 的方法创建一个 NuGet 包，这是 VisualStudio 2017 的 <a href="https://blog.lindexi.com/post/VisualStudio-%E4%BD%BF%E7%94%A8%E6%96%B0%E9%A1%B9%E7%9B%AE%E6%A0%BC%E5%BC%8F%E5%BF%AB%E9%80%9F%E6%89%93%E5%87%BA-Nuget-%E5%8C%85.html">VisualStudio 使用新项目格式快速打出 Nuget 包</a> 功能很好用</p>

<p><img src="http://image.acmx.xyz/lindexi%2F2019415144444107" alt="" /></p>

<p>再创建一个项目，为了直接引用上面测试项目的 NuGet 需要做一点黑科技，第一步是让测试项目的 NuGet 输出到一个文件夹</p>

<p>在 sln 所在的文件夹添加 <a href="https://blog.lindexi.com/post/Roslyn-%E4%BD%BF%E7%94%A8-Directory.Build.props-%E6%96%87%E4%BB%B6%E5%AE%9A%E4%B9%89%E7%BC%96%E8%AF%91.html">Directory.Build.props</a> 文件，在这个文件可以设置全局的项目输出的文件夹</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;</span><span class="n">Project</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">PackageOutputPath</span><span class="p">&gt;</span><span class="err">$</span><span class="p">(</span><span class="n">MSBuildThisFileDirectory</span><span class="p">)</span><span class="n">package</span><span class="p">&lt;/</span><span class="n">PackageOutputPath</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">PropertyGroup</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">Project</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>于是测试项目就会输出到这个文件夹，下面再创建一个控制台项目，在这个项目里面引用测试项目的代码</p>

<p>我是在相同的 sln 创建项目，所以写的文件夹都是相对的，文件夹请看 <a href="https://github.com/lindexi/lindexi_gd/tree/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo">代码</a></p>

<p>为了引用到测试项目的输出需要添加 nuget.config 文件，通过在命令行输入 <code class="language-plaintext highlighter-rouge">dotnet new nuget</code> 就可以成功创建，创建完成需要修改相对文件夹，这个科技请看<a href="https://blog.lindexi.com/post/VisualStudio-%E7%BB%99%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E7%89%B9%E6%AE%8A%E7%9A%84-Nuget-%E7%9A%84%E9%93%BE%E6%8E%A5.html">VisualStudio 给项目添加特殊的 Nuget 的链接</a> 通过这个文件可以修改本地的输出</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="p">=</span><span class="s">"1.0"</span> <span class="n">encoding</span><span class="p">=</span><span class="s">"utf-8"</span><span class="p">?&gt;</span>
<span class="p">&lt;</span><span class="n">configuration</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">packageSources</span><span class="p">&gt;</span>
        <span class="p">&lt;!--</span><span class="n">To</span> <span class="n">inherit</span> <span class="n">the</span> <span class="k">global</span> <span class="n">NuGet</span> <span class="n">package</span> <span class="n">sources</span> <span class="k">remove</span> <span class="n">the</span> <span class="p">&lt;</span><span class="n">clear</span><span class="p">/&gt;</span> <span class="n">line</span> <span class="n">below</span> <span class="p">--&gt;</span>
        <span class="p">&lt;</span><span class="n">clear</span><span class="p">/&gt;</span>
        <span class="p">&lt;</span><span class="k">add</span> <span class="n">key</span><span class="p">=</span><span class="s">"nuget"</span> <span class="k">value</span><span class="p">=</span><span class="s">"..\package"</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="n">packageSources</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">configuration</span><span class="p">&gt;</span>

</code></pre></div></div>

<p>具体文件请看： <a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/WhawlalljeaceahearlurKudaiheko/nuget.config">nuget.config</a></p>

<p>通过 dotnet add package 测试项目名 可以安装了测试项目的输出，具体请看 <a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/WhawlalljeaceahearlurKudaiheko/WhawlalljeaceahearlurKudaiheko.csproj">代码</a></p>

<p>现在开始尝试编译，会发现无论是 DEBUG 下还是发布版本都是输出 林德熙是逗比，这样显然不是我需要的</p>

<p>现在简单的方法已经解决不了了，可以通过复杂的 NuGet 命令做到，先添加 NuGet 到环境变量，这样可以在任意的地方使用到命令</p>

<p>在 <a href="https://www.nuget.org/downloads">https://www.nuget.org/downloads</a> 下载最新的 Nuget 软件</p>

<p>通过输入 Nuget 命令创建 <a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/LerewararraNurfabeyo/LerewararraNurfabeyo.nuspec">LerewararraNurfabeyo.nuspec</a> 文件，这个命令请看<a href="https://docs.microsoft.com/en-us/nuget/tools/cli-ref-spec?wt.mc_id=MVP">NuGet CLI spec command</a></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nuget</span> <span class="n">spec</span> <span class="n">LerewararraNurfabeyo</span><span class="p">.</span><span class="n">csproj</span>
</code></pre></div></div>

<p>现在就创建了 LerewararraNurfabeyo.nuspec 文件，需要在这个文件里面替换很多代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="p">=</span><span class="s">"1.0"</span><span class="p">?&gt;</span>
<span class="p">&lt;</span><span class="n">package</span> <span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="n">metadata</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">id</span><span class="p">&gt;</span><span class="n">LerewararraNurfabeyo</span><span class="p">&lt;/</span><span class="n">id</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">version</span><span class="p">&gt;</span><span class="m">1.0</span><span class="p">.</span><span class="m">2</span><span class="p">&lt;/</span><span class="n">version</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">title</span><span class="p">&gt;</span><span class="n">LerewararraNurfabeyo</span><span class="p">&lt;/</span><span class="n">title</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">authors</span><span class="p">&gt;</span><span class="n">lindexi</span><span class="p">&lt;/</span><span class="n">authors</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">owners</span><span class="p">&gt;</span><span class="n">lindexi</span><span class="p">&lt;/</span><span class="n">owners</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">requireLicenseAcceptance</span><span class="p">&gt;</span><span class="k">false</span><span class="p">&lt;/</span><span class="n">requireLicenseAcceptance</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">description</span><span class="p">&gt;</span><span class="err">测试代码</span><span class="p">&lt;/</span><span class="n">description</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">copyright</span><span class="p">&gt;</span><span class="n">Copyright</span> <span class="m">2019</span><span class="p">&lt;/</span><span class="n">copyright</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="n">metadata</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">files</span><span class="p">&gt;</span>
        
    <span class="p">&lt;/</span><span class="n">files</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">package</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>我需要在 files 里面添加调试和发布的代码，也就是需要先编译了调试代码和发布的代码才可以打包。可以通过一个命令行执行编译，创建一个 cmd 文件，在这个文件里面添加编译代码，这个文件的代码放在 <a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/LerewararraNurfabeyo/package.cmd">github </a> 这是里面的代码</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">@echo</span>

<span class="n">dotnet</span> <span class="n">build</span> <span class="p">--</span><span class="n">configuration</span> <span class="n">Release</span>
<span class="n">dotnet</span> <span class="n">build</span> <span class="p">--</span><span class="n">configuration</span> <span class="n">Debug</span>
</code></pre></div></div>

<p>可以知道编译的文件输出在 <code class="language-plaintext highlighter-rouge">bin\Debug\netcoreapp3.0</code> 和 <code class="language-plaintext highlighter-rouge">bin\Release\netcoreapp3.0</code> 需要将文件放在 nuget 文件夹</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="p">&lt;</span><span class="n">file</span> <span class="n">src</span><span class="p">=</span><span class="s">"bin\Debug\netcoreapp3.0\LerewararraNurfabeyo.dll"</span> <span class="n">target</span><span class="p">=</span><span class="s">"lib\debug\LerewararraNurfabeyo.dll"</span> <span class="p">/&gt;</span>
        <span class="p">&lt;</span><span class="n">file</span> <span class="n">src</span><span class="p">=</span><span class="s">"bin\Debug\netcoreapp3.0\LerewararraNurfabeyo.pdb"</span> <span class="n">target</span><span class="p">=</span><span class="s">"lib\debug\LerewararraNurfabeyo.pdb"</span> <span class="p">/&gt;</span>
        <span class="p">&lt;</span><span class="n">file</span> <span class="n">src</span><span class="p">=</span><span class="s">"bin\Release\netcoreapp3.0\LerewararraNurfabeyo.dll"</span> <span class="n">target</span><span class="p">=</span><span class="s">"lib\release\LerewararraNurfabeyo.dll"</span> <span class="p">/&gt;</span>
        <span class="p">&lt;</span><span class="n">file</span> <span class="n">src</span><span class="p">=</span><span class="s">"bin\Release\netcoreapp3.0\LerewararraNurfabeyo.pdb"</span> <span class="n">target</span><span class="p">=</span><span class="s">"lib\release\LerewararraNurfabeyo.pdb"</span> <span class="p">/&gt;</span>
</code></pre></div></div>

<p>虽然添加了文件但是还不会自动选择在调试下使用调试的代码，在发布下使用发布的代码，需要添加一个 <code class="language-plaintext highlighter-rouge">LerewararraNurfabeyo.targets</code> 文件在调试的时候引用调试的代码</p>

<p>这里的 targets 文件的命名要求是 nuget 包对应的 id 同时放在 build 文件夹里面，也就是打开 nuget包可以看到 <code class="language-plaintext highlighter-rouge">build\id.targets</code> 里面的代码才可以运行，关于这个文件请看<a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/LerewararraNurfabeyo/package/LerewararraNurfabeyo.targets">代码</a></p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">&lt;?</span><span class="n">xml</span> <span class="n">version</span><span class="p">=</span><span class="s">"1.0"</span> <span class="n">encoding</span><span class="p">=</span><span class="s">"utf-8"</span><span class="p">?&gt;</span>
<span class="p">&lt;</span><span class="n">Project</span> <span class="n">ToolsVersion</span><span class="p">=</span><span class="s">"4.0"</span> <span class="n">xmlns</span><span class="p">=</span><span class="s">"http://schemas.microsoft.com/developer/msbuild/2003"</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="n">ItemGroup</span> <span class="n">Condition</span><span class="p">=</span><span class="s">"'$(Configuration)' == 'DEBUG'"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">Reference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"LerewararraNurfabeyo"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">HintPath</span><span class="p">&gt;</span><span class="err">$</span><span class="p">(</span><span class="n">MSBuildThisFileDirectory</span><span class="p">)..</span><span class="err">\</span><span class="n">lib</span><span class="err">\</span><span class="n">debug</span><span class="err">\</span><span class="n">LerewararraNurfabeyo</span><span class="p">.</span><span class="n">dll</span><span class="p">&lt;/</span><span class="n">HintPath</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">Reference</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">ItemGroup</span><span class="p">&gt;</span>

    <span class="p">&lt;</span><span class="n">ItemGroup</span> <span class="n">Condition</span><span class="p">=</span><span class="s">"'$(Configuration)' == 'RELEASE'"</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="n">Reference</span> <span class="n">Include</span><span class="p">=</span><span class="s">"LerewararraNurfabeyo"</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="n">HintPath</span><span class="p">&gt;</span><span class="err">$</span><span class="p">(</span><span class="n">MSBuildThisFileDirectory</span><span class="p">)..</span><span class="err">\</span><span class="n">lib</span><span class="err">\</span><span class="n">release</span><span class="err">\</span><span class="n">LerewararraNurfabeyo</span><span class="p">.</span><span class="n">dll</span><span class="p">&lt;/</span><span class="n">HintPath</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="n">Reference</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="n">ItemGroup</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="n">Project</span><span class="p">&gt;</span>
</code></pre></div></div>

<p>通过 <code class="language-plaintext highlighter-rouge">$(Configuration)</code> 判断当前是调试还是发布，从而引用不同的代码，在 <code class="language-plaintext highlighter-rouge">$(MSBuildThisFileDirectory)</code> 将会拿到当前这个文件的路径，通过相对的文件引用就可以找到</p>

<p>这时需要将这个文件打包</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="p">&lt;</span><span class="n">file</span> <span class="n">src</span><span class="p">=</span><span class="s">"package\LerewararraNurfabeyo.targets"</span> <span class="n">target</span><span class="p">=</span><span class="s">"build\LerewararraNurfabeyo.targets"</span> <span class="p">/&gt;</span>

</code></pre></div></div>

<p>此时打包文件就写好了，请看<a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/LerewararraNurfabeyo/LerewararraNurfabeyo.nuspec">代码</a></p>

<p>通过 Nuget 命令打包</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">nuget</span> <span class="n">pack</span> <span class="n">LerewararraNurfabeyo</span><span class="p">.</span><span class="n">nuspec</span>
</code></pre></div></div>

<p>将这个命令放在 package 命令文件，请看<a href="https://github.com/lindexi/lindexi_gd/blob/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo/LerewararraNurfabeyo/package.cmd">代码</a></p>

<p>这时打包完成的包是放在相同的文件夹，因为刚才已经用到在上一层的文件夹，所以需要修改代码，请看<a href="https://github.com/lindexi/lindexi_gd/commit/b82cc79d39c1238c68b2426e41b790b61344e7f7">github</a> 的修改，通过 <code class="language-plaintext highlighter-rouge">-OutputDirectory</code> 修改输出文件夹</p>

<p>现在尝试测试一下，更新一下测试项目的库然后在调试和发布下运行看输出</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// 在调试下运行</span>
<span class="n">dotnet</span> <span class="n">run</span> 
<span class="c1">// 输出林德熙是逗比</span>

<span class="c1">// 在发布运行</span>
<span class="n">dotnet</span> <span class="n">run</span> <span class="p">--</span><span class="n">configuration</span> <span class="n">release</span>
<span class="c1">// 输出吕毅是逗比</span>
</code></pre></div></div>

<p>通过这个方法就可以在库同时包含调试的代码和发布的代码，因为在调试的代码可以添加很多影响性能的代码，所以通过这个方法可以方便调试也提高发布代码的效率，但是需要自己写一个<a href="https://github.com/lindexi/lindexi_gd/blob/b82cc79d39c1238c68b2426e41b790b61344e7f7/LerewararraNurfabeyo/LerewararraNurfabeyo/LerewararraNurfabeyo.nuspec">nuspec</a> 文件用来打包，因为需要连续编译两次。需要在 <a href="https://github.com/lindexi/lindexi_gd/blob/b82cc79d39c1238c68b2426e41b790b61344e7f7/LerewararraNurfabeyo/LerewararraNurfabeyo/package/LerewararraNurfabeyo.targets">targets</a> 文件在不同的版本使用不同的库</p>

<p>所有代码请看 <a href="https://github.com/lindexi/lindexi_gd/tree/09626aa29c65d8efb00e71797e3b4e6b88c19eff/LerewararraNurfabeyo">github</a></p>

<p><a href="https://blog.lindexi.com/post/Roslyn-%E4%BD%BF%E7%94%A8-Directory.Build.props-%E6%96%87%E4%BB%B6%E5%AE%9A%E4%B9%89%E7%BC%96%E8%AF%91.html">Roslyn 使用 Directory.Build.props 文件定义编译</a></p>

<p><a href="https://blog.lindexi.com/post/Roslyn-%E4%BD%BF%E7%94%A8-Directory.Build.props-%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE.html">Roslyn 使用 Directory.Build.props 管理多个项目配置</a></p>

<p><a href="https://blog.lindexi.com/post/VisualStudio-2019-%E6%96%B0%E7%89%B9%E6%80%A7.html">VisualStudio 2019 新特性</a></p>

<p><a href="https://blog.lindexi.com/post/VisualStudio-%E7%BB%99%E9%A1%B9%E7%9B%AE%E6%B7%BB%E5%8A%A0%E7%89%B9%E6%AE%8A%E7%9A%84-Nuget-%E7%9A%84%E9%93%BE%E6%8E%A5.html">VisualStudio 给项目添加特殊的 Nuget 的链接</a></p>

<p>VisualStudio 使用新项目格式快速打出 Nuget 包](https://blog.lindexi.com/post/VisualStudio-%E4%BD%BF%E7%94%A8%E6%96%B0%E9%A1%B9%E7%9B%AE%E6%A0%BC%E5%BC%8F%E5%BF%AB%E9%80%9F%E6%89%93%E5%87%BA-Nuget-%E5%8C%85.html)</p>

<p><a href="https://stackoverflow.com/a/37676225/6116637">How to create a nuget package with both release and debug dll’s using nuget package explorer</a></p>

<p><a href="https://docs.microsoft.com/en-us/nuget/create-packages/creating-a-package?wt.mc_id=MVP">How to create a NuGet package</a></p>

<p><a href="https://docs.microsoft.com/en-us/nuget/tools/cli-ref-spec?wt.mc_id=MVP">NuGet CLI spec command</a></p>

:ET