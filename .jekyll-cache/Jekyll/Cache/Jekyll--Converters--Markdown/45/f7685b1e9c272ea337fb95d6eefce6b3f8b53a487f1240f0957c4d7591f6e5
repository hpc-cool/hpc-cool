I"r<p>有时候需要知道某个元素是否已经被移除，在优化内存的时候，有时候无法判断一个元素是否在某个地方被引用，就需要判断对象设置空时是否被回收。
本文告诉大家一个简单的方法判断对象是否被移除。</p>

<!--more-->

<!-- CreateTime:2018/8/10 19:16:50 -->

<p>在 C# 是不需要自己手工释放对象，微软会判断对象是否被引用，如果一个对象被引用了，那么就不会移除这个对象。</p>

<p>但是有一种引用是弱引用，虽然他引用了对象，但是垃圾回收是不会因为对象有弱引用就不移除他。所以可以使用弱引用判断对象是否被移除。</p>

<p>例如有一个对象 A ，这个对象在很多地方都使用，但是不确定在某个移除 A 的地方之后，是否A会被移除，于是可以使用下面的代码来判断A是否被移除。</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="k">private</span> <span class="kt">object</span> <span class="n">Foo</span> <span class="p">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span> <span class="p">=</span> <span class="k">new</span> <span class="kt">object</span><span class="p">();</span>

        <span class="k">private</span> <span class="n">WeakReference</span><span class="p">&lt;</span><span class="kt">object</span><span class="p">&gt;</span> <span class="n">FooReference</span> <span class="p">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">private</span> <span class="k">void</span> <span class="nf">Button_OnClick</span><span class="p">(</span><span class="kt">object</span> <span class="n">sender</span><span class="p">,</span> <span class="n">RoutedEventArgs</span> <span class="n">e</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">FooReference</span> <span class="p">=</span> <span class="k">new</span> <span class="n">WeakReference</span><span class="p">&lt;</span><span class="kt">object</span><span class="p">&gt;(</span><span class="n">Foo</span><span class="p">);</span>
            <span class="n">Foo</span> <span class="p">=</span> <span class="k">null</span><span class="p">;</span>
            <span class="n">GC</span><span class="p">.</span><span class="nf">Collect</span><span class="p">();</span>

            <span class="kt">var</span> <span class="n">timer</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">DispatcherTimer</span><span class="p">();</span>
            <span class="n">timer</span><span class="p">.</span><span class="n">Interval</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">TimeSpan</span><span class="p">(</span><span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">0</span><span class="p">,</span> <span class="m">5</span><span class="p">);</span>
            <span class="n">timer</span><span class="p">.</span><span class="n">Tick</span> <span class="p">+=</span> <span class="p">(</span><span class="n">o</span><span class="p">,</span> <span class="n">args</span><span class="p">)</span> <span class="p">=&gt;</span>
            <span class="p">{</span>
                <span class="n">Console</span><span class="p">.</span><span class="nf">WriteLine</span><span class="p">(</span><span class="n">FooReference</span><span class="p">.</span><span class="nf">TryGetTarget</span><span class="p">(</span><span class="k">out</span> <span class="kt">var</span> <span class="n">t</span><span class="p">));</span>
            <span class="p">};</span>
             <span class="n">timer</span><span class="p">.</span><span class="nf">Start</span><span class="p">();</span>
        <span class="p">}</span>      
</code></pre></div></div>

<p>点击按钮可以看到，输出 false ，也就是 Foo 被移除了</p>

<p>上面的代码使用的就是添加一个<code class="language-plaintext highlighter-rouge">WeakReference</code>引用对象，然后在判断对象是否被移除时，尝试获得对象，如果不能获得，那么就是对象被移除。</p>

<p><img src="http://image.acmx.xyz/34fdad35-5dfe-a75b-2b4b-8c5e313038e2%2F20171013131223.jpg" alt="" /></p>

:ET