I"<p>本文告诉大家如何在 UWP 或 WPF 客户端通过将类转换为 json 发送到 asp dotnet core 作为方法的参数</p>

<!--more-->

<!-- CreateTime:2019/2/19 9:14:09 -->

<!-- csdn -->

<p>熟悉客户端开发的小伙伴在看到 asp dotnet core 会发现在使用的时候实际上只是在方法上面添加一个特性，这时通过 URL 访问的数据就会通过路由调用到这个方法，那么如何在客户端通过 URL 调用到方法在方法里面传入类参数？</p>

<p>假设有这样的一个类</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>    <span class="k">public</span> <span class="k">class</span> <span class="nc">KebunerNeefunadrow</span>
    <span class="p">{</span>
        <span class="c1">/// &lt;summary&gt;</span>
        <span class="c1">/// 包的名</span>
        <span class="c1">/// &lt;/summary&gt;</span>
        <span class="k">public</span> <span class="kt">string</span> <span class="n">Name</span> <span class="p">{</span> <span class="k">get</span><span class="p">;</span> <span class="k">set</span><span class="p">;</span> <span class="p">}</span>

        <span class="k">public</span> <span class="kt">string</span> <span class="n">Version</span> <span class="p">{</span> <span class="k">set</span><span class="p">;</span> <span class="k">get</span><span class="p">;</span> <span class="p">}</span>
    <span class="p">}</span>
</code></pre></div></div>

<p>需要将这个类作为参数，发送到 asp dotnet core 的一个方法里面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>        <span class="p">[</span><span class="nf">HttpPost</span><span class="p">(</span><span class="s">"Download"</span><span class="p">)]</span>
        <span class="k">public</span> <span class="n">ActionResult</span> <span class="nf">Download</span><span class="p">([</span><span class="n">FromBody</span><span class="p">]</span><span class="n">KebunerNeefunadrow</span> <span class="n">saljudecooBolor</span><span class="p">)</span>
</code></pre></div></div>

<p>可以通过在客户端用 Json.NET 将类转换为 json 然后调用 URL 这样默认通过 json 转换的 asp dotnet core 就会将 json 转换为类，然后传入下载方法</p>

<p>这里的 asp dotnet core 的方法有两个要求，第一个是特性使用 Post 方法 <code class="language-plaintext highlighter-rouge">[HttpPost("Download")]</code> 这样就告诉 asp dotnet core 这个方法需要通过 Post 调用，同时这个方法的 URL 是 <code class="language-plaintext highlighter-rouge">api/xx/Download</code> 传入的参数同样有一个特性 <code class="language-plaintext highlighter-rouge">[FromBody]</code> 这个特性告诉 asp dotnet core 这个参数从 Post 的内容拿到</p>

<p>在客户端需要通过下面代码转换类为json才可以发送</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">kebunerNeefunadrow</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">KebunerNeefunadrow</span><span class="p">()</span>
            <span class="p">{</span>
                <span class="n">Name</span> <span class="p">=</span> <span class="s">"lindexi"</span><span class="p">,</span>
                <span class="n">Version</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">Version</span><span class="p">(</span><span class="s">"5.1.2"</span><span class="p">).</span><span class="nf">ToString</span><span class="p">()</span>
            <span class="p">};</span>

            <span class="kt">var</span> <span class="n">json</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="n">kebunerNeefunadrow</span><span class="p">);</span>

</code></pre></div></div>

<p>发送 Json 的方法可以通过 HttpClient 发送内容，发送的内容需要通过 ContentType 告诉服务器发送的是 json 才可以</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">stringContent</span> <span class="p">=</span> <span class="k">new</span> <span class="nf">StringContent</span><span class="p">(</span><span class="n">json</span><span class="p">);</span>
            <span class="n">stringContent</span><span class="p">.</span><span class="n">Headers</span><span class="p">.</span><span class="n">ContentType</span><span class="p">.</span><span class="n">MediaType</span> <span class="p">=</span> <span class="s">"application/json"</span><span class="p">;</span>
</code></pre></div></div>

<p>特别注意，默认发送的是文本，需要通过 ContentType 修改为 json 才可以在服务器使用 json转换</p>

<p>通过 httpClient 发送的代码请看下面</p>

<div class="language-csharp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>            <span class="kt">var</span> <span class="n">json</span> <span class="p">=</span> <span class="n">JsonConvert</span><span class="p">.</span><span class="nf">SerializeObject</span><span class="p">(</span><span class="n">kebunerNeefunadrow</span><span class="p">);</span>

            <span class="kt">var</span> <span class="n">response</span> <span class="p">=</span> <span class="k">await</span> <span class="n">httpClient</span><span class="p">.</span><span class="nf">PostAsync</span><span class="p">(</span><span class="n">url</span><span class="p">,</span> <span class="n">stringContent</span><span class="p">);</span>
</code></pre></div></div>

<p>这样就可以在 UWP 或 WPF 客户端调用 asp dotnet core 的方法，在这个方法传入参数</p>

:ET